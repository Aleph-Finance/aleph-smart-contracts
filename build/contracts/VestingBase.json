{
  "contractName": "VestingBase",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawalCap",
          "type": "uint256"
        },
        {
          "internalType": "contract ERC20",
          "name": "_vestingCoin",
          "type": "address"
        },
        {
          "internalType": "enum FrequencyHelper.Frequency",
          "name": "_withdrawalFrequency",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_memberName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_releaseOn",
          "type": "uint256"
        }
      ],
      "name": "AllocationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_memberName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lessAmount",
          "type": "uint256"
        }
      ],
      "name": "AllocationDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_memberName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "AllocationDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_memberName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_additionalAmount",
          "type": "uint256"
        }
      ],
      "name": "AllocationIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_remainingInPool",
          "type": "uint256"
        }
      ],
      "name": "FundRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_previousCap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newCap",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_memberName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_releaseOn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newReleaseDate",
          "type": "uint256"
        }
      ],
      "name": "ScheduleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_memberName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        }
      ],
      "name": "addManyAdmins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earliestWithdrawalDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumVestingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        }
      ],
      "name": "removeManyAdmins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalVested",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCoin",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartedOn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalFrequency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAmountInVesting",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "removeFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_memberName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_releaseOn",
          "type": "uint256"
        }
      ],
      "name": "createAllocation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "deleteAllocation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_additionalAmount",
          "type": "uint256"
        }
      ],
      "name": "increaseAllocation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_lessAmount",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllocation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newReleaseDate",
          "type": "uint256"
        }
      ],
      "name": "extendAllocation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getDrawingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawalCap\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC20\",\"name\":\"_vestingCoin\",\"type\":\"address\"},{\"internalType\":\"enum FrequencyHelper.Frequency\",\"name\":\"_withdrawalFrequency\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_memberName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_releaseOn\",\"type\":\"uint256\"}],\"name\":\"AllocationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_memberName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lessAmount\",\"type\":\"uint256\"}],\"name\":\"AllocationDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_memberName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AllocationDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_memberName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_additionalAmount\",\"type\":\"uint256\"}],\"name\":\"AllocationIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_remainingInPool\",\"type\":\"uint256\"}],\"name\":\"FundRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previousCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCap\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_memberName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_releaseOn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newReleaseDate\",\"type\":\"uint256\"}],\"name\":\"ScheduleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_memberName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"}],\"name\":\"addManyAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_memberName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_releaseOn\",\"type\":\"uint256\"}],\"name\":\"createAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lessAmount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"deleteAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earliestWithdrawalDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newReleaseDate\",\"type\":\"uint256\"}],\"name\":\"extendAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmountInVesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDrawingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_additionalAmount\",\"type\":\"uint256\"}],\"name\":\"increaseAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVestingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"}],\"name\":\"removeManyAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCoin\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartedOn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.\",\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"params\":{\"_address\":\"The address to add to the administrator list.\"}},\"addManyAdmins(address[])\":{\"params\":{\"_accounts\":\"The wallet addresses to add to the administrator list.\"}},\"constructor\":{\"params\":{\"_minPeriod\":\"The minimum vesting period.\",\"_vestingCoin\":\"The ERC20 contract of the coin being vested.\",\"_withdrawalCap\":\"Maximum amount of tokens that can be withdrawn for the specified frequency.\",\"_withdrawalFrequency\":\"The frequency of token withdrawals. If the _withdrawalCap is zero, this variable is ignored.\"}},\"createAllocation(address,string,uint256,uint256)\":{\"params\":{\"_address\":\"The address which will receive the tokens in the future date.\",\"_amount\":\"The total amount of tokens being vested over the period of vesting duration.\",\"_memberName\":\"The name of the candidate for which this vesting schedule allocation is being created for.\",\"_releaseOn\":\"The date on which the first vesting schedule becomes available for withdrawal.\"},\"returns\":{\"_0\":\"Returns true if the vesting schedule allocation was successfully created.\"}},\"decreaseAllocation(address,uint256)\":{\"params\":{\"_address\":\"The address of the beneficiary whose allocation is being requested to be decreased.\",\"_lessAmount\":\"The amount in vesting coin to be decreased from the existing allocation.\"},\"returns\":{\"_0\":\"Returns true if the vesting schedule allocation was successfully decreased.\"}},\"deleteAllocation(address)\":{\"params\":{\"_address\":\"The address of the beneficiary whose allocation is being requested to be deleted.\"},\"returns\":{\"_0\":\"Returns true if the vesting schedule allocation was successfully deleted.\"}},\"extendAllocation(address,uint256)\":{\"params\":{\"_address\":\"The address of the beneficiary who allocation is being requested to be extended.\",\"_newReleaseDate\":\"A new release date to extend the allocation to.\"},\"returns\":{\"_0\":\"Returns true if the vesting schedule allocation was successfully extended.\"}},\"fund()\":{\"returns\":{\"_0\":\"Returns true if the funding was successful.\"}},\"getAvailableFunds()\":{\"returns\":{\"_0\":\"Returns the closing balance of vesting coin held by this contract.\"}},\"getDrawingPower(address)\":{\"params\":{\"_address\":\"The address to check the drawing power of.\"},\"returns\":{\"_0\":\"Returns the amount in vesting coin that can be withdrawn.\"}},\"increaseAllocation(address,uint256)\":{\"params\":{\"_additionalAmount\":\"The additional amount in vesting coin to be addeded to the existing allocation.\",\"_address\":\"The address of the beneficiary whose allocation is being requested to be increased.\"},\"returns\":{\"_0\":\"Returns true if the vesting schedule allocation was successfully increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAdmin(address)\":{\"params\":{\"_address\":\"The address to remove from the administrator list.\"}},\"removeFunds(uint256)\":{\"params\":{\"_amount\":\"The amount desired to withdraw.\"},\"returns\":{\"_0\":\"Returns true if the withdrawal was successful.\"}},\"removeManyAdmins(address[])\":{\"params\":{\"_accounts\":\"The wallet addresses to add to the administrator list.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"params\":{\"_amount\":\"The amount in vesting coin desired to withdraw.\"}}},\"title\":\"Vesting\",\"version\":1},\"userdoc\":{\"events\":{\"Funded(address,uint256,uint256,uint256)\":{\"notice\":\"Events;\"}},\"kind\":\"user\",\"methods\":{\"addAdmin(address)\":{\"notice\":\"Adds the specified address to the list of administrators.\"},\"addManyAdmins(address[])\":{\"notice\":\"Adds multiple addresses to the administrator list.\"},\"admins(address)\":{\"notice\":\"List of administrators.\"},\"constructor\":{\"notice\":\"Constructs this contract\"},\"createAllocation(address,string,uint256,uint256)\":{\"notice\":\"Creates a vesting schedule allocation for a new beneficiary. A beneficiary could mean founders, employees, or advisors. Please note that this action can only be performed by an administrator.\"},\"decreaseAllocation(address,uint256)\":{\"notice\":\"Decreases the total allocation of the specified vesting schedule. Please note that this action can only be performed by an administrator.\"},\"deleteAllocation(address)\":{\"notice\":\"Deletes the specified vesting schedule allocation. Please note that this action can only be performed by an administrator.\"},\"earliestWithdrawalDate()\":{\"notice\":\"The earliest date on which the vested tokens can be redeemed.\"},\"extendAllocation(address,uint256)\":{\"notice\":\"Extends the release date of the specified vesting schedule allocation. Please note that this action can only be performed by an administrator.\"},\"fund()\":{\"notice\":\"Enables this vesting contract to receive the ERC20 (vesting coin). Before calling this function please approve your desired amount of the coin for this smart contract address. Please note that this action is restricted to administrators only.\"},\"getAvailableFunds()\":{\"notice\":\"The balance of this smart contract. \"},\"getDrawingPower(address)\":{\"notice\":\"Gets the drawing power of the beneficiary.\"},\"increaseAllocation(address,uint256)\":{\"notice\":\"Increases the total allocation of the specified vesting schedule. Please note that this action can only be performed by an administrator.\"},\"minimumVestingPeriod()\":{\"notice\":\"The minimum period of vesting.\"},\"pause()\":{\"notice\":\"Pauses the contract.\"},\"removeAdmin(address)\":{\"notice\":\"Removes the specified address from the list of administrators.\"},\"removeFunds(uint256)\":{\"notice\":\"Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances.\"},\"removeManyAdmins(address[])\":{\"notice\":\"Removes multiple addresses to the administrator list.\"},\"totalVested()\":{\"notice\":\"The sum total amount of tokens vested for all allocations.\"},\"totalWithdrawn()\":{\"notice\":\"The sum total amount of tokens withdrawn from all allocations.\"},\"unpause()\":{\"notice\":\"Unpauses the contract and returns to normal state.\"},\"vestingCoin()\":{\"notice\":\"The ERC20 contract of the coin being vested.\"},\"vestingStartedOn()\":{\"notice\":\"The date on which the vesting was started. \"},\"withdraw(uint256)\":{\"notice\":\"This action enables the beneficiaries to withdraw a desired amount from this contract.    \"},\"withdrawalCap()\":{\"notice\":\"Maximum amount of tokens that can be withdrawn for the specified frequency. Zero means that there's no cap;\"},\"withdrawalFrequency()\":{\"notice\":\"The frequency of token withdrawals. If the withdrawalCap is zero, this variable is ignored.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Vesting/VestingBase.sol\":\"VestingBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xb45e104b4d8ecd7f3ad94bdebd7a76bfa258f5bc91444bb4858f75616cfad140\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06abef552fe0601522ef089d68e2f79ed8d15fe0c06dd4f35d7e6e5a1e247363\",\"dweb:/ipfs/QmaT69xxfRukB41W5gWBRDEA5Y96etSExwvqV6qn75g3mg\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/Vesting/CustomAdmin.sol\":{\"keccak256\":\"0x67915c5fb4df6be47ce79b8cb694163c84801c0dd678e570bb8793aafa7a7376\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3a555e5afa823818ee6ba6180d445c19f501a230f76127ea717588e8b7a3b708\",\"dweb:/ipfs/QmRPNpHpGKoQR68X4SqPXABEpztj8PagrJ3Rmt3g11fNvK\"]},\"project:/contracts/Vesting/CustomPausable.sol\":{\"keccak256\":\"0x762f7f6014bae61e98d7c87405bbfdbef00fd9c4be3b615d5556f389293ed344\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://39e4d55f7c867937d13ae73838f5c498ae24419a86d364010850e4701899ff04\",\"dweb:/ipfs/QmRN7UGtxJq8K3Dnq9nvbuQkdgq4MyPzKEZUyHuzV6mCbq\"]},\"project:/contracts/Vesting/VestingBase.sol\":{\"keccak256\":\"0xe76144fbed2f0bc01f28e198b21081c9074e2083909f0e345e5951e9b3d3bacb\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://f868c8cfea0a2b10c058637f4e349d67ac34497009087da8c5ca60fb36a10d2b\",\"dweb:/ipfs/QmSLowuVb3Ka6gyZjNzyyRwFpu8rfoe6vV41dypVLRbVTz\"]},\"project:/contracts/Vesting/frequencyHelper.sol\":{\"keccak256\":\"0x65fdadd3fad04c6e0c499642d7f42a322c874e84b2bf82b2eba38beb6c0e76fb\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8d4d89d50b0c80297edbb0258aca161e1639b19868f6a2bd49f7649315e6d407\",\"dweb:/ipfs/QmNyamVo61Be63ByUc73cHautbVYmmVsomH3zjnyKgMRJB\"]}},\"version\":1}",
  "bytecode": "0x60806040526002805460ff191690553480156200001b57600080fd5b50604051620026ec380380620026ec8339810160408190526200003e9162000210565b6200004933620000af565b6006849055426005819055600a80546001600160a01b0319166001600160a01b03851617905560038490556200008c9085620000ff602090811b62001d2217901c565b6007558215620000a557620000a18162000114565b6004555b50505050620002ac565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200010d82846200026f565b9392505050565b6000808260068111156200012c576200012c62000296565b14156200013d575062015180919050565b600182600681111562000154576200015462000296565b141562000165575062093a80919050565b60028260068111156200017c576200017c62000296565b14156200018d57506213c680919050565b6003826006811115620001a457620001a462000296565b1415620001b5575062278d00919050565b6004826006811115620001cc57620001cc62000296565b1415620001dd57506277f880919050565b6005826006811115620001f457620001f462000296565b141562000205575062eff100919050565b506301e13380919050565b600080600080608085870312156200022757600080fd5b84516020860151604087015191955093506001600160a01b03811681146200024e57600080fd5b6060860151909250600781106200026457600080fd5b939692955090935050565b600082198211156200029157634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052602160045260246000fd5b61243080620002bc6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063706250c811610104578063a065b0bd116100a2578063e4353ad611610071578063e4353ad614610386578063f1bca30f14610399578063f2fde38b146103ac578063fad36ece146103bf57600080fd5b8063a065b0bd14610350578063a8e6e77b14610363578063b60d428814610376578063dba61ab71461037e57600080fd5b80638456cb59116100de5780638456cb59146103075780638971611c1461030f5780638da5cb5b14610318578063936bf9781461033d57600080fd5b8063706250c8146102ed578063715018a6146102f657806378ee3af6146102fe57600080fd5b80633f4ba83a1161017c578063517b49121161014b578063517b4912146102b25780635195bd29146102c55780635c975abb146102cd57806370480275146102da57600080fd5b80633f4ba83a14610275578063429b62e51461027d5780634713a044146102a05780634b319713146102a957600080fd5b8063199cbc54116101b8578063199cbc541461022f5780632e1a7d4d146102465780632f384523146102595780633792bab41461026c57600080fd5b80630715a0b4146101df578063158a774d146102075780631785f53c1461021a575b600080fd5b6101f26101ed366004611e4d565b6103d2565b60405190151581526020015b60405180910390f35b6101f2610215366004611e4d565b61064d565b61022d610228366004611e77565b61084b565b005b61023860085481565b6040519081526020016101fe565b6101f2610254366004611e92565b610918565b6101f2610267366004611e92565b610c31565b61023860045481565b61022d610dd4565b6101f261028b366004611e77565b60016020526000908152604090205460ff1681565b61023860055481565b61023860095481565b6101f26102c0366004611ef2565b610e49565b61023861112b565b6002546101f29060ff1681565b61022d6102e8366004611e77565b61119d565b61023860065481565b61022d611271565b61023860075481565b61022d6112d7565b61023860035481565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101fe565b6101f261034b366004611e4d565b611350565b600a54610325906001600160a01b031681565b61022d610371366004611fa7565b611559565b6101f26116a7565b610238611872565b610238610394366004611e77565b61188b565b61022d6103a7366004611fa7565b611969565b61022d6103ba366004611e77565b611aac565b6101f26103cd366004611e77565b611b77565b3360009081526001602052604081205460ff16806103fa57506000546001600160a01b031633145b61040357600080fd5b6001600160a01b0383166104325760405162461bcd60e51b815260040161042990612054565b60405180910390fd5b6001600160a01b0383166000908152600b602052604090206001015461046a5760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b602052604090206005015460ff16156104a65760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b602052604090206002015442106105365760405162461bcd60e51b815260206004820152603c60248201527f4163636573732069732064656e6965642e205468652076657374696e6720736360448201527f686564756c652077617320616c72656164792072656c65617365642e000000006064820152608401610429565b6001600160a01b0383166000908152600b602052604090206002015482116105e35760405162461bcd60e51b815260206004820152605460248201527f4163636573732069732064656e6965642e20596f752063616e20616c736f206560448201527f7874656e64207468652072656c65617365206461746520627574206e6f74207460648201527334329037ba3432b9103bb0bc9030b937bab7321760611b608482015260a401610429565b6001600160a01b0383166000818152600b6020526040908190206002810180549086905591519192917f48e5c889579453e84d06f5962fd80461fe15c76d7b30530d52d1ae5617571a769161063b91859088906121b6565b60405180910390a25060019392505050565b3360009081526001602052604081205460ff168061067557506000546001600160a01b031633145b61067e57600080fd5b6001600160a01b0383166106a45760405162461bcd60e51b815260040161042990612054565b600082116106b157600080fd5b6001600160a01b0383166000908152600b60205260409020600101546106e95760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b602052604090206005015460ff16156107255760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b60205260409020600401548211156107605760405162461bcd60e51b8152600401610429906121db565b6001600160a01b0383166000908152600b60205260409020600301546107869083611d35565b6001600160a01b0384166000908152600b602052604090206003810191909155600401546107b49083611d35565b6001600160a01b0384166000908152600b60205260409020600401556008546107dd9083611d35565b6008556001600160a01b0383166000818152600b6020526040902060038101547ffefe834c14ff63083c08dce2085888585b19e1b43198dde06d97a38a8379f21d919061082a9086611d22565b8560405161083a939291906121b6565b60405180910390a250600192915050565b3360009081526001602052604090205460ff168061087357506000546001600160a01b031633145b61087c57600080fd5b6001600160a01b03811661088f57600080fd5b6001600160a01b03811660009081526001602052604090205460ff166108b457600080fd5b6000546001600160a01b03828116911614156108cf57600080fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f9190a250565b336000908152600b602052604081206001015482906109495760405162461bcd60e51b81526004016104299061207e565b336000908152600b602052604090206005015460ff161561097c5760405162461bcd60e51b81526004016104299061207e565b336000908152600b6020526040902060020154421015610a175760405162461bcd60e51b815260206004820152604a60248201527f4163636573732069732064656e6965642e20596f7520617265206e6f7420616c60448201527f6c6f77656420746f207769746864726177206265666f7265207468652072656c60648201526932b0b9b2903230ba329760b11b608482015260a401610429565b336000908152600b6020526040902060040154811115610a495760405162461bcd60e51b8152600401610429906121db565b6000610a543361188b565b60035490915015610c2a5781811015610ad55760405162461bcd60e51b815260206004820152603f60248201527f4163636573732069732064656e6965642e20546865207265717565737465642060448201527f616d6f756e74206578636565647320796f757220616c6c6f636174696f6e2e006064820152608401610429565b600754421015610ae457600080fd5b60025460ff1615610af457600080fd5b336000908152600b6020526040902042600782015560040154610b179085611d35565b336000908152600b60205260409020600481019190915560060154610b3c9085611d22565b336000908152600b6020526040902060060155600954610b5c9085611d22565b600955600a5460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd49190612220565b610bdd57600080fd5b336000818152600b60205260409081902090517f18af30a54a1951aeee806c16cdcb8d087ed1a095f0d9a87261b92cef2c6cc92d91610c1d918890612242565b60405180910390a2600192505b5050919050565b3360009081526001602052604081205460ff1680610c5957506000546001600160a01b031633145b610c6257600080fd5b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf9190612264565b90506000610cdb611872565b9050808211610ce957600080fd5b6000610cf58284612293565b905084811015610d0457600080fd5b600a5460405163a9059cbb60e01b8152336004820152602481018790526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d799190612220565b610d8257600080fd5b337f2d2c22b12ce2c4142ec672b74a307ec23572019efd8c9a930a8fc19f0fcd6c8686610daf8482611d35565b6040805192835260208301919091520160405180910390a2600193505050505b919050565b3360009081526001602052604090205460ff1680610dfc57506000546001600160a01b031633145b610e0557600080fd5b60025460ff16610e1457600080fd5b6002805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b3360009081526001602052604081205460ff1680610e7157506000546001600160a01b031633145b610e7a57600080fd5b6001600160a01b038516610ea05760405162461bcd60e51b815260040161042990612054565b60008311610ee25760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21030b6b7bab73a1760891b6044820152606401610429565b6001600160a01b0385166000908152600b602052604090206001015415610f565760405162461bcd60e51b815260206004820152602260248201527f4163636573732069732064656e6965642e204475706c696361746520656e74726044820152613c9760f11b6064820152608401610429565b600754821015610fce5760405162461bcd60e51b815260206004820152603960248201527f4163636573732069732064656e6965642e20506c65617365207370656369667960448201527f2061206c6f6e6765722076657374696e6720706572696f642e000000000000006064820152608401610429565b610fe083610fda611872565b90611d22565b610fe861112b565b10156110065760405162461bcd60e51b8152600401610429906122aa565b6040805161010081018252858152426020808301919091528183018590526060820186905260808201869052600060a0830181905260c0830181905260e083018190526001600160a01b0389168152600b82529290922081518051929391926110729284920190611d9d565b506020820151600182015560408201516002820155606082015160038201556080820151600482015560a082015160058201805460ff191691151591909117905560c0820151600682015560e0909101516007909101556008546110d69084611d22565b6008556040516001600160a01b038616907f31dde06dd1e0aaacd2d32511680629725c65c6048e70ece46b47a9eb210a5b169061111890879087908790612307565b60405180910390a2506001949350505050565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611174573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111989190612264565b905090565b3360009081526001602052604090205460ff16806111c557506000546001600160a01b031633145b6111ce57600080fd5b6001600160a01b0381166111e157600080fd5b6001600160a01b03811660009081526001602052604090205460ff161561120757600080fd5b6000546001600160a01b038281169116141561122257600080fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e3399190a250565b6000546001600160a01b031633146112cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610429565b6112d56000611d41565b565b3360009081526001602052604090205460ff16806112ff57506000546001600160a01b031633145b61130857600080fd5b60025460ff161561131857600080fd5b6002805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b3360009081526001602052604081205460ff168061137857506000546001600160a01b031633145b61138157600080fd5b6001600160a01b0383166113a75760405162461bcd60e51b815260040161042990612054565b600082116113e95760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21030b6b7bab73a1760891b6044820152606401610429565b6001600160a01b0383166000908152600b60205260409020600101546114215760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b602052604090206005015460ff161561145d5760405162461bcd60e51b81526004016104299061207e565b61146982610fda611872565b61147161112b565b101561148f5760405162461bcd60e51b8152600401610429906122aa565b6001600160a01b0383166000908152600b60205260409020600301546114b59083611d22565b6001600160a01b0384166000908152600b602052604090206003810191909155600401546114e39083611d22565b6001600160a01b0384166000908152600b602052604090206004015560085461150c9083611d22565b6008556001600160a01b0383166000818152600b6020526040902060038101547f2cebdff48fce81ce1759871451e83228bc810bd79ee76f0c03f101e1ec152a07919061082a9086611d35565b3360009081526001602052604090205460ff168061158157506000546001600160a01b031633145b61158a57600080fd5b60005b81518160ff1610156116a3576000828260ff16815181106115b0576115b061236b565b6020026020010151905060006001600160a01b0316816001600160a01b0316141580156115f657506001600160a01b03811660009081526001602052604090205460ff16155b801561161057506000546001600160a01b03828116911614155b15611690576001600160a01b0381166000908152600160208190526040909120805460ff191690911790558251839060ff84169081106116525761165261236b565b60200260200101516001600160a01b03167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a25b508061169b81612381565b91505061158d565b5050565b3360009081526001602052604081205460ff16806116cf57506000546001600160a01b031633145b6116d857600080fd5b600a54604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174b9190612264565b9050600081116117905760405162461bcd60e51b815260206004820152601060248201526f2737ba3434b733903a3790333ab7321760811b6044820152606401610429565b600061179a61112b565b600a546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156117f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118169190612220565b61181f57600080fd5b337f26b27e83d0b82c44eb17d6f11776a8c600332d2ed7d9febfe585848bcfadf52d838361184b61112b565b6040805193845260208401929092529082015260600160405180910390a260019250505090565b6000611198600954600854611d3590919063ffffffff16565b6000600354600014156118a057506000919050565b6001600160a01b0382166000908152600b60205260408120600201546118c69042612293565b905060006118df60045483611d9190919063ffffffff16565b6118ea9060016123a1565b90506000600354826118fc91906123b9565b6001600160a01b0386166000908152600b60205260408120600301549192509082116119285781611945565b6001600160a01b0386166000908152600b60205260409020600301545b9050600061195e60095483611d3590919063ffffffff16565b979650505050505050565b3360009081526001602052604090205460ff168061199157506000546001600160a01b031633145b61199a57600080fd5b60005b81518160ff1610156116a3576000828260ff16815181106119c0576119c061236b565b6020026020010151905060006001600160a01b0316816001600160a01b031614158015611a0557506001600160a01b03811660009081526001602052604090205460ff165b8015611a1f57506000546001600160a01b03828116911614155b15611a99576001600160a01b0381166000908152600160205260409020805460ff191690558251839060ff8416908110611a5b57611a5b61236b565b60200260200101516001600160a01b03167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a25b5080611aa481612381565b91505061199d565b6000546001600160a01b03163314611b065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610429565b6001600160a01b038116611b6b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610429565b611b7481611d41565b50565b3360009081526001602052604081205460ff1680611b9f57506000546001600160a01b031633145b611ba857600080fd5b6001600160a01b038216611bce5760405162461bcd60e51b815260040161042990612054565b6001600160a01b0382166000908152600b6020526040902060010154611c065760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0382166000908152600b602052604090206005015460ff1615611c425760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0382166000908152600b60205260408120600381015460048201546006909201549092611c768383611d35565b9050611c828482611d35565b6001600160a01b0387166000908152600b6020526040812060038101929092556004820155600501805460ff19166001179055600854611cc29082611d35565b6008556001600160a01b0386166000818152600b60205260409081902090517f47370478829f2a02d88c41aa352cafd9e19a623634304cc8b26d9b2cd8564a6591611d0e918590612242565b60405180910390a250600195945050505050565b6000611d2e82846123a1565b9392505050565b6000611d2e8284612293565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611d2e82846123d8565b828054611da9906120db565b90600052602060002090601f016020900481019282611dcb5760008555611e11565b82601f10611de457805160ff1916838001178555611e11565b82800160010185558215611e11579182015b82811115611e11578251825591602001919060010190611df6565b50611e1d929150611e21565b5090565b5b80821115611e1d5760008155600101611e22565b80356001600160a01b0381168114610dcf57600080fd5b60008060408385031215611e6057600080fd5b611e6983611e36565b946020939093013593505050565b600060208284031215611e8957600080fd5b611d2e82611e36565b600060208284031215611ea457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611eea57611eea611eab565b604052919050565b60008060008060808587031215611f0857600080fd5b611f1185611e36565b935060208086013567ffffffffffffffff80821115611f2f57600080fd5b818801915088601f830112611f4357600080fd5b813581811115611f5557611f55611eab565b611f67601f8201601f19168501611ec1565b91508082528984828501011115611f7d57600080fd5b80848401858401376000908201909301929092525093969395505050506040820135916060013590565b60006020808385031215611fba57600080fd5b823567ffffffffffffffff80821115611fd257600080fd5b818501915085601f830112611fe657600080fd5b813581811115611ff857611ff8611eab565b8060051b9150612009848301611ec1565b818152918301840191848101908884111561202357600080fd5b938501935b838510156120485761203985611e36565b82529385019390850190612028565b98975050505050505050565b60208082526010908201526f24b73b30b634b21030b2323932b9b99760811b604082015260600190565b6020808252603c908201527f4163636573732069732064656e6965642e20526571756573746564207665737460408201527f696e67207363686564756c6520646f6573206e6f742065786973742e00000000606082015260800190565b600181811c908216806120ef57607f821691505b6020821081141561211057634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061213057607f831692505b602080841082141561215257634e487b7160e01b600052602260045260246000fd5b8388526020880182801561216d576001811461217e576121a9565b60ff198716825282820197506121a9565b60008981526020902060005b878110156121a35781548482015290860190840161218a565b83019850505b5050505050505092915050565b6060815260006121c96060830186612116565b60208301949094525060400152919050565b60208082526025908201527f4163636573732069732064656e6965642e20496e73756666696369656e7420666040820152643ab732399760d91b606082015260800190565b60006020828403121561223257600080fd5b81518015158114611d2e57600080fd5b6040815260006122556040830185612116565b90508260208301529392505050565b60006020828403121561227657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156122a5576122a561227d565b500390565b6020808252603d908201527f4163636573732069732064656e6965642e20496e73756666696369656e74206260408201527f616c616e63652c2076657374696e67206361702065786365656465642e000000606082015260800190565b606081526000845180606084015260005b818110156123355760208188018101516080868401015201612318565b81811115612347576000608083860101525b5060208301949094525060408101919091526080601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8114156123985761239861227d565b60010192915050565b600082198211156123b4576123b461227d565b500190565b60008160001904831182151516156123d3576123d361227d565b500290565b6000826123f557634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122052219cc078e4b2d7a03c31164baad862feb3f60da6c7363134385d0b54cbbc0e64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c8063706250c811610104578063a065b0bd116100a2578063e4353ad611610071578063e4353ad614610386578063f1bca30f14610399578063f2fde38b146103ac578063fad36ece146103bf57600080fd5b8063a065b0bd14610350578063a8e6e77b14610363578063b60d428814610376578063dba61ab71461037e57600080fd5b80638456cb59116100de5780638456cb59146103075780638971611c1461030f5780638da5cb5b14610318578063936bf9781461033d57600080fd5b8063706250c8146102ed578063715018a6146102f657806378ee3af6146102fe57600080fd5b80633f4ba83a1161017c578063517b49121161014b578063517b4912146102b25780635195bd29146102c55780635c975abb146102cd57806370480275146102da57600080fd5b80633f4ba83a14610275578063429b62e51461027d5780634713a044146102a05780634b319713146102a957600080fd5b8063199cbc54116101b8578063199cbc541461022f5780632e1a7d4d146102465780632f384523146102595780633792bab41461026c57600080fd5b80630715a0b4146101df578063158a774d146102075780631785f53c1461021a575b600080fd5b6101f26101ed366004611e4d565b6103d2565b60405190151581526020015b60405180910390f35b6101f2610215366004611e4d565b61064d565b61022d610228366004611e77565b61084b565b005b61023860085481565b6040519081526020016101fe565b6101f2610254366004611e92565b610918565b6101f2610267366004611e92565b610c31565b61023860045481565b61022d610dd4565b6101f261028b366004611e77565b60016020526000908152604090205460ff1681565b61023860055481565b61023860095481565b6101f26102c0366004611ef2565b610e49565b61023861112b565b6002546101f29060ff1681565b61022d6102e8366004611e77565b61119d565b61023860065481565b61022d611271565b61023860075481565b61022d6112d7565b61023860035481565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101fe565b6101f261034b366004611e4d565b611350565b600a54610325906001600160a01b031681565b61022d610371366004611fa7565b611559565b6101f26116a7565b610238611872565b610238610394366004611e77565b61188b565b61022d6103a7366004611fa7565b611969565b61022d6103ba366004611e77565b611aac565b6101f26103cd366004611e77565b611b77565b3360009081526001602052604081205460ff16806103fa57506000546001600160a01b031633145b61040357600080fd5b6001600160a01b0383166104325760405162461bcd60e51b815260040161042990612054565b60405180910390fd5b6001600160a01b0383166000908152600b602052604090206001015461046a5760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b602052604090206005015460ff16156104a65760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b602052604090206002015442106105365760405162461bcd60e51b815260206004820152603c60248201527f4163636573732069732064656e6965642e205468652076657374696e6720736360448201527f686564756c652077617320616c72656164792072656c65617365642e000000006064820152608401610429565b6001600160a01b0383166000908152600b602052604090206002015482116105e35760405162461bcd60e51b815260206004820152605460248201527f4163636573732069732064656e6965642e20596f752063616e20616c736f206560448201527f7874656e64207468652072656c65617365206461746520627574206e6f74207460648201527334329037ba3432b9103bb0bc9030b937bab7321760611b608482015260a401610429565b6001600160a01b0383166000818152600b6020526040908190206002810180549086905591519192917f48e5c889579453e84d06f5962fd80461fe15c76d7b30530d52d1ae5617571a769161063b91859088906121b6565b60405180910390a25060019392505050565b3360009081526001602052604081205460ff168061067557506000546001600160a01b031633145b61067e57600080fd5b6001600160a01b0383166106a45760405162461bcd60e51b815260040161042990612054565b600082116106b157600080fd5b6001600160a01b0383166000908152600b60205260409020600101546106e95760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b602052604090206005015460ff16156107255760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b60205260409020600401548211156107605760405162461bcd60e51b8152600401610429906121db565b6001600160a01b0383166000908152600b60205260409020600301546107869083611d35565b6001600160a01b0384166000908152600b602052604090206003810191909155600401546107b49083611d35565b6001600160a01b0384166000908152600b60205260409020600401556008546107dd9083611d35565b6008556001600160a01b0383166000818152600b6020526040902060038101547ffefe834c14ff63083c08dce2085888585b19e1b43198dde06d97a38a8379f21d919061082a9086611d22565b8560405161083a939291906121b6565b60405180910390a250600192915050565b3360009081526001602052604090205460ff168061087357506000546001600160a01b031633145b61087c57600080fd5b6001600160a01b03811661088f57600080fd5b6001600160a01b03811660009081526001602052604090205460ff166108b457600080fd5b6000546001600160a01b03828116911614156108cf57600080fd5b6001600160a01b038116600081815260016020526040808220805460ff19169055517fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f9190a250565b336000908152600b602052604081206001015482906109495760405162461bcd60e51b81526004016104299061207e565b336000908152600b602052604090206005015460ff161561097c5760405162461bcd60e51b81526004016104299061207e565b336000908152600b6020526040902060020154421015610a175760405162461bcd60e51b815260206004820152604a60248201527f4163636573732069732064656e6965642e20596f7520617265206e6f7420616c60448201527f6c6f77656420746f207769746864726177206265666f7265207468652072656c60648201526932b0b9b2903230ba329760b11b608482015260a401610429565b336000908152600b6020526040902060040154811115610a495760405162461bcd60e51b8152600401610429906121db565b6000610a543361188b565b60035490915015610c2a5781811015610ad55760405162461bcd60e51b815260206004820152603f60248201527f4163636573732069732064656e6965642e20546865207265717565737465642060448201527f616d6f756e74206578636565647320796f757220616c6c6f636174696f6e2e006064820152608401610429565b600754421015610ae457600080fd5b60025460ff1615610af457600080fd5b336000908152600b6020526040902042600782015560040154610b179085611d35565b336000908152600b60205260409020600481019190915560060154610b3c9085611d22565b336000908152600b6020526040902060060155600954610b5c9085611d22565b600955600a5460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd49190612220565b610bdd57600080fd5b336000818152600b60205260409081902090517f18af30a54a1951aeee806c16cdcb8d087ed1a095f0d9a87261b92cef2c6cc92d91610c1d918890612242565b60405180910390a2600192505b5050919050565b3360009081526001602052604081205460ff1680610c5957506000546001600160a01b031633145b610c6257600080fd5b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf9190612264565b90506000610cdb611872565b9050808211610ce957600080fd5b6000610cf58284612293565b905084811015610d0457600080fd5b600a5460405163a9059cbb60e01b8152336004820152602481018790526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d799190612220565b610d8257600080fd5b337f2d2c22b12ce2c4142ec672b74a307ec23572019efd8c9a930a8fc19f0fcd6c8686610daf8482611d35565b6040805192835260208301919091520160405180910390a2600193505050505b919050565b3360009081526001602052604090205460ff1680610dfc57506000546001600160a01b031633145b610e0557600080fd5b60025460ff16610e1457600080fd5b6002805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b3360009081526001602052604081205460ff1680610e7157506000546001600160a01b031633145b610e7a57600080fd5b6001600160a01b038516610ea05760405162461bcd60e51b815260040161042990612054565b60008311610ee25760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21030b6b7bab73a1760891b6044820152606401610429565b6001600160a01b0385166000908152600b602052604090206001015415610f565760405162461bcd60e51b815260206004820152602260248201527f4163636573732069732064656e6965642e204475706c696361746520656e74726044820152613c9760f11b6064820152608401610429565b600754821015610fce5760405162461bcd60e51b815260206004820152603960248201527f4163636573732069732064656e6965642e20506c65617365207370656369667960448201527f2061206c6f6e6765722076657374696e6720706572696f642e000000000000006064820152608401610429565b610fe083610fda611872565b90611d22565b610fe861112b565b10156110065760405162461bcd60e51b8152600401610429906122aa565b6040805161010081018252858152426020808301919091528183018590526060820186905260808201869052600060a0830181905260c0830181905260e083018190526001600160a01b0389168152600b82529290922081518051929391926110729284920190611d9d565b506020820151600182015560408201516002820155606082015160038201556080820151600482015560a082015160058201805460ff191691151591909117905560c0820151600682015560e0909101516007909101556008546110d69084611d22565b6008556040516001600160a01b038616907f31dde06dd1e0aaacd2d32511680629725c65c6048e70ece46b47a9eb210a5b169061111890879087908790612307565b60405180910390a2506001949350505050565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611174573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111989190612264565b905090565b3360009081526001602052604090205460ff16806111c557506000546001600160a01b031633145b6111ce57600080fd5b6001600160a01b0381166111e157600080fd5b6001600160a01b03811660009081526001602052604090205460ff161561120757600080fd5b6000546001600160a01b038281169116141561122257600080fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e3399190a250565b6000546001600160a01b031633146112cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610429565b6112d56000611d41565b565b3360009081526001602052604090205460ff16806112ff57506000546001600160a01b031633145b61130857600080fd5b60025460ff161561131857600080fd5b6002805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b3360009081526001602052604081205460ff168061137857506000546001600160a01b031633145b61138157600080fd5b6001600160a01b0383166113a75760405162461bcd60e51b815260040161042990612054565b600082116113e95760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21030b6b7bab73a1760891b6044820152606401610429565b6001600160a01b0383166000908152600b60205260409020600101546114215760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0383166000908152600b602052604090206005015460ff161561145d5760405162461bcd60e51b81526004016104299061207e565b61146982610fda611872565b61147161112b565b101561148f5760405162461bcd60e51b8152600401610429906122aa565b6001600160a01b0383166000908152600b60205260409020600301546114b59083611d22565b6001600160a01b0384166000908152600b602052604090206003810191909155600401546114e39083611d22565b6001600160a01b0384166000908152600b602052604090206004015560085461150c9083611d22565b6008556001600160a01b0383166000818152600b6020526040902060038101547f2cebdff48fce81ce1759871451e83228bc810bd79ee76f0c03f101e1ec152a07919061082a9086611d35565b3360009081526001602052604090205460ff168061158157506000546001600160a01b031633145b61158a57600080fd5b60005b81518160ff1610156116a3576000828260ff16815181106115b0576115b061236b565b6020026020010151905060006001600160a01b0316816001600160a01b0316141580156115f657506001600160a01b03811660009081526001602052604090205460ff16155b801561161057506000546001600160a01b03828116911614155b15611690576001600160a01b0381166000908152600160208190526040909120805460ff191690911790558251839060ff84169081106116525761165261236b565b60200260200101516001600160a01b03167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a25b508061169b81612381565b91505061158d565b5050565b3360009081526001602052604081205460ff16806116cf57506000546001600160a01b031633145b6116d857600080fd5b600a54604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174b9190612264565b9050600081116117905760405162461bcd60e51b815260206004820152601060248201526f2737ba3434b733903a3790333ab7321760811b6044820152606401610429565b600061179a61112b565b600a546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156117f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118169190612220565b61181f57600080fd5b337f26b27e83d0b82c44eb17d6f11776a8c600332d2ed7d9febfe585848bcfadf52d838361184b61112b565b6040805193845260208401929092529082015260600160405180910390a260019250505090565b6000611198600954600854611d3590919063ffffffff16565b6000600354600014156118a057506000919050565b6001600160a01b0382166000908152600b60205260408120600201546118c69042612293565b905060006118df60045483611d9190919063ffffffff16565b6118ea9060016123a1565b90506000600354826118fc91906123b9565b6001600160a01b0386166000908152600b60205260408120600301549192509082116119285781611945565b6001600160a01b0386166000908152600b60205260409020600301545b9050600061195e60095483611d3590919063ffffffff16565b979650505050505050565b3360009081526001602052604090205460ff168061199157506000546001600160a01b031633145b61199a57600080fd5b60005b81518160ff1610156116a3576000828260ff16815181106119c0576119c061236b565b6020026020010151905060006001600160a01b0316816001600160a01b031614158015611a0557506001600160a01b03811660009081526001602052604090205460ff165b8015611a1f57506000546001600160a01b03828116911614155b15611a99576001600160a01b0381166000908152600160205260409020805460ff191690558251839060ff8416908110611a5b57611a5b61236b565b60200260200101516001600160a01b03167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a25b5080611aa481612381565b91505061199d565b6000546001600160a01b03163314611b065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610429565b6001600160a01b038116611b6b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610429565b611b7481611d41565b50565b3360009081526001602052604081205460ff1680611b9f57506000546001600160a01b031633145b611ba857600080fd5b6001600160a01b038216611bce5760405162461bcd60e51b815260040161042990612054565b6001600160a01b0382166000908152600b6020526040902060010154611c065760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0382166000908152600b602052604090206005015460ff1615611c425760405162461bcd60e51b81526004016104299061207e565b6001600160a01b0382166000908152600b60205260408120600381015460048201546006909201549092611c768383611d35565b9050611c828482611d35565b6001600160a01b0387166000908152600b6020526040812060038101929092556004820155600501805460ff19166001179055600854611cc29082611d35565b6008556001600160a01b0386166000818152600b60205260409081902090517f47370478829f2a02d88c41aa352cafd9e19a623634304cc8b26d9b2cd8564a6591611d0e918590612242565b60405180910390a250600195945050505050565b6000611d2e82846123a1565b9392505050565b6000611d2e8284612293565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611d2e82846123d8565b828054611da9906120db565b90600052602060002090601f016020900481019282611dcb5760008555611e11565b82601f10611de457805160ff1916838001178555611e11565b82800160010185558215611e11579182015b82811115611e11578251825591602001919060010190611df6565b50611e1d929150611e21565b5090565b5b80821115611e1d5760008155600101611e22565b80356001600160a01b0381168114610dcf57600080fd5b60008060408385031215611e6057600080fd5b611e6983611e36565b946020939093013593505050565b600060208284031215611e8957600080fd5b611d2e82611e36565b600060208284031215611ea457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611eea57611eea611eab565b604052919050565b60008060008060808587031215611f0857600080fd5b611f1185611e36565b935060208086013567ffffffffffffffff80821115611f2f57600080fd5b818801915088601f830112611f4357600080fd5b813581811115611f5557611f55611eab565b611f67601f8201601f19168501611ec1565b91508082528984828501011115611f7d57600080fd5b80848401858401376000908201909301929092525093969395505050506040820135916060013590565b60006020808385031215611fba57600080fd5b823567ffffffffffffffff80821115611fd257600080fd5b818501915085601f830112611fe657600080fd5b813581811115611ff857611ff8611eab565b8060051b9150612009848301611ec1565b818152918301840191848101908884111561202357600080fd5b938501935b838510156120485761203985611e36565b82529385019390850190612028565b98975050505050505050565b60208082526010908201526f24b73b30b634b21030b2323932b9b99760811b604082015260600190565b6020808252603c908201527f4163636573732069732064656e6965642e20526571756573746564207665737460408201527f696e67207363686564756c6520646f6573206e6f742065786973742e00000000606082015260800190565b600181811c908216806120ef57607f821691505b6020821081141561211057634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061213057607f831692505b602080841082141561215257634e487b7160e01b600052602260045260246000fd5b8388526020880182801561216d576001811461217e576121a9565b60ff198716825282820197506121a9565b60008981526020902060005b878110156121a35781548482015290860190840161218a565b83019850505b5050505050505092915050565b6060815260006121c96060830186612116565b60208301949094525060400152919050565b60208082526025908201527f4163636573732069732064656e6965642e20496e73756666696369656e7420666040820152643ab732399760d91b606082015260800190565b60006020828403121561223257600080fd5b81518015158114611d2e57600080fd5b6040815260006122556040830185612116565b90508260208301529392505050565b60006020828403121561227657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156122a5576122a561227d565b500390565b6020808252603d908201527f4163636573732069732064656e6965642e20496e73756666696369656e74206260408201527f616c616e63652c2076657374696e67206361702065786365656465642e000000606082015260800190565b606081526000845180606084015260005b818110156123355760208188018101516080868401015201612318565b81811115612347576000608083860101525b5060208301949094525060408101919091526080601f909201601f19160101919050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8114156123985761239861227d565b60010192915050565b600082198211156123b4576123b461227d565b500190565b60008160001904831182151516156123d3576123d361227d565b500290565b6000826123f557634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122052219cc078e4b2d7a03c31164baad862feb3f60da6c7363134385d0b54cbbc0e64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:962:91",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:91",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "174:424:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "221:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "230:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "233:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "223:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "223:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "223:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "195:7:91"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "204:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "191:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "191:23:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "187:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:33:91"
                  },
                  "nodeType": "YulIf",
                  "src": "184:53:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "262:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "256:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:16:91"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "246:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "281:35:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "301:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "312:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "297:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "297:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "291:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "291:25:91"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "281:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "325:38:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "348:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "359:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "344:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "338:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:25:91"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "329:5:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "426:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "435:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "438:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "428:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "428:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "385:5:91"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "396:5:91"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "411:3:91",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "416:1:91",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "407:3:91"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "407:11:91"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "420:1:91",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "403:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "403:19:91"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "392:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "392:31:91"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "382:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "382:42:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "375:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:50:91"
                  },
                  "nodeType": "YulIf",
                  "src": "372:70:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "451:15:91",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "461:5:91"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "475:40:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "511:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "496:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "496:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "490:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:25:91"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "479:7:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "550:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "559:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "562:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "552:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "552:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "552:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "537:7:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "546:1:91",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "534:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "534:14:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "527:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:22:91"
                  },
                  "nodeType": "YulIf",
                  "src": "524:42:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "575:17:91",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "585:7:91"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "575:6:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_contract$_ERC20_$2806t_enum$_Frequency_$8567_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "116:9:91",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "127:7:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "139:6:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "147:6:91",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "155:6:91",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "163:6:91",
                "type": ""
              }
            ],
            "src": "14:584:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "651:177:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "686:111:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "707:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "714:3:91",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "719:10:91",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "710:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "710:20:91"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "700:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "700:31:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "700:31:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "751:1:91",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "754:4:91",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "744:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "744:15:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "744:15:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "782:4:91",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "772:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "772:15:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "772:15:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "667:1:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "674:1:91"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "670:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "670:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "664:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "664:13:91"
                  },
                  "nodeType": "YulIf",
                  "src": "661:136:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "806:16:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "817:1:91"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "820:1:91"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "813:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "813:9:91"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "806:3:91"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "634:1:91",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "637:1:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "643:3:91",
                "type": ""
              }
            ],
            "src": "603:225:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "865:95:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "882:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "889:3:91",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "894:10:91",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "885:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "885:20:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "875:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "875:31:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "875:31:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "922:1:91",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "925:4:91",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "915:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "915:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "915:15:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "946:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:4:91",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "939:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "939:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "939:15:91"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "833:127:91"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_contract$_ERC20_$2806t_enum$_Frequency_$8567_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value2 := value\n        let value_1 := mload(add(headStart, 96))\n        if iszero(lt(value_1, 7)) { revert(0, 0) }\n        value3 := value_1\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 91,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15946:91",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:91",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:91"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:91"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:91"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:91"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:91",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:91",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:91"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:91"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:91",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:91"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:91"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:91"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:91"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:91",
                "type": ""
              }
            ],
            "src": "14:173:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "279:167:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "325:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "334:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "337:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "327:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "327:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "327:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "300:7:91"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "309:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "296:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "296:23:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:2:91",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "292:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:32:91"
                  },
                  "nodeType": "YulIf",
                  "src": "289:52:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "350:39:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "379:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "360:18:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:29:91"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "350:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "398:42:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "425:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "436:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "421:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "421:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "408:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:32:91"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "398:6:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "237:9:91",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "248:7:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "260:6:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "268:6:91",
                "type": ""
              }
            ],
            "src": "192:254:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "546:92:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "556:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "568:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "564:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "556:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "598:9:91"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "623:6:91"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "616:6:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "616:14:91"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "609:6:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:22:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:41:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "591:41:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "515:9:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "526:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "537:4:91",
                "type": ""
              }
            ],
            "src": "451:187:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "713:116:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "759:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "768:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "771:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "761:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "761:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "761:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "734:7:91"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "743:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "730:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "730:23:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "755:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "726:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "726:32:91"
                  },
                  "nodeType": "YulIf",
                  "src": "723:52:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "784:39:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "813:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "794:18:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "794:29:91"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "784:6:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "679:9:91",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "690:7:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "702:6:91",
                "type": ""
              }
            ],
            "src": "643:186:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "935:76:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "945:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "957:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "968:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "953:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "945:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "987:9:91"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "998:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:25:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "980:25:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "904:9:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "926:4:91",
                "type": ""
              }
            ],
            "src": "834:177:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1086:110:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1132:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1141:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1144:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1134:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1134:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1134:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1107:7:91"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1116:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1103:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:23:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1099:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1099:32:91"
                  },
                  "nodeType": "YulIf",
                  "src": "1096:52:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1157:33:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1180:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1167:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:23:91"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1157:6:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1052:9:91",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1063:7:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1075:6:91",
                "type": ""
              }
            ],
            "src": "1016:180:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1233:95:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1250:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1257:3:91",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1262:10:91",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1253:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1253:20:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1243:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1243:31:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1243:31:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1290:1:91",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1293:4:91",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1283:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1283:15:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1314:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1317:4:91",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1307:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1307:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1307:15:91"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1201:127:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1378:230:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1388:19:91",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1404:2:91",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1398:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:9:91"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1388:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1416:58:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1438:6:91"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "1454:4:91"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1460:2:91",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1450:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1450:13:91"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1469:2:91",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "1465:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1465:7:91"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1446:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1446:27:91"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1434:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1434:40:91"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1420:10:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1549:22:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1551:16:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1551:18:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1551:18:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1492:10:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1504:18:91",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1489:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1489:34:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1528:10:91"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1540:6:91"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1525:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1525:22:91"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1486:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:62:91"
                  },
                  "nodeType": "YulIf",
                  "src": "1483:88:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1587:2:91",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1591:10:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1580:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1580:22:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1580:22:91"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1358:4:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1367:6:91",
                "type": ""
              }
            ],
            "src": "1333:275:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1744:844:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1791:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1800:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1803:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1793:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1793:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1793:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1765:7:91"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1774:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1761:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1761:23:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1786:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1757:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1757:33:91"
                  },
                  "nodeType": "YulIf",
                  "src": "1754:53:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1816:39:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1845:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1826:18:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:29:91"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1816:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1864:12:91",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1874:2:91",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1868:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1885:46:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1916:9:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1927:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1912:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1912:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1899:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1899:32:91"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1889:6:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1940:28:91",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1950:18:91",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1944:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1995:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2004:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2007:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1997:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1997:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1997:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1983:6:91"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1991:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1980:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:14:91"
                  },
                  "nodeType": "YulIf",
                  "src": "1977:34:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2020:32:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2034:9:91"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2045:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2030:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2030:22:91"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2024:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2100:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2109:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2112:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2102:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2102:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2102:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2079:2:91"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2083:4:91",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2075:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2075:13:91"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2090:7:91"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2071:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2071:27:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2064:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2064:35:91"
                  },
                  "nodeType": "YulIf",
                  "src": "2061:55:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2125:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2148:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2135:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:16:91"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2129:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2174:22:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2176:16:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2176:18:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2176:18:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2166:2:91"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2170:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2163:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2163:10:91"
                  },
                  "nodeType": "YulIf",
                  "src": "2160:36:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2205:66:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2246:2:91"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2250:4:91",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2242:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2242:13:91"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2261:2:91",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2257:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2257:7:91"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2238:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2238:27:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2267:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2234:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2234:36:91"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2218:15:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2218:53:91"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "2209:5:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2287:5:91"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2294:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2280:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:17:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2280:17:91"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2343:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2352:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2355:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2345:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2345:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2345:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2320:2:91"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2324:2:91"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2316:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2316:11:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2329:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2312:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2312:20:91"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2334:7:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2309:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2309:33:91"
                  },
                  "nodeType": "YulIf",
                  "src": "2306:53:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "2385:5:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2392:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2381:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2381:14:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2401:2:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2405:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2397:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2397:11:91"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2410:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2368:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:45:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2368:45:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "2437:5:91"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2444:2:91"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2433:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2433:14:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2449:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2429:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2429:23:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2454:1:91",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2422:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2422:34:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2465:15:91",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "2475:5:91"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2465:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2489:42:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2516:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2527:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2512:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2512:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2499:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2499:32:91"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2489:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2540:42:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2567:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2578:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2563:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2563:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2550:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2550:32:91"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2540:6:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1686:9:91",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1697:7:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1709:6:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1717:6:91",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1725:6:91",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1733:6:91",
                "type": ""
              }
            ],
            "src": "1613:975:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2694:102:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2704:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2716:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2727:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2712:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2712:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2704:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2746:9:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2761:6:91"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2777:3:91",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2782:1:91",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2773:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2773:11:91"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2786:1:91",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2769:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2769:19:91"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2757:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2757:32:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2739:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2739:51:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2739:51:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2663:9:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2674:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2685:4:91",
                "type": ""
              }
            ],
            "src": "2593:203:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2916:102:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2926:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2938:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2949:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2934:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2934:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2926:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2968:9:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2983:6:91"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2999:3:91",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3004:1:91",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2995:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2995:11:91"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3008:1:91",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2991:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2991:19:91"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2979:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2979:32:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2961:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2961:51:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2961:51:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$2806__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2885:9:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2896:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2907:4:91",
                "type": ""
              }
            ],
            "src": "2801:217:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3118:857:91",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3128:12:91",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3138:2:91",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3132:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3185:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3194:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3197:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3187:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3187:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3187:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3160:7:91"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3169:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3156:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3156:23:91"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3181:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3152:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3152:32:91"
                  },
                  "nodeType": "YulIf",
                  "src": "3149:52:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3210:37:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3237:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3224:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3224:23:91"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3214:6:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3256:28:91",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3266:18:91",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3260:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3311:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3320:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3323:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3313:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3313:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3313:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3299:6:91"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3307:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3296:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3296:14:91"
                  },
                  "nodeType": "YulIf",
                  "src": "3293:34:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3336:32:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3350:9:91"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3361:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3346:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3346:22:91"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3340:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3416:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3425:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3428:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3418:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3418:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3418:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3395:2:91"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3399:4:91",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3391:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3391:13:91"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3406:7:91"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3387:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3387:27:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3380:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3380:35:91"
                  },
                  "nodeType": "YulIf",
                  "src": "3377:55:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3441:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3464:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3451:12:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3451:16:91"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "3445:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3490:22:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3492:16:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3492:18:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3492:18:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3482:2:91"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3486:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3479:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3479:10:91"
                  },
                  "nodeType": "YulIf",
                  "src": "3476:36:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3521:20:91",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3535:1:91",
                        "type": "",
                        "value": "5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3538:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "3531:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3531:10:91"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "3525:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3550:39:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "3581:2:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3585:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3577:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3577:11:91"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3561:15:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3561:28:91"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "3554:3:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3598:16:91",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "3611:3:91"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "3602:5:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3630:3:91"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3635:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3623:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3623:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3623:15:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3647:19:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3658:3:91"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3663:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3654:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3654:12:91"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "3647:3:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3675:34:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3697:2:91"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "3701:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3693:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3693:11:91"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3706:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3689:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3689:20:91"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "3679:6:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3741:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3750:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3753:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3743:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3743:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3743:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3724:6:91"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3732:7:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3721:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3721:19:91"
                  },
                  "nodeType": "YulIf",
                  "src": "3718:39:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3766:22:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3781:2:91"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3785:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3777:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3777:11:91"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "3770:3:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3853:92:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "3874:3:91"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "3898:3:91"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_address",
                                "nodeType": "YulIdentifier",
                                "src": "3879:18:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3879:23:91"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3867:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3867:36:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3867:36:91"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3916:19:91",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "3927:3:91"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3932:2:91"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3923:3:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3923:12:91"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3916:3:91"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3808:3:91"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3813:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3805:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3805:15:91"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3821:23:91",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3823:19:91",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "3834:3:91"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3839:2:91"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3830:3:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3830:12:91"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "3823:3:91"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3801:3:91",
                    "statements": []
                  },
                  "src": "3797:148:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3954:15:91",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "3964:5:91"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3954:6:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3084:9:91",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3095:7:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3107:6:91",
                "type": ""
              }
            ],
            "src": "3023:952:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4057:73:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4074:3:91"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4079:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4067:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4067:19:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4067:19:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4095:29:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4114:3:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4119:4:91",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4110:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4110:14:91"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4095:11:91"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4025:3:91",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4030:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4041:11:91",
                "type": ""
              }
            ],
            "src": "3980:150:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4309:166:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4326:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4337:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4319:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4319:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4319:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4360:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4371:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4356:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4356:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4376:2:91",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4349:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4349:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4349:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4399:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4410:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4395:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4395:18:91"
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4415:18:91",
                        "type": "",
                        "value": "Invalid address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4388:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4388:46:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4388:46:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4443:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4455:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4466:2:91",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4451:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4451:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4443:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4286:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4300:4:91",
                "type": ""
              }
            ],
            "src": "4135:340:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4654:250:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4671:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4682:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4664:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4664:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4664:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4705:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4716:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4701:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4701:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4721:2:91",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4694:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4694:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4694:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4744:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4755:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4740:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4740:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4760:34:91",
                        "type": "",
                        "value": "Access is denied. Requested vest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4733:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4733:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4733:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4815:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4826:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4811:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4811:18:91"
                      },
                      {
                        "hexValue": "696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4831:30:91",
                        "type": "",
                        "value": "ing schedule does not exist."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4804:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4804:58:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4804:58:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4871:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4883:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4894:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4879:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4879:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4871:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4631:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4645:4:91",
                "type": ""
              }
            ],
            "src": "4480:424:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5083:250:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5100:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5111:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5093:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5093:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5093:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5134:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5145:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5130:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5130:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5150:2:91",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5123:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5123:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5123:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5173:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5184:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5169:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5169:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205468652076657374696e67207363",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5189:34:91",
                        "type": "",
                        "value": "Access is denied. The vesting sc"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5162:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5162:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5162:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5244:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5255:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5240:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5240:18:91"
                      },
                      {
                        "hexValue": "686564756c652077617320616c72656164792072656c65617365642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5260:30:91",
                        "type": "",
                        "value": "hedule was already released."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5233:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5233:58:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5233:58:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5300:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5312:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5323:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5308:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5308:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5300:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_494c5705e9a7014a484f7982903520206f1c897c51a1cd752526e3c563421966__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5060:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5074:4:91",
                "type": ""
              }
            ],
            "src": "4909:424:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5512:314:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5529:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5540:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5522:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5522:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5522:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5563:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5574:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5559:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5559:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5579:2:91",
                        "type": "",
                        "value": "84"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5552:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5552:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5552:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5602:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5613:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5598:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5598:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20596f752063616e20616c736f2065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5618:34:91",
                        "type": "",
                        "value": "Access is denied. You can also e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5591:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5591:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5591:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5673:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5684:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5669:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5669:18:91"
                      },
                      {
                        "hexValue": "7874656e64207468652072656c65617365206461746520627574206e6f742074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5689:34:91",
                        "type": "",
                        "value": "xtend the release date but not t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5662:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5662:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5662:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5744:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5755:3:91",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5740:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5740:19:91"
                      },
                      {
                        "hexValue": "6865206f74686572207761792061726f756e642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5761:22:91",
                        "type": "",
                        "value": "he other way around."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5733:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5733:51:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5733:51:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5793:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5805:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5816:3:91",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5801:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5801:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5793:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5adecffb723a004af6b679798c1cd516d03b217de4259c32b901687171fcd29f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5489:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5503:4:91",
                "type": ""
              }
            ],
            "src": "5338:488:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5886:325:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5896:22:91",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5910:1:91",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5913:4:91"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "5906:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5906:12:91"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5896:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5927:38:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5957:4:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5963:1:91",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5953:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5953:12:91"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5931:18:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6004:31:91",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6006:27:91",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6020:6:91"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6028:4:91",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6016:3:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6016:17:91"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6006:6:91"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5984:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5977:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5977:26:91"
                  },
                  "nodeType": "YulIf",
                  "src": "5974:61:91"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6094:111:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6115:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6122:3:91",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6127:10:91",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6118:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6118:20:91"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6108:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6108:31:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6108:31:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6159:1:91",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6162:4:91",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6152:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6152:15:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6152:15:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6187:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6190:4:91",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6180:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6180:15:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6180:15:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6050:18:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6073:6:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6081:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6070:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6070:14:91"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6047:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6047:38:91"
                  },
                  "nodeType": "YulIf",
                  "src": "6044:161:91"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5866:4:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5875:6:91",
                "type": ""
              }
            ],
            "src": "5831:380:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6272:65:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6289:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "6292:3:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6282:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6282:14:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6282:14:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6305:26:91",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6323:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6326:4:91",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "6313:9:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6313:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "6305:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "6255:3:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "6263:4:91",
                "type": ""
              }
            ],
            "src": "6216:121:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6400:984:91",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6410:29:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6433:5:91"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "6427:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6427:12:91"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "6414:9:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6448:15:91",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6462:1:91",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6452:6:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6472:11:91",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6482:1:91",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6476:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6492:28:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6506:2:91"
                      },
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "6510:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "6502:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6502:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6492:6:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6529:44:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "6559:9:91"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6570:2:91"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6555:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6555:18:91"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6533:18:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6612:31:91",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6614:27:91",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6628:6:91"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6636:4:91",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6624:3:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6624:17:91"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6614:6:91"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6592:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6585:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6585:26:91"
                  },
                  "nodeType": "YulIf",
                  "src": "6582:61:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6652:12:91",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6662:2:91",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "6656:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6723:111:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6744:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6751:3:91",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6756:10:91",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6747:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6747:20:91"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6737:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6737:31:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6737:31:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6788:1:91",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6791:4:91",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6781:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6781:15:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6781:15:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6816:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6819:4:91",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6809:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6809:15:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6809:15:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6679:18:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6702:6:91"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "6710:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6699:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6699:14:91"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6676:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6676:38:91"
                  },
                  "nodeType": "YulIf",
                  "src": "6673:161:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6843:61:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6892:3:91"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6897:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_string",
                      "nodeType": "YulIdentifier",
                      "src": "6856:35:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6856:48:91"
                  },
                  "variables": [
                    {
                      "name": "pos_1",
                      "nodeType": "YulTypedName",
                      "src": "6847:5:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6954:97:91",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6975:5:91"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "6986:9:91"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7001:3:91",
                                          "type": "",
                                          "value": "255"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "6997:3:91"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6997:8:91"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "6982:3:91"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6982:24:91"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6968:6:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6968:39:91"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6968:39:91"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7020:21:91",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7031:5:91"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "7038:2:91"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7027:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7027:14:91"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "7020:3:91"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "6947:104:91",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6952:1:91",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7067:311:91",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "7081:51:91",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "7126:5:91"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "7096:29:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7096:36:91"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "7085:7:91",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "7145:10:91",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7154:1:91",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "7149:1:91",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7222:113:91",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "7251:5:91"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "7258:1:91"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7247:3:91"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7247:13:91"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "7268:7:91"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "7262:5:91"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7262:14:91"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "7240:6:91"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7240:37:91"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7240:37:91"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7294:27:91",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7309:7:91"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7318:2:91"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7305:3:91"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7305:16:91"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "7294:7:91"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7179:1:91"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7182:6:91"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "7176:2:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7176:13:91"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "7190:19:91",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7192:15:91",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "7201:1:91"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "7204:2:91"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7197:3:91"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7197:10:91"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7192:1:91"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "7172:3:91",
                              "statements": []
                            },
                            "src": "7168:167:91"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "7348:20:91",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7359:5:91"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7366:1:91"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7355:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7355:13:91"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "7348:3:91"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "7060:318:91",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7065:1:91",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "name": "outOfPlaceEncoding",
                    "nodeType": "YulIdentifier",
                    "src": "6920:18:91"
                  },
                  "nodeType": "YulSwitch",
                  "src": "6913:465:91"
                }
              ]
            },
            "name": "abi_encode_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6377:5:91",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6384:3:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6392:3:91",
                "type": ""
              }
            ],
            "src": "6342:1042:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7563:193:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7580:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7591:2:91",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7573:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7573:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7573:21:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7603:61:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7637:6:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7649:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7660:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7645:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7645:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "7611:25:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7611:53:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7603:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7684:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7695:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7680:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7680:18:91"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7700:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7673:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7673:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7673:34:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7727:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7738:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7723:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7723:18:91"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7743:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7716:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7716:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7716:34:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_storage_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7516:9:91",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7527:6:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7535:6:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7543:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7554:4:91",
                "type": ""
              }
            ],
            "src": "7389:367:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7935:227:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7952:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7963:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7945:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7945:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7945:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7986:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7997:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7982:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7982:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8002:2:91",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7975:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7975:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7975:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8025:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8036:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8021:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8021:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742066",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8041:34:91",
                        "type": "",
                        "value": "Access is denied. Insufficient f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8014:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8014:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8014:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8096:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8107:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8092:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8092:18:91"
                      },
                      {
                        "hexValue": "756e64732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8112:7:91",
                        "type": "",
                        "value": "unds."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8085:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8085:35:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8085:35:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8129:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8141:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8152:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8137:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8137:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8129:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7912:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7926:4:91",
                "type": ""
              }
            ],
            "src": "7761:401:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8341:304:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8358:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8369:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8351:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8351:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8351:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8392:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8403:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8388:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8388:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8408:2:91",
                        "type": "",
                        "value": "74"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8381:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8381:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8381:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8431:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8442:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8427:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8427:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20596f7520617265206e6f7420616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8447:34:91",
                        "type": "",
                        "value": "Access is denied. You are not al"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8420:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8420:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8420:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8502:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8513:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8498:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8498:18:91"
                      },
                      {
                        "hexValue": "6c6f77656420746f207769746864726177206265666f7265207468652072656c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8518:34:91",
                        "type": "",
                        "value": "lowed to withdraw before the rel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8491:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8491:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8491:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8573:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8584:3:91",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8569:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8569:19:91"
                      },
                      {
                        "hexValue": "6561736520646174652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8590:12:91",
                        "type": "",
                        "value": "ease date."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8562:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8562:41:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8562:41:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8612:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8624:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8635:3:91",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8620:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8620:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8612:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c2c672ebaa1ef91e2a4cb289b836b7c4c6d12d9bbfeea0e85832b6812fa489cb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8318:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8332:4:91",
                "type": ""
              }
            ],
            "src": "8167:478:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8824:253:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8841:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8852:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8834:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8834:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8834:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8875:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8886:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8871:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8871:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8891:2:91",
                        "type": "",
                        "value": "63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8864:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8864:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8864:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8914:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8925:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8910:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8910:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205468652072657175657374656420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8930:34:91",
                        "type": "",
                        "value": "Access is denied. The requested "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8903:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8903:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8903:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8985:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8996:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8981:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8981:18:91"
                      },
                      {
                        "hexValue": "616d6f756e74206578636565647320796f757220616c6c6f636174696f6e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9001:33:91",
                        "type": "",
                        "value": "amount exceeds your allocation."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8974:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8974:61:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8974:61:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9044:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9056:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9067:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9052:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9052:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9044:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3c1057cbb80ed0d2f6e11108550f15ac9221a1918ce90a76ddb9a7f1c7062cc5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8801:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8815:4:91",
                "type": ""
              }
            ],
            "src": "8650:427:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9211:145:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9221:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9233:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9244:2:91",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9229:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9229:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9221:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9263:9:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9278:6:91"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9294:3:91",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9299:1:91",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9290:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9290:11:91"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9303:1:91",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9286:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9286:19:91"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9274:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9274:32:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9256:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9256:51:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9256:51:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9327:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9338:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9323:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9323:18:91"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9343:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9316:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9316:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9316:34:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9172:9:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9183:6:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9191:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9202:4:91",
                "type": ""
              }
            ],
            "src": "9082:274:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9439:199:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9485:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9494:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9497:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9487:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9487:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9487:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9460:7:91"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9469:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9456:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9456:23:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9481:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9452:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9452:32:91"
                  },
                  "nodeType": "YulIf",
                  "src": "9449:52:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9510:29:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9529:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9523:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9523:16:91"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9514:5:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9592:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9601:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9604:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9594:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9594:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9594:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9561:5:91"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9582:5:91"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9575:6:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9575:13:91"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9568:6:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9568:21:91"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9558:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9558:32:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9551:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9551:40:91"
                  },
                  "nodeType": "YulIf",
                  "src": "9548:60:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9617:15:91",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9627:5:91"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9617:6:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9405:9:91",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9416:7:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9428:6:91",
                "type": ""
              }
            ],
            "src": "9361:277:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9789:150:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9806:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9817:2:91",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9799:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9799:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9799:21:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9829:61:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9863:6:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9875:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9886:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9871:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9871:18:91"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "9837:25:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9837:53:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9829:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9910:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9921:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9906:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9906:18:91"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9926:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9899:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9899:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9899:34:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_storage_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9750:9:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9761:6:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9769:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9780:4:91",
                "type": ""
              }
            ],
            "src": "9643:296:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10025:103:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10071:16:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10080:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10083:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10073:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10073:12:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10073:12:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10046:7:91"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10055:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10042:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10042:23:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10067:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10038:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10038:32:91"
                  },
                  "nodeType": "YulIf",
                  "src": "10035:52:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10096:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10112:9:91"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10106:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10106:16:91"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10096:6:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9991:9:91",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10002:7:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10014:6:91",
                "type": ""
              }
            ],
            "src": "9944:184:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10165:95:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10182:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10189:3:91",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10194:10:91",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10185:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10185:20:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10175:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10175:31:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10175:31:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10222:1:91",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10225:4:91",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10215:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10215:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10215:15:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10246:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10249:4:91",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10239:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10239:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10239:15:91"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10133:127:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10314:76:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10336:22:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10338:16:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10338:18:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10338:18:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10330:1:91"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10333:1:91"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10327:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10327:8:91"
                  },
                  "nodeType": "YulIf",
                  "src": "10324:34:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10367:17:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10379:1:91"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10382:1:91"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10375:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10375:9:91"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10367:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10296:1:91",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10299:1:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10305:4:91",
                "type": ""
              }
            ],
            "src": "10265:125:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10524:119:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10534:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10546:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10557:2:91",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10542:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10542:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10534:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10576:9:91"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10587:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10569:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10569:25:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10569:25:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10614:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10625:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10610:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10610:18:91"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10630:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10603:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10603:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10603:34:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10485:9:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10496:6:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10504:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10515:4:91",
                "type": ""
              }
            ],
            "src": "10395:248:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10822:165:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10839:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10850:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10832:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10832:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10832:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10873:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10884:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10869:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10869:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10889:2:91",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10862:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10862:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10862:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10912:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10923:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10908:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10908:18:91"
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10928:17:91",
                        "type": "",
                        "value": "Invalid amount."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10901:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10901:45:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10901:45:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10955:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10967:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10978:2:91",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10963:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10963:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10955:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10799:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10813:4:91",
                "type": ""
              }
            ],
            "src": "10648:339:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11166:224:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11183:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11194:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11176:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11176:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11176:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11217:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11228:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11213:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11213:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11233:2:91",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11206:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11206:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11206:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11256:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11267:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11252:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11252:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e204475706c696361746520656e7472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11272:34:91",
                        "type": "",
                        "value": "Access is denied. Duplicate entr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11245:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11245:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11245:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11327:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11338:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11323:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11323:18:91"
                      },
                      {
                        "hexValue": "792e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11343:4:91",
                        "type": "",
                        "value": "y."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11316:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11316:32:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11316:32:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11357:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11369:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11380:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11365:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11365:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11357:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_33fb2bfe7d0e1088e2a69c3b294d1d3d63e6848eabd1a57a84a7792506b8a155__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11143:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11157:4:91",
                "type": ""
              }
            ],
            "src": "10992:398:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11569:247:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11586:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11597:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11579:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11579:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11579:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11620:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11631:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11616:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11616:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11636:2:91",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11609:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11609:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11609:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11659:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11670:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11655:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11655:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20506c656173652073706563696679",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11675:34:91",
                        "type": "",
                        "value": "Access is denied. Please specify"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11648:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11648:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11648:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11730:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11741:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11726:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11726:18:91"
                      },
                      {
                        "hexValue": "2061206c6f6e6765722076657374696e6720706572696f642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11746:27:91",
                        "type": "",
                        "value": " a longer vesting period."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11719:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11719:55:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11719:55:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11783:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11795:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11806:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11791:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11791:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11783:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee66c5b449a29711846f75dfa559ce8b81826f413445ec994992210fcc8fffcb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11546:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11560:4:91",
                "type": ""
              }
            ],
            "src": "11395:421:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11995:251:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12012:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12023:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12005:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12005:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12005:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12046:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12057:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12042:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12042:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12062:2:91",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12035:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12035:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12035:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12085:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12096:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12081:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12081:18:91"
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12101:34:91",
                        "type": "",
                        "value": "Access is denied. Insufficient b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12074:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12074:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12074:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12156:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12167:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12152:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12152:18:91"
                      },
                      {
                        "hexValue": "616c616e63652c2076657374696e67206361702065786365656465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12172:31:91",
                        "type": "",
                        "value": "alance, vesting cap exceeded."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12145:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12145:59:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12145:59:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12213:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12225:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12236:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12221:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12221:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12213:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11972:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11986:4:91",
                "type": ""
              }
            ],
            "src": "11821:425:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12428:550:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12445:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12456:2:91",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12438:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12438:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12438:21:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12468:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12488:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12482:5:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12482:13:91"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12472:6:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12515:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12526:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12511:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12511:18:91"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12531:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12504:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12504:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12504:34:91"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12547:10:91",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12556:1:91",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12551:1:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12618:93:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "12647:9:91"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12658:1:91"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12643:3:91"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12643:17:91"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12662:3:91",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12639:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12639:27:91"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "12682:6:91"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "12690:1:91"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12678:3:91"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12678:14:91"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12694:4:91",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12674:3:91"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12674:25:91"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12668:5:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12668:32:91"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12632:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12632:69:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12632:69:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12577:1:91"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12580:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12574:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12574:13:91"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12588:21:91",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12590:17:91",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12599:1:91"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12602:4:91",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12595:3:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12595:12:91"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12590:1:91"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12570:3:91",
                    "statements": []
                  },
                  "src": "12566:145:91"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12745:67:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "12774:9:91"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "12785:6:91"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12770:3:91"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12770:22:91"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12794:3:91",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12766:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12766:32:91"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12800:1:91",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12759:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12759:43:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12759:43:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12726:1:91"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12729:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12723:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12723:13:91"
                  },
                  "nodeType": "YulIf",
                  "src": "12720:92:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12821:63:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12837:9:91"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12856:6:91"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12864:2:91",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12852:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12852:15:91"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12873:2:91",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "12869:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12869:7:91"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12848:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12848:29:91"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12833:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12833:45:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12880:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12829:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12829:55:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12821:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12904:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12915:4:91",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12900:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12900:20:91"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12922:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12893:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12893:36:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12893:36:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12949:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12960:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12945:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12945:18:91"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12965:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12938:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12938:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12938:34:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12381:9:91",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12392:6:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12400:6:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12408:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12419:4:91",
                "type": ""
              }
            ],
            "src": "12251:727:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13157:182:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13174:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13185:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13167:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13167:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13167:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13208:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13219:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13204:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13204:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13224:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13197:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13197:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13197:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13247:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13258:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13243:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13243:18:91"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13263:34:91",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13236:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13236:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13236:62:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13307:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13319:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13330:2:91",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13315:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13315:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13307:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13134:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13148:4:91",
                "type": ""
              }
            ],
            "src": "12983:356:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13376:95:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13393:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13400:3:91",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13405:10:91",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13396:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13396:20:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13386:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13386:31:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13386:31:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13433:1:91",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13436:4:91",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13426:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13426:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13426:15:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13457:1:91",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13460:4:91",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13450:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13450:15:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13450:15:91"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "13344:127:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13521:130:91",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13531:31:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13550:5:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13557:4:91",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13546:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13546:16:91"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "13535:7:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13592:22:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13594:16:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13594:18:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13594:18:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "13577:7:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13586:4:91",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "13574:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13574:17:91"
                  },
                  "nodeType": "YulIf",
                  "src": "13571:43:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13623:22:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "13634:7:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13643:1:91",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13630:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13630:15:91"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "13623:3:91"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13503:5:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "13513:3:91",
                "type": ""
              }
            ],
            "src": "13476:175:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13785:175:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13795:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13807:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13818:2:91",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13803:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13803:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13795:4:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13830:29:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13848:3:91",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13853:1:91",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13844:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13844:11:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13857:1:91",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13840:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13840:19:91"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13834:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13875:9:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13890:6:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13898:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13886:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13886:15:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13868:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13868:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13868:34:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13922:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13933:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13918:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13918:18:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "13942:6:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13950:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13938:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13938:15:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13911:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13911:43:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13911:43:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13746:9:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13757:6:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13765:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13776:4:91",
                "type": ""
              }
            ],
            "src": "13656:304:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14139:166:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14156:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14167:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14149:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14149:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14149:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14190:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14201:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14186:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14186:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14206:2:91",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14179:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14179:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14179:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14229:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14240:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14225:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14225:18:91"
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14245:18:91",
                        "type": "",
                        "value": "Nothing to fund."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14218:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14218:46:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14218:46:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14273:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14285:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14296:2:91",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14281:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14281:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14273:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14116:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14130:4:91",
                "type": ""
              }
            ],
            "src": "13965:340:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14467:218:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14477:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14489:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14500:2:91",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14485:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14485:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14477:4:91"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14512:29:91",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14530:3:91",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14535:1:91",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14526:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14526:11:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14539:1:91",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14522:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14522:19:91"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "14516:2:91",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14557:9:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14572:6:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14580:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14568:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14568:15:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14550:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14550:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14550:34:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14604:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14615:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14600:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14600:18:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14624:6:91"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14632:2:91"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14620:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14620:15:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14593:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14593:43:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14593:43:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14656:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14667:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14652:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14652:18:91"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14672:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14645:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14645:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14645:34:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14420:9:91",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14431:6:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14439:6:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14447:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14458:4:91",
                "type": ""
              }
            ],
            "src": "14310:375:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14847:162:91",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14857:26:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14869:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14880:2:91",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14865:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14865:18:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14857:4:91"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14899:9:91"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14910:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14892:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14892:25:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14892:25:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14937:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14948:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14933:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14933:18:91"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14953:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14926:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14926:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14926:34:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14980:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14991:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14976:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14976:18:91"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14996:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14969:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14969:34:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14969:34:91"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14800:9:91",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14811:6:91",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14819:6:91",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14827:6:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14838:4:91",
                "type": ""
              }
            ],
            "src": "14690:319:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15062:80:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15089:22:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15091:16:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15091:18:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15091:18:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15078:1:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15085:1:91"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "15081:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15081:6:91"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15075:2:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15075:13:91"
                  },
                  "nodeType": "YulIf",
                  "src": "15072:39:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15120:16:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15131:1:91"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15134:1:91"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15127:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15127:9:91"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15120:3:91"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15045:1:91",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15048:1:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15054:3:91",
                "type": ""
              }
            ],
            "src": "15014:128:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15199:116:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15258:22:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15260:16:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15260:18:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15260:18:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15230:1:91"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "15223:6:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15223:9:91"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15216:6:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15216:17:91"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15238:1:91"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15249:1:91",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "15245:3:91"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15245:6:91"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "15253:1:91"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "15241:3:91"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15241:14:91"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "15235:2:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15235:21:91"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15212:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15212:45:91"
                  },
                  "nodeType": "YulIf",
                  "src": "15209:71:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15289:20:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15304:1:91"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15307:1:91"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "15300:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15300:9:91"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "15289:7:91"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15178:1:91",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15181:1:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "15187:7:91",
                "type": ""
              }
            ],
            "src": "15147:168:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15494:228:91",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15511:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15522:2:91",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15504:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15504:21:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15504:21:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15545:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15556:2:91",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15541:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15541:18:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15561:2:91",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15534:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15534:30:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15534:30:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15584:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15595:2:91",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15580:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15580:18:91"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15600:34:91",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15573:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15573:62:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15573:62:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15655:9:91"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15666:2:91",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15651:3:91"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15651:18:91"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15671:8:91",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15644:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15644:36:91"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15644:36:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15689:27:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15701:9:91"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15712:3:91",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15697:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15697:19:91"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15689:4:91"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15471:9:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15485:4:91",
                "type": ""
              }
            ],
            "src": "15320:402:91"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15773:171:91",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15804:111:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15825:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15832:3:91",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15837:10:91",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "15828:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15828:20:91"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15818:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15818:31:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15818:31:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15869:1:91",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15872:4:91",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15862:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15862:15:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15862:15:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15897:1:91",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15900:4:91",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15890:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15890:15:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15890:15:91"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15793:1:91"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15786:6:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15786:9:91"
                  },
                  "nodeType": "YulIf",
                  "src": "15783:132:91"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15924:14:91",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15933:1:91"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15936:1:91"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "15929:3:91"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15929:9:91"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "15924:1:91"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15758:1:91",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15761:1:91",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "15767:1:91",
                "type": ""
              }
            ],
            "src": "15727:217:91"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$2806__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n    {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n    function abi_encode_tuple_t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid address.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Access is denied. Requested vest\")\n        mstore(add(headStart, 96), \"ing schedule does not exist.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_494c5705e9a7014a484f7982903520206f1c897c51a1cd752526e3c563421966__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Access is denied. The vesting sc\")\n        mstore(add(headStart, 96), \"hedule was already released.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5adecffb723a004af6b679798c1cd516d03b217de4259c32b901687171fcd29f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 84)\n        mstore(add(headStart, 64), \"Access is denied. You can also e\")\n        mstore(add(headStart, 96), \"xtend the release date but not t\")\n        mstore(add(headStart, 128), \"he other way around.\")\n        tail := add(headStart, 160)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_string_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := 0\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n        let pos_1 := array_storeLengthForEncoding_string(pos, length)\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos_1, and(slotValue, not(255)))\n            ret := add(pos_1, _2)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos_1, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos_1, i)\n        }\n    }\n    function abi_encode_tuple_t_string_storage_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string_storage(value0, add(headStart, 96))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Access is denied. Insufficient f\")\n        mstore(add(headStart, 96), \"unds.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c2c672ebaa1ef91e2a4cb289b836b7c4c6d12d9bbfeea0e85832b6812fa489cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Access is denied. You are not al\")\n        mstore(add(headStart, 96), \"lowed to withdraw before the rel\")\n        mstore(add(headStart, 128), \"ease date.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_3c1057cbb80ed0d2f6e11108550f15ac9221a1918ce90a76ddb9a7f1c7062cc5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"Access is denied. The requested \")\n        mstore(add(headStart, 96), \"amount exceeds your allocation.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_string_storage_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string_storage(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid amount.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_33fb2bfe7d0e1088e2a69c3b294d1d3d63e6848eabd1a57a84a7792506b8a155__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Access is denied. Duplicate entr\")\n        mstore(add(headStart, 96), \"y.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ee66c5b449a29711846f75dfa559ce8b81826f413445ec994992210fcc8fffcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"Access is denied. Please specify\")\n        mstore(add(headStart, 96), \" a longer vesting period.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Access is denied. Insufficient b\")\n        mstore(add(headStart, 96), \"alance, vesting cap exceeded.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let length := mload(value0)\n        mstore(add(headStart, 96), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(headStart, i), 128), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 128), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 128)\n        mstore(add(headStart, 0x20), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Nothing to fund.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 91,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "521:15758:42:-:0;;;281:26:40;;;-1:-1:-1;;281:26:40;;;3233:532:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:3;719:10:27;921:18:3;:32::i;:::-;3353:20:42;:33;;;3415:15;3396:16;:34;;;3440:11;:26;;-1:-1:-1;;;;;;3440:26:42;-1:-1:-1;;;;;3440:26:42;;;;;3476:13;:30;;;3597:42;;3353:33;3597:20;;;;;;;:42;;:::i;:::-;3572:22;:67;3655:18;;3652:107;;3710:38;3727:20;3710:16;:38::i;:::-;3688:19;:60;3652:107;3233:532;;;;521:15758;;2279:187:3;2352:16;2371:6;;-1:-1:-1;;;;;2387:17:3;;;-1:-1:-1;;;;;;2387:17:3;;;;;;2419:40;;2371:6;;;;;;;2419:40;;2352:16;2419:40;2342:124;2279:187;:::o;2741:96:37:-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:37:o;259:668:70:-;329:7;;352:10;:29;;;;;;;;:::i;:::-;;349:74;;;-1:-1:-1;405:6:70;;259:668;-1:-1:-1;259:668:70:o;349:74::-;460:16;446:10;:30;;;;;;;;:::i;:::-;;443:75;;;-1:-1:-1;500:6:70;;259:668;-1:-1:-1;259:668:70:o;443:75::-;555:21;541:10;:35;;;;;;;;:::i;:::-;;538:81;;;-1:-1:-1;600:7:70;;259:668;-1:-1:-1;259:668:70:o;538:81::-;648:17;634:10;:31;;;;;;;;:::i;:::-;;631:77;;;-1:-1:-1;689:7:70;;259:668;-1:-1:-1;259:668:70:o;631:77::-;737:19;723:10;:33;;;;;;;;:::i;:::-;;720:79;;;-1:-1:-1;780:7:70;;259:668;-1:-1:-1;259:668:70:o;720:79::-;828:20;814:10;:34;;;;;;;;:::i;:::-;;811:81;;;-1:-1:-1;872:8:70;;259:668;-1:-1:-1;259:668:70:o;811:81::-;-1:-1:-1;911:8:70;;259:668;-1:-1:-1;259:668:70:o;14:584:91:-;139:6;147;155;163;216:3;204:9;195:7;191:23;187:33;184:53;;;233:1;230;223:12;184:53;256:16;;312:2;297:18;;291:25;359:2;344:18;;338:25;256:16;;-1:-1:-1;291:25:91;-1:-1:-1;;;;;;392:31:91;;382:42;;372:70;;438:1;435;428:12;372:70;511:2;496:18;;490:25;461:5;;-1:-1:-1;546:1:91;534:14;;524:42;;562:1;559;552:12;524:42;14:584;;;;-1:-1:-1;14:584:91;;-1:-1:-1;;14:584:91:o;603:225::-;643:3;674:1;670:6;667:1;664:13;661:136;;;719:10;714:3;710:20;707:1;700:31;754:4;751:1;744:15;782:4;779:1;772:15;661:136;-1:-1:-1;813:9:91;;603:225::o;833:127::-;894:10;889:3;885:20;882:1;875:31;925:4;922:1;915:15;949:4;946:1;939:15;833:127;521:15758:42;;;;;;",
  "deployedSourceMap": "521:15758:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12660:973;;;;;;:::i;:::-;;:::i;:::-;;;616:14:91;;609:22;591:41;;579:2;564:18;12660:973:42;;;;;;;;11250:967;;;;;;:::i;:::-;;:::i;1813:283:39:-;;;;;;:::i;:::-;;:::i;:::-;;1628:26:42;;;;;;;;;980:25:91;;;968:2;953:18;1628:26:42;834:177:91;15642:635:42;;;;;;:::i;:::-;;:::i;5628:482::-;;;;;;:::i;:::-;;:::i;1207:34::-;;;;;;761:97:40;;;:::i;273:38:39:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1307:31:42;;;;;;1739:29;;;;;;6836:1096;;;;;;:::i;:::-;;:::i;3906:118::-;;;:::i;281:26:40:-;;;;;;;;;724:293:39;;;;;;:::i;:::-;;:::i;1391:35:42:-;;;;;;1677:101:3;;;:::i;1510:37:42:-;;;;;;595:95:40;;;:::i;1065:28:42:-;;;;;;1036:94:3;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;1036:94;;;-1:-1:-1;;;;;2757:32:91;;;2739:51;;2727:2;2712:18;1036:94:3;2593:203:91;9726:1060:42;;;;;;:::i;:::-;;:::i;1835:24::-;;;;;-1:-1:-1;;;;;1835:24:42;;;1166:489:39;;;;;;:::i;:::-;;:::i;4743:508:42:-;;;:::i;4032:114::-;;;:::i;13840:541::-;;;;;;:::i;:::-;;:::i;2250:548:39:-;;;;;;:::i;:::-;;:::i;1927:198:3:-;;;;;;:::i;:::-;;:::i;8279:972:42:-;;;;;;:::i;:::-;;:::i;12660:973::-;527:10:39;12756:4:42;520:18:39;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;-1:-1:-1;;;;;12780:22:42;::::1;12772:51;;;;-1:-1:-1::0;;;12772:51:42::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;12841:21:42;::::1;12875:1;12841:21:::0;;;:11:::1;:21;::::0;;;;:31:::1;;::::0;12833:108:::1;;;;-1:-1:-1::0;;;12833:108:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12960:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:29:::1;;::::0;::::1;;12959:30;12951:103;;;;-1:-1:-1::0;;;12951:103:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13091:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:31:::1;;::::0;13073:15:::1;:49;13064:123;;;::::0;-1:-1:-1;;;13064:123:42;;5111:2:91;13064:123:42::1;::::0;::::1;5093:21:91::0;5150:2;5130:18;;;5123:30;5189:34;5169:18;;;5162:62;5260:30;5240:18;;;5233:58;5308:19;;13064:123:42::1;4909:424:91::0;13064:123:42::1;-1:-1:-1::0;;;;;13223:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:31:::1;;::::0;13205:49;::::1;13197:146;;;::::0;-1:-1:-1;;;13197:146:42;;5540:2:91;13197:146:42::1;::::0;::::1;5522:21:91::0;5579:2;5559:18;;;5552:30;5618:34;5598:18;;;5591:62;5689:34;5669:18;;;5662:62;-1:-1:-1;;;5740:19:91;;;5733:51;5801:19;;13197:146:42::1;5338:488:91::0;13197:146:42::1;-1:-1:-1::0;;;;;13401:21:42;::::1;13371:27;13401:21:::0;;;:11:::1;:21;::::0;;;;;;:31:::1;::::0;::::1;::::0;;13442:49;;;;13507:98;;13401:31;;:21;13507:98:::1;::::0;::::1;::::0;13401:31;;13476:15;;13507:98:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;13622:4:42::1;::::0;12660:973;-1:-1:-1;;;12660:973:42:o;11250:967::-;527:10:39;11344:4:42;520:18:39;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;-1:-1:-1;;;;;11368:22:42;::::1;11360:51;;;;-1:-1:-1::0;;;11360:51:42::1;;;;;;;:::i;:::-;11443:1;11429:11;:15;11421:24;;;::::0;::::1;;-1:-1:-1::0;;;;;11464:21:42;::::1;11498:1;11464:21:::0;;;:11:::1;:21;::::0;;;;:31:::1;;::::0;11456:108:::1;;;;-1:-1:-1::0;;;11456:108:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11583:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:29:::1;;::::0;::::1;;11582:30;11574:103;;;;-1:-1:-1::0;;;11574:103:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11695:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:36:::1;;::::0;:51;-1:-1:-1;11695:51:42::1;11687:101;;;;-1:-1:-1::0;;;11687:101:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11834:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:32:::1;;::::0;:49:::1;::::0;11871:11;11834:36:::1;:49::i;:::-;-1:-1:-1::0;;;;;11799:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:32:::1;::::0;::::1;:84:::0;;;;11932:36:::1;;::::0;:53:::1;::::0;11973:11;11932:40:::1;:53::i;:::-;-1:-1:-1::0;;;;;11893:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:36:::1;;:92:::0;12018:11:::1;::::0;:28:::1;::::0;12034:11;12018:15:::1;:28::i;:::-;12004:11;:42:::0;-1:-1:-1;;;;;12062:127:42;::::1;12092:21;::::0;;;:11:::1;:21;::::0;;;;12126:32:::1;::::0;::::1;::::0;12062:127:::1;::::0;12092:21;12126:49:::1;::::0;12163:11;12126:36:::1;:49::i;:::-;12177:11;12062:127;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;12206:4:42::1;11250:967:::0;;;;:::o;1813:283:39:-;527:10;520:18;;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;-1:-1:-1;;;;;1886:22:39;::::1;1878:31;;;::::0;::::1;;-1:-1:-1::0;;;;;1924:16:39;::::1;;::::0;;;:6:::1;:16;::::0;;;;;::::1;;1916:25;;;::::0;::::1;;1082:7:3::0;1108:6;-1:-1:-1;;;;;2003:19:39;;::::1;1108:6:3::0;;2003:19:39::1;;1995:28;;;::::0;::::1;;-1:-1:-1::0;;;;;2032:16:39;::::1;2051:5;2032:16:::0;;;:6:::1;:16;::::0;;;;;:24;;-1:-1:-1;;2032:24:39::1;::::0;;2068:22;::::1;::::0;2051:5;2068:22:::1;1813:283:::0;:::o;15642:635:42:-;14629:10;15757:4;14617:23;;;:11;:23;;;;;:33;;;15698:7;;14609:110;;;;-1:-1:-1;;;14609:110:42;;;;;;;:::i;:::-;14750:10;14738:23;;;;:11;:23;;;;;:31;;;;;14737:32;14729:105;;;;-1:-1:-1;;;14729:105:42;;;;;;;:::i;:::-;14883:10;14871:23;;;;:11;:23;;;;;:33;;;14852:15;:52;;14844:139;;;;-1:-1:-1;;;14844:139:42;;8369:2:91;14844:139:42;;;8351:21:91;8408:2;8388:18;;;8381:30;8447:34;8427:18;;;8420:62;8518:34;8498:18;;;8491:62;-1:-1:-1;;;8569:19:91;;;8562:41;8620:19;;14844:139:42;8167:478:91;14844:139:42;15013:10;15001:23;;;;:11;:23;;;;;:38;;;:49;-1:-1:-1;15001:49:42;14993:99;;;;-1:-1:-1;;;14993:99:42;;;;;;;:::i;:::-;15111:20;15134:27;15150:10;15134:15;:27::i;:::-;15297:13;;15111:50;;-1:-1:-1;15297:17:42;15294:160;;15353:7;15337:12;:23;;15329:99;;;;-1:-1:-1;;;15329:99:42;;8852:2:91;15329:99:42;;;8834:21:91;8891:2;8871:18;;;8864:30;8930:34;8910:18;;;8903:62;9001:33;8981:18;;;8974:61;9052:19;;15329:99:42;8650:427:91;15329:99:42;4349:22:::1;;4330:15;:41;;4322:50;;;::::0;::::1;;414:6:40::2;::::0;::::2;;413:7;405:16;;;::::0;::::2;;15809:10:42::3;15797:23;::::0;;;:11:::3;:23;::::0;;;;15839:15:::3;15797:39;::::0;::::3;:57:::0;15906:38:::3;;::::0;:51:::3;::::0;15949:7;15906:42:::3;:51::i;:::-;15877:10;15865:23;::::0;;;:11:::3;:23;::::0;;;;:38:::3;::::0;::::3;:92:::0;;;;16003:33:::3;;::::0;:46:::3;::::0;16041:7;16003:37:::3;:46::i;:::-;15979:10;15967:23;::::0;;;:11:::3;:23;::::0;;;;:33:::3;;:82:::0;16077:14:::3;::::0;:27:::3;::::0;16096:7;16077:18:::3;:27::i;:::-;16060:14;:44:::0;16123:11:::3;::::0;:41:::3;::::0;-1:-1:-1;;;16123:41:42;;16144:10:::3;16123:41;::::0;::::3;9256:51:91::0;9323:18;;;9316:34;;;-1:-1:-1;;;;;16123:11:42;;::::3;::::0;:20:::3;::::0;9229:18:91;;16123:41:42::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16115:50;;;::::0;::::3;;16191:10;16203:23;::::0;;;:11:::3;:23;::::0;;;;;;16181:66;;::::3;::::0;::::3;::::0;16239:7;;16181:66:::3;:::i;:::-;;;;;;;;16265:4;16257:13;;428:1:40;14599:861:42::0;15642:635;;;;:::o;5628:482::-;527:10:39;5693:4:42;520:18:39;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;5735:11:42::1;::::0;:36:::1;::::0;-1:-1:-1;;;5735:36:42;;5765:4:::1;5735:36;::::0;::::1;2739:51:91::0;5717:15:42::1;::::0;-1:-1:-1;;;;;5735:11:42::1;::::0;:21:::1;::::0;2712:18:91;;5735:36:42::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5717:54;;5781:14;5798:20;:18;:20::i;:::-;5781:37;;5847:6;5837:7;:16;5829:25;;;::::0;::::1;;5865:17;5885:16;5895:6:::0;5885:7;:16:::1;:::i;:::-;5865:36;;5933:7;5920:9;:20;;5912:29;;;::::0;::::1;;5968:11;::::0;:41:::1;::::0;-1:-1:-1;;;5968:41:42;;5989:10:::1;5968:41;::::0;::::1;9256:51:91::0;9323:18;;;9316:34;;;-1:-1:-1;;;;;5968:11:42;;::::1;::::0;:20:::1;::::0;9229:18:91;;5968:41:42::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5960:50;;;::::0;::::1;;6038:10;6026:56;6050:7:::0;6059:22:::1;:9:::0;6050:7;6059:13:::1;:22::i;:::-;6026:56;::::0;;10569:25:91;;;10625:2;10610:18;;10603:34;;;;10542:18;6026:56:42::1;;;;;;;6099:4;6092:11;;;;;571:1:39;5628:482:42::0;;;:::o;761:97:40:-;527:10:39;520:18;;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;533:6:40::1;::::0;::::1;;525:15;;;::::0;::::1;;817:6:::2;:14:::0;;-1:-1:-1;;817:14:40::2;::::0;;843:9:::2;::::0;::::2;::::0;826:5:::2;::::0;843:9:::2;761:97::o:0;6836:1096:42:-;527:10:39;6971:4:42;520:18:39;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;-1:-1:-1;;;;;6995:22:42;::::1;6987:51;;;;-1:-1:-1::0;;;6987:51:42::1;;;;;;;:::i;:::-;7066:1;7056:7;:11;7048:39;;;::::0;-1:-1:-1;;;7048:39:42;;10850:2:91;7048:39:42::1;::::0;::::1;10832:21:91::0;10889:2;10869:18;;;10862:30;-1:-1:-1;;;10908:18:91;;;10901:45;10963:18;;7048:39:42::1;10648:339:91::0;7048:39:42::1;-1:-1:-1::0;;;;;7105:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:31:::1;;::::0;:36;7097:83:::1;;;::::0;-1:-1:-1;;;7097:83:42;;11194:2:91;7097:83:42::1;::::0;::::1;11176:21:91::0;11233:2;11213:18;;;11206:30;11272:34;11252:18;;;11245:62;-1:-1:-1;;;11323:18:91;;;11316:32;11365:19;;7097:83:42::1;10992:398:91::0;7097:83:42::1;7212:22;;7198:10;:36;;7190:106;;;::::0;-1:-1:-1;;;7190:106:42;;11597:2:91;7190:106:42::1;::::0;::::1;11579:21:91::0;11636:2;11616:18;;;11609:30;11675:34;11655:18;;;11648:62;11746:27;11726:18;;;11719:55;11791:19;;7190:106:42::1;11395:421:91::0;7190:106:42::1;7337:33;7362:7;7337:20;:18;:20::i;:::-;:24:::0;::::1;:33::i;:::-;7314:19;:17;:19::i;:::-;:56;;7306:130;;;;-1:-1:-1::0;;;7306:130:42::1;;;;;;;:::i;:::-;7479:291;::::0;;::::1;::::0;::::1;::::0;;;;;7516:15:::1;7479:291;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7479:291:42;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7455:21:42;::::1;::::0;;:11:::1;:21:::0;;;;;;:315;;;;7479:291;;7455:21;;:315:::1;::::0;:21;;:315:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7455:315:42::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;7455:315:42::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;7803:11:::1;::::0;:24:::1;::::0;7819:7;7803:15:::1;:24::i;:::-;7789:11;:38:::0;7843:61:::1;::::0;-1:-1:-1;;;;;7843:61:42;::::1;::::0;::::1;::::0;::::1;::::0;7871:11;;7884:7;;7893:10;;7843:61:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;7921:4:42::1;6836:1096:::0;;;;;;:::o;3906:118::-;3981:11;;:36;;-1:-1:-1;;;3981:36:42;;4011:4;3981:36;;;2739:51:91;3955:7:42;;-1:-1:-1;;;;;3981:11:42;;:21;;2712:18:91;;3981:36:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3974:43;;3906:118;:::o;724:293:39:-;527:10;520:18;;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;-1:-1:-1;;;;;794:22:39;::::1;786:31;;;::::0;::::1;;-1:-1:-1::0;;;;;833:16:39;::::1;;::::0;;;:6:::1;:16;::::0;;;;;::::1;;832:17;824:26;;;::::0;::::1;;1082:7:3::0;1108:6;-1:-1:-1;;;;;925:19:39;;::::1;1108:6:3::0;;925:19:39::1;;917:28;;;::::0;::::1;;-1:-1:-1::0;;;;;954:16:39;::::1;;::::0;;;973:4:::1;954:16;::::0;;;;;;;:23;;-1:-1:-1;;954:23:39::1;::::0;;::::1;::::0;;;991:20;::::1;::::0;954:16;991:20:::1;724:293:::0;:::o;1677:101:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;13185:2:91;1249:68:3;;;13167:21:91;;;13204:18;;;13197:30;13263:34;13243:18;;;13236:62;13315:18;;1249:68:3;12983:356:91;1249:68:3;1741:30:::1;1768:1;1741:18;:30::i;:::-;1677:101::o:0;595:95:40:-;527:10:39;520:18;;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;414:6:40::1;::::0;::::1;;413:7;405:16;;;::::0;::::1;;652:6:::2;:13:::0;;-1:-1:-1;;652:13:40::2;661:4;652:13;::::0;;677:7:::2;::::0;::::2;::::0;652:6:::2;::::0;677:7:::2;595:95::o:0;9726:1060:42:-;527:10:39;9826:4:42;520:18:39;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;-1:-1:-1;;;;;9850:22:42;::::1;9842:51;;;;-1:-1:-1::0;;;9842:51:42::1;;;;;;;:::i;:::-;9931:1;9911:17;:21;9903:49;;;::::0;-1:-1:-1;;;9903:49:42;;10850:2:91;9903:49:42::1;::::0;::::1;10832:21:91::0;10889:2;10869:18;;;10862:30;-1:-1:-1;;;10908:18:91;;;10901:45;10963:18;;9903:49:42::1;10648:339:91::0;9903:49:42::1;-1:-1:-1::0;;;;;9971:21:42;::::1;10005:1;9971:21:::0;;;:11:::1;:21;::::0;;;;:31:::1;;::::0;9963:108:::1;;;;-1:-1:-1::0;;;9963:108:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10090:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:29:::1;;::::0;::::1;;10089:30;10081:103;;;;-1:-1:-1::0;;;10081:103:42::1;;;;;;;:::i;:::-;10226:43;10251:17;10226:20;:18;:20::i;:43::-;10203:19;:17;:19::i;:::-;:66;;10195:140;;;;-1:-1:-1::0;;;10195:140:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10381:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:32:::1;;::::0;:55:::1;::::0;10418:17;10381:36:::1;:55::i;:::-;-1:-1:-1::0;;;;;10346:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:32:::1;::::0;::::1;:90:::0;;;;10485:36:::1;;::::0;:59:::1;::::0;10526:17;10485:40:::1;:59::i;:::-;-1:-1:-1::0;;;;;10446:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:36:::1;;:98:::0;10569:11:::1;::::0;:34:::1;::::0;10585:17;10569:15:::1;:34::i;:::-;10555:11;:48:::0;-1:-1:-1;;;;;10619:139:42;::::1;10649:21;::::0;;;:11:::1;:21;::::0;;;;10683:32:::1;::::0;::::1;::::0;10619:139:::1;::::0;10649:21;10683:55:::1;::::0;10720:17;10683:36:::1;:55::i;1166:489:39:-:0;527:10;520:18;;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;1247:7:::1;1243:407;1260:9;:16;1258:1;:18;;;1243:407;;;1292:15;1310:9;1320:1;1310:12;;;;;;;;;;:::i;:::-;;;;;;;1292:30;;1513:1;-1:-1:-1::0;;;;;1494:21:39::1;:7;-1:-1:-1::0;;;;;1494:21:39::1;;;:41;;;;-1:-1:-1::0;;;;;;1520:15:39;::::1;;::::0;;;:6:::1;:15;::::0;;;;;::::1;;1519:16;1494:41;:63;;;;-1:-1:-1::0;1082:7:3;1108:6;-1:-1:-1;;;;;1539:18:39;;::::1;1108:6:3::0;;1539:18:39::1;;1494:63;1491:152;;;-1:-1:-1::0;;;;;1569:15:39;::::1;;::::0;;;1587:4:::1;1569:15;::::0;;;;;;;:22;;-1:-1:-1;;1569:22:39::1;::::0;;::::1;::::0;;1620:12;;:9;;1569:22:::1;1620:12:::0;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;1609:24:39::1;;;;;;;;;;;1491:152;-1:-1:-1::0;1278:3:39;::::1;::::0;::::1;:::i;:::-;;;;1243:407;;;;1166:489:::0;:::o;4743:508:42:-;527:10:39;4786:4:42;520:18:39;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;4860:11:42::1;::::0;:48:::1;::::0;-1:-1:-1;;;4860:48:42;;4882:10:::1;4860:48;::::0;::::1;13868:34:91::0;4902:4:42::1;13918:18:91::0;;;13911:43;4840:17:42::1;::::0;-1:-1:-1;;;;;4860:11:42::1;::::0;:21:::1;::::0;13803:18:91;;4860:48:42::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4840:68;;4938:1;4926:9;:13;4918:42;;;::::0;-1:-1:-1;;;4918:42:42;;14167:2:91;4918:42:42::1;::::0;::::1;14149:21:91::0;14206:2;14186:18;;;14179:30;-1:-1:-1;;;14225:18:91;;;14218:46;14281:18;;4918:42:42::1;13965:340:91::0;4918:42:42::1;5013:15;5031:19;:17;:19::i;:::-;5085:11;::::0;:62:::1;::::0;-1:-1:-1;;;5085:62:42;;5110:10:::1;5085:62;::::0;::::1;14550:34:91::0;5130:4:42::1;14600:18:91::0;;;14593:43;14652:18;;;14645:34;;;5013:37:42;;-1:-1:-1;;;;;;5085:11:42::1;::::0;:24:::1;::::0;14485:18:91;;5085:62:42::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5077:71;;;::::0;::::1;;5171:10;5164:59;5183:9:::0;5194:7;5203:19:::1;:17;:19::i;:::-;5164:59;::::0;;14892:25:91;;;14948:2;14933:18;;14926:34;;;;14976:18;;;14969:34;14880:2;14865:18;5164:59:42::1;;;;;;;5240:4;5233:11;;;;4743:508:::0;:::o;4032:114::-;4082:7;4108:31;4124:14;;4108:11;;:15;;:31;;;;:::i;13840:541::-;13903:7;13925:13;;13942:1;13925:18;13922:55;;;-1:-1:-1;13965:1:42;;13840:541;-1:-1:-1;13840:541:42:o;13922:55::-;-1:-1:-1;;;;;14032:21:42;;13995:16;14032:21;;;:11;:21;;;;;:31;;;14014:49;;:15;:49;:::i;:::-;13995:68;;14073:14;14095:33;14108:19;;14095:8;:12;;:33;;;;:::i;:::-;14090:39;;:1;:39;:::i;:::-;14073:56;;14140:14;14166:13;;14157:6;:22;;;;:::i;:::-;-1:-1:-1;;;;;14212:21:42;;14189:11;14212:21;;;:11;:21;;;;;:32;;;14140:39;;-1:-1:-1;14189:11:42;14203:41;;:85;;14282:6;14203:85;;;-1:-1:-1;;;;;14247:21:42;;;;;;:11;:21;;;;;:32;;;14203:85;14189:99;;14298:20;14321:23;14329:14;;14321:3;:7;;:23;;;;:::i;:::-;14298:46;13840:541;-1:-1:-1;;;;;;;13840:541:42:o;2250:548:39:-;527:10;520:18;;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;2334:7:::1;2330:463;2347:9;:16;2345:1;:18;;;2330:463;;;2379:15;2397:9;2407:1;2397:12;;;;;;;;;;:::i;:::-;;;;;;;2379:30;;2654:1;-1:-1:-1::0;;;;;2635:21:39::1;:7;-1:-1:-1::0;;;;;2635:21:39::1;;;:40;;;;-1:-1:-1::0;;;;;;2660:15:39;::::1;;::::0;;;:6:::1;:15;::::0;;;;;::::1;;2635:40;:62;;;;-1:-1:-1::0;1082:7:3;1108:6;-1:-1:-1;;;;;2679:18:39;;::::1;1108:6:3::0;;2679:18:39::1;;2635:62;2632:154;;;-1:-1:-1::0;;;;;2709:15:39;::::1;2727:5;2709:15:::0;;;:6:::1;:15;::::0;;;;:23;;-1:-1:-1;;2709:23:39::1;::::0;;2763:12;;:9;;2709:23:::1;2763:12:::0;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;2750:26:39::1;;;;;;;;;;;2632:154;-1:-1:-1::0;2365:3:39;::::1;::::0;::::1;:::i;:::-;;;;2330:463;;1927:198:3::0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;13185:2:91;1249:68:3;;;13167:21:91;;;13204:18;;;13197:30;13263:34;13243:18;;;13236:62;13315:18;;1249:68:3;12983:356:91;1249:68:3;-1:-1:-1;;;;;2015:22:3;::::1;2007:73;;;::::0;-1:-1:-1;;;2007:73:3;;15522:2:91;2007:73:3::1;::::0;::::1;15504:21:91::0;15561:2;15541:18;;;15534:30;15600:34;15580:18;;;15573:62;-1:-1:-1;;;15651:18:91;;;15644:36;15697:19;;2007:73:3::1;15320:402:91::0;2007:73:3::1;2090:28;2109:8;2090:18;:28::i;:::-;1927:198:::0;:::o;8279:972:42:-;527:10:39;8350:4:42;520:18:39;;;:6;:18;;;;;;;;;:43;;-1:-1:-1;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;542:10:39;:21;520:43;512:52;;;;;;-1:-1:-1;;;;;8374:22:42;::::1;8366:51;;;;-1:-1:-1::0;;;8366:51:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8435:21:42;::::1;8469:1;8435:21:::0;;;:11:::1;:21;::::0;;;;:31:::1;;::::0;8427:108:::1;;;;-1:-1:-1::0;;;8427:108:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8554:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:29:::1;;::::0;::::1;;8553:30;8545:103;;;;-1:-1:-1::0;;;8545:103:42::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8680:21:42;::::1;8659:18;8680:21:::0;;;:11:::1;:21;::::0;;;;:32:::1;::::0;::::1;::::0;8748:36:::1;::::0;::::1;::::0;8814:31:::1;::::0;;::::1;::::0;8680:32;;8876:30:::1;8748:36:::0;8814:31;8876:19:::1;:30::i;:::-;8855:51:::0;-1:-1:-1;8952:26:42::1;:10:::0;8855:51;8952:14:::1;:26::i;:::-;-1:-1:-1::0;;;;;8917:21:42;::::1;;::::0;;;:11:::1;:21;::::0;;;;:32:::1;::::0;::::1;:61:::0;;;;8988:36:::1;::::0;::::1;:40:::0;9038:29:::1;;:36:::0;;-1:-1:-1;;9038:36:42::1;9070:4;9038:36;::::0;;9107:11:::1;::::0;:27:::1;::::0;9123:10;9107:15:::1;:27::i;:::-;9093:11;:41:::0;-1:-1:-1;;;;;9150:73:42;::::1;9178:21;::::0;;;:11:::1;:21;::::0;;;;;;9150:73;;::::1;::::0;::::1;::::0;9212:10;;9150:73:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;9240:4:42::1;::::0;8279:972;-1:-1:-1;;;;;8279:972:42:o;2741:96:37:-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:37:o;3108:::-;3166:7;3192:5;3196:1;3192;:5;:::i;2279:187:3:-;2352:16;2371:6;;-1:-1:-1;;;;;2387:17:3;;;-1:-1:-1;;;;;;2387:17:3;;;;;;2419:40;;2371:6;;;;;;;2419:40;;2352:16;2419:40;2342:124;2279:187;:::o;3836:96:37:-;3894:7;3920:5;3924:1;3920;:5;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:91;82:20;;-1:-1:-1;;;;;131:31:91;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:91:o;643:186::-;702:6;755:2;743:9;734:7;730:23;726:32;723:52;;;771:1;768;761:12;723:52;794:29;813:9;794:29;:::i;1016:180::-;1075:6;1128:2;1116:9;1107:7;1103:23;1099:32;1096:52;;;1144:1;1141;1134:12;1096:52;-1:-1:-1;1167:23:91;;1016:180;-1:-1:-1;1016:180:91:o;1201:127::-;1262:10;1257:3;1253:20;1250:1;1243:31;1293:4;1290:1;1283:15;1317:4;1314:1;1307:15;1333:275;1404:2;1398:9;1469:2;1450:13;;-1:-1:-1;;1446:27:91;1434:40;;1504:18;1489:34;;1525:22;;;1486:62;1483:88;;;1551:18;;:::i;:::-;1587:2;1580:22;1333:275;;-1:-1:-1;1333:275:91:o;1613:975::-;1709:6;1717;1725;1733;1786:3;1774:9;1765:7;1761:23;1757:33;1754:53;;;1803:1;1800;1793:12;1754:53;1826:29;1845:9;1826:29;:::i;:::-;1816:39;;1874:2;1927;1916:9;1912:18;1899:32;1950:18;1991:2;1983:6;1980:14;1977:34;;;2007:1;2004;1997:12;1977:34;2045:6;2034:9;2030:22;2020:32;;2090:7;2083:4;2079:2;2075:13;2071:27;2061:55;;2112:1;2109;2102:12;2061:55;2148:2;2135:16;2170:2;2166;2163:10;2160:36;;;2176:18;;:::i;:::-;2218:53;2261:2;2242:13;;-1:-1:-1;;2238:27:91;2234:36;;2218:53;:::i;:::-;2205:66;;2294:2;2287:5;2280:17;2334:7;2329:2;2324;2320;2316:11;2312:20;2309:33;2306:53;;;2355:1;2352;2345:12;2306:53;2410:2;2405;2401;2397:11;2392:2;2385:5;2381:14;2368:45;2454:1;2433:14;;;2429:23;;;2422:34;;;;-1:-1:-1;1613:975:91;;2437:5;;-1:-1:-1;;;;2527:2:91;2512:18;;2499:32;;2578:2;2563:18;2550:32;;1613:975::o;3023:952::-;3107:6;3138:2;3181;3169:9;3160:7;3156:23;3152:32;3149:52;;;3197:1;3194;3187:12;3149:52;3237:9;3224:23;3266:18;3307:2;3299:6;3296:14;3293:34;;;3323:1;3320;3313:12;3293:34;3361:6;3350:9;3346:22;3336:32;;3406:7;3399:4;3395:2;3391:13;3387:27;3377:55;;3428:1;3425;3418:12;3377:55;3464:2;3451:16;3486:2;3482;3479:10;3476:36;;;3492:18;;:::i;:::-;3538:2;3535:1;3531:10;3521:20;;3561:28;3585:2;3581;3577:11;3561:28;:::i;:::-;3623:15;;;3693:11;;;3689:20;;;3654:12;;;;3721:19;;;3718:39;;;3753:1;3750;3743:12;3718:39;3777:11;;;;3797:148;3813:6;3808:3;3805:15;3797:148;;;3879:23;3898:3;3879:23;:::i;:::-;3867:36;;3830:12;;;;3923;;;;3797:148;;;3964:5;3023:952;-1:-1:-1;;;;;;;;3023:952:91:o;4135:340::-;4337:2;4319:21;;;4376:2;4356:18;;;4349:30;-1:-1:-1;;;4410:2:91;4395:18;;4388:46;4466:2;4451:18;;4135:340::o;4480:424::-;4682:2;4664:21;;;4721:2;4701:18;;;4694:30;4760:34;4755:2;4740:18;;4733:62;4831:30;4826:2;4811:18;;4804:58;4894:3;4879:19;;4480:424::o;5831:380::-;5910:1;5906:12;;;;5953;;;5974:61;;6028:4;6020:6;6016:17;6006:27;;5974:61;6081:2;6073:6;6070:14;6050:18;6047:38;6044:161;;;6127:10;6122:3;6118:20;6115:1;6108:31;6162:4;6159:1;6152:15;6190:4;6187:1;6180:15;6044:161;;5831:380;;;:::o;6342:1042::-;6427:12;;6392:3;;6482:1;6502:18;;;;6555;;;;6582:61;;6636:4;6628:6;6624:17;6614:27;;6582:61;6662:2;6710;6702:6;6699:14;6679:18;6676:38;6673:161;;;6756:10;6751:3;6747:20;6744:1;6737:31;6791:4;6788:1;6781:15;6819:4;6816:1;6809:15;6673:161;4067:19;;;4119:4;4110:14;;6920:18;6947:104;;;;7065:1;7060:318;;;;6913:465;;6947:104;-1:-1:-1;;6982:24:91;;6968:39;;7027:14;;;;-1:-1:-1;6947:104:91;;7060:318;6289:1;6282:14;;;6326:4;6313:18;;7154:1;7168:167;7182:6;7179:1;7176:13;7168:167;;;7262:14;;7247:13;;;7240:37;7305:16;;;;7197:10;;7168:167;;;7355:13;;;-1:-1:-1;;6913:465:91;;;;;;;;6342:1042;;;;:::o;7389:367::-;7591:2;7580:9;7573:21;7554:4;7611:53;7660:2;7649:9;7645:18;7637:6;7611:53;:::i;:::-;7695:2;7680:18;;7673:34;;;;-1:-1:-1;7738:2:91;7723:18;7716:34;7603:61;7389:367;-1:-1:-1;7389:367:91:o;7761:401::-;7963:2;7945:21;;;8002:2;7982:18;;;7975:30;8041:34;8036:2;8021:18;;8014:62;-1:-1:-1;;;8107:2:91;8092:18;;8085:35;8152:3;8137:19;;7761:401::o;9361:277::-;9428:6;9481:2;9469:9;9460:7;9456:23;9452:32;9449:52;;;9497:1;9494;9487:12;9449:52;9529:9;9523:16;9582:5;9575:13;9568:21;9561:5;9558:32;9548:60;;9604:1;9601;9594:12;9643:296;9817:2;9806:9;9799:21;9780:4;9837:53;9886:2;9875:9;9871:18;9863:6;9837:53;:::i;:::-;9829:61;;9926:6;9921:2;9910:9;9906:18;9899:34;9643:296;;;;;:::o;9944:184::-;10014:6;10067:2;10055:9;10046:7;10042:23;10038:32;10035:52;;;10083:1;10080;10073:12;10035:52;-1:-1:-1;10106:16:91;;9944:184;-1:-1:-1;9944:184:91:o;10133:127::-;10194:10;10189:3;10185:20;10182:1;10175:31;10225:4;10222:1;10215:15;10249:4;10246:1;10239:15;10265:125;10305:4;10333:1;10330;10327:8;10324:34;;;10338:18;;:::i;:::-;-1:-1:-1;10375:9:91;;10265:125::o;11821:425::-;12023:2;12005:21;;;12062:2;12042:18;;;12035:30;12101:34;12096:2;12081:18;;12074:62;12172:31;12167:2;12152:18;;12145:59;12236:3;12221:19;;11821:425::o;12251:727::-;12456:2;12445:9;12438:21;12419:4;12488:6;12482:13;12531:6;12526:2;12515:9;12511:18;12504:34;12556:1;12566:145;12580:6;12577:1;12574:13;12566:145;;;12694:4;12678:14;;;12674:25;;12668:32;12662:3;12643:17;;;12639:27;12632:69;12595:12;12566:145;;;12729:6;12726:1;12723:13;12720:92;;;12800:1;12794:3;12785:6;12774:9;12770:22;12766:32;12759:43;12720:92;-1:-1:-1;12915:4:91;12900:20;;12893:36;;;;-1:-1:-1;12960:2:91;12945:18;;12938:34;;;;12880:3;12873:2;12852:15;;;-1:-1:-1;;12848:29:91;12833:45;12829:55;;;-1:-1:-1;12251:727:91:o;13344:127::-;13405:10;13400:3;13396:20;13393:1;13386:31;13436:4;13433:1;13426:15;13460:4;13457:1;13450:15;13476:175;13513:3;13557:4;13550:5;13546:16;13586:4;13577:7;13574:17;13571:43;;;13594:18;;:::i;:::-;13643:1;13630:15;;13476:175;-1:-1:-1;;13476:175:91:o;15014:128::-;15054:3;15085:1;15081:6;15078:1;15075:13;15072:39;;;15091:18;;:::i;:::-;-1:-1:-1;15127:9:91;;15014:128::o;15147:168::-;15187:7;15253:1;15249;15245:6;15241:14;15238:1;15235:21;15230:1;15223:9;15216:17;15212:45;15209:71;;;15260:18;;:::i;:::-;-1:-1:-1;15300:9:91;;15147:168::o;15727:217::-;15767:1;15793;15783:132;;15837:10;15832:3;15828:20;15825:1;15818:31;15872:4;15869:1;15862:15;15900:4;15897:1;15890:15;15783:132;-1:-1:-1;15929:9:91;;15727:217::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.11;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\nimport \"./CustomAdmin.sol\";\nimport \"./frequencyHelper.sol\";\nimport \"./CustomPausable.sol\";\n\n/**\n * @title Vesting\n * @dev A token holder contract that can release its token balance gradually like a\n * typical vesting scheme, vesting period. Optionally revocable by the\n * creator.\n */\ncontract VestingBase is CustomAdmin, FrequencyHelper, CustomPausable {\n  using SafeMath for uint256;\n \n\n  ///@dev Token allocation structure for vesting.\n    struct Allocation {\n        string  memberName;\n        uint256 startedOn;\n        uint256 releaseOn;\n        uint256 allocation;\n        uint256 closingBalance;\n        bool deleted;\n        uint256 withdrawn;\n        uint256 lastWithdrawnOn;\n    }\n\n\n    ///@notice Maximum amount of tokens that can be withdrawn for the specified frequency.\n    ///Zero means that there's no cap;\n    uint256 public withdrawalCap;\n\n    ///@notice The frequency of token withdrawals. If the withdrawalCap is zero, this variable is ignored.\n    uint256 public withdrawalFrequency;\n\n    ///@notice The date on which the vesting was started. \n    uint256 public vestingStartedOn;\n\n    ///@notice The minimum period of vesting.\n    uint256 public minimumVestingPeriod;\n\n    ///@notice The earliest date on which the vested tokens can be redeemed.\n    uint256 public earliestWithdrawalDate;\n\n    ///@notice The sum total amount of tokens vested for all allocations.\n    uint256 public totalVested;\n\n    ///@notice The sum total amount of tokens withdrawn from all allocations.\n    uint256 public totalWithdrawn;\n\n    ///@notice The ERC20 contract of the coin being vested.\n    ERC20 public vestingCoin;\n\n    ///@notice The list of vesting schedule allocations;\n    mapping(address => Allocation) internal allocations;\n\n\n///Events;\n    event Funded(address indexed _funder, uint256 _amount, uint256 _previousCap, uint256 _newCap);\n    event FundRemoved(address indexed _address, uint256 _amount, uint256 _remainingInPool);\n    event Withdrawn(address indexed _address, string _memberName, uint256 _amount);\n\n\n    event AllocationCreated(address indexed _address, string _memberName, uint256 _amount, uint256 _releaseOn);\n    event AllocationDeleted(address indexed _address, string _memberName, uint256 _amount);\n    event AllocationIncreased(address indexed _address, string _memberName, uint256 _amount, uint256 _additionalAmount);\n    event AllocationDecreased(address indexed _address, string _memberName, uint256 _amount, uint256 _lessAmount);\n    event ScheduleExtended(address indexed _address, string _memberName, uint256 _releaseOn, uint256 _newReleaseDate);\n\n\n     ///@notice Constructs this contract\n    ///@param _minPeriod The minimum vesting period.\n    ///@param _withdrawalCap Maximum amount of tokens that can be withdrawn for the specified frequency.\n    ///@param _withdrawalFrequency The frequency of token withdrawals. If the _withdrawalCap is zero, this variable is ignored.\n    ///@param _vestingCoin The ERC20 contract of the coin being vested.\n\n\n     constructor(uint256 _minPeriod, uint256 _withdrawalCap, ERC20 _vestingCoin,  Frequency _withdrawalFrequency)  {\n        minimumVestingPeriod = _minPeriod;\n        vestingStartedOn = block.timestamp;\n        vestingCoin = _vestingCoin;\n        withdrawalCap = _withdrawalCap;\n\n        ///Calcualate the earliest date of withdrawal.\n        earliestWithdrawalDate = vestingStartedOn.add(minimumVestingPeriod);\n\n          if(_withdrawalCap > 0){\n            withdrawalFrequency = convertFrequency(_withdrawalFrequency);\n        }\n    }\n\n\n    ///@notice The balance of this smart contract. \n    ///@return Returns the closing balance of vesting coin held by this contract.\n    function getAvailableFunds() public view returns(uint256) {\n        return vestingCoin.balanceOf(address(this));\n    }\n\n      function getAmountInVesting() public view returns(uint256) {\n        return totalVested.sub(totalWithdrawn);\n    }\n\n    ///@notice Signifies that the action is only possible \n    ///after the earliest withdrawal date of the vesting contract.\n modifier afterEarliestWithdrawalDate {\n        require(block.timestamp >= earliestWithdrawalDate);\n        \n        _;\n    }\n\n    ///@notice Enables this vesting contract to receive the ERC20 (vesting coin).\n    ///Before calling this function please approve your desired amount of the coin\n    ///for this smart contract address.\n    ///Please note that this action is restricted to administrators only.\n    ///@return Returns true if the funding was successful.\n    function fund() external onlyAdmin returns(bool) {\n        ///Check the funds available.\n        uint256 allowance = vestingCoin.allowance(msg.sender, address(this));\n        require(allowance > 0, \"Nothing to fund.\");\n   \n        ///Get the current allocation.\n        uint256 current = getAvailableFunds();\n                \n        require(vestingCoin.transferFrom(msg.sender, address(this), allowance));\n\n        emit Funded(msg.sender, allowance, current, getAvailableFunds());\n        return true;\n    }\n\n\n     ///@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n    ///Please note that this action is restricted to administrators only\n    ///and you may only withdraw amounts above the sum total allocation balances.\n    ///@param _amount The amount desired to withdraw.\n    ///@return Returns true if the withdrawal was successful.\n    function removeFunds(uint256 _amount) external onlyAdmin returns(bool) {        \n        uint256 balance = vestingCoin.balanceOf(address(this));\n        uint256 locked = getAmountInVesting();\n\n        require(balance > locked);\n\n        uint256 available = balance - locked;\n\n        require(available >= _amount);\n        \n        require(vestingCoin.transfer(msg.sender, _amount));\n\n        emit FundRemoved(msg.sender, _amount, available.sub(_amount));\n        return true;\n    }\n\n     ///@notice Creates a vesting schedule allocation for a new beneficiary.\n    ///A beneficiary could mean founders, employees, or advisors.\n    ///Please note that this action can only be performed by an administrator.\n    ///@param _address The address which will receive the tokens in the future date.\n    ///@param _memberName The name of the candidate for which this vesting schedule allocation is being created for.\n    ///@param _amount The total amount of tokens being vested over the period of vesting duration.\n    ///@param _releaseOn The date on which the first vesting schedule becomes available for withdrawal.\n    ///@return Returns true if the vesting schedule allocation was successfully created.\n\n       function createAllocation(address _address, string memory _memberName, uint256 _amount, uint256 _releaseOn) external onlyAdmin returns(bool) {\n        require(_address != address(0), \"Invalid address.\");\n        require(_amount > 0, \"Invalid amount.\");\n        require(allocations[_address].startedOn == 0, \"Access is denied. Duplicate entry.\");\n        require(_releaseOn >= earliestWithdrawalDate, \"Access is denied. Please specify a longer vesting period.\");\n        require(getAvailableFunds() >= getAmountInVesting().add(_amount), \"Access is denied. Insufficient balance, vesting cap exceeded.\");\n        \n        allocations[_address] = Allocation({ \n            startedOn: block.timestamp,\n            memberName: _memberName,\n            releaseOn: _releaseOn,\n            allocation: _amount,\n            closingBalance: _amount,\n            deleted: false,\n            withdrawn: 0,\n            lastWithdrawnOn: 0\n        });\n        \n        totalVested = totalVested.add(_amount);\n\n        emit AllocationCreated(_address, _memberName, _amount, _releaseOn);\n        return true;\n    }\n\n\n    ///@notice Deletes the specified vesting schedule allocation.\n    ///Please note that this action can only be performed by an administrator.\n    ///@param _address The address of the beneficiary whose allocation is being requested to be deleted.\n    ///@return Returns true if the vesting schedule allocation was successfully deleted.\n     function deleteAllocation(address _address) external onlyAdmin returns(bool) {\n        require(_address != address(0), \"Invalid address.\");\n        require(allocations[_address].startedOn > 0, \"Access is denied. Requested vesting schedule does not exist.\");\n        require(!allocations[_address].deleted, \"Access is denied. Requested vesting schedule does not exist.\");\n\n        uint256 allocation = allocations[_address].allocation;\n        uint256 previousBalance = allocations[_address].closingBalance;\n        uint256 withdrawn = allocations[_address].withdrawn;\n        uint256 lessAmount = previousBalance.sub(withdrawn);\n\n        allocations[_address].allocation = allocation.sub(lessAmount);\n        allocations[_address].closingBalance = 0;\n        allocations[_address].deleted = true;\n        \n        totalVested = totalVested.sub(lessAmount);\n\n        emit AllocationDeleted(_address, allocations[_address].memberName, lessAmount);\n        return true;\n    }\n\n\n\n ///@notice Increases the total allocation of the specified vesting schedule.\n    ///Please note that this action can only be performed by an administrator.\n    ///@param _address The address of the beneficiary whose allocation is being requested to be increased.\n    ///@param _additionalAmount The additional amount in vesting coin to be addeded to the existing allocation.\n    ///@return Returns true if the vesting schedule allocation was successfully increased.\n    function increaseAllocation(address _address, uint256 _additionalAmount) external onlyAdmin returns(bool) {\n        require(_address != address(0), \"Invalid address.\");\n        require(_additionalAmount > 0, \"Invalid amount.\");\n\n        require(allocations[_address].startedOn > 0, \"Access is denied. Requested vesting schedule does not exist.\");\n        require(!allocations[_address].deleted, \"Access is denied. Requested vesting schedule does not exist.\");\n\n        require(getAvailableFunds() >= getAmountInVesting().add(_additionalAmount), \"Access is denied. Insufficient balance, vesting cap exceeded.\");\n\n        allocations[_address].allocation = allocations[_address].allocation.add(_additionalAmount);\n        allocations[_address].closingBalance = allocations[_address].closingBalance.add(_additionalAmount);\n\n        totalVested = totalVested.add(_additionalAmount);\n\n        emit AllocationIncreased(_address, allocations[_address].memberName, allocations[_address].allocation.sub(_additionalAmount), _additionalAmount);\n        return true;\n    }\n\n     ///@notice Decreases the total allocation of the specified vesting schedule.\n    ///Please note that this action can only be performed by an administrator.\n    ///@param _address The address of the beneficiary whose allocation is being requested to be decreased.\n    ///@param _lessAmount The amount in vesting coin to be decreased from the existing allocation.\n    ///@return Returns true if the vesting schedule allocation was successfully decreased.\n    function decreaseAllocation(address _address, uint256 _lessAmount) external onlyAdmin returns(bool) {\n        require(_address != address(0), \"Invalid address.\");\n        require(_lessAmount > 0);\n\n        require(allocations[_address].startedOn > 0, \"Access is denied. Requested vesting schedule does not exist.\");\n        require(!allocations[_address].deleted, \"Access is denied. Requested vesting schedule does not exist.\");\n        require(allocations[_address].closingBalance >= _lessAmount, \"Access is denied. Insufficient funds.\");\n\n        allocations[_address].allocation = allocations[_address].allocation.sub(_lessAmount);\n        allocations[_address].closingBalance = allocations[_address].closingBalance.sub(_lessAmount);\n        \n        totalVested = totalVested.sub(_lessAmount);\n\n        emit AllocationDecreased(_address, allocations[_address].memberName, allocations[_address].allocation.add(_lessAmount), _lessAmount);\n        return true;\n    }\n\n    ///@notice Extends the release date of the specified vesting schedule allocation.\n    ///Please note that this action can only be performed by an administrator.\n    ///@param _address The address of the beneficiary who allocation is being requested to be extended.\n    ///@param _newReleaseDate A new release date to extend the allocation to.\n    ///@return Returns true if the vesting schedule allocation was successfully extended.\n    function extendAllocation(address _address, uint256 _newReleaseDate) external onlyAdmin returns(bool) {\n        require(_address != address(0), \"Invalid address.\");\n        require(allocations[_address].startedOn > 0, \"Access is denied. Requested vesting schedule does not exist.\");\n        require(!allocations[_address].deleted, \"Access is denied. Requested vesting schedule does not exist.\");\n        require (block.timestamp < allocations[_address].releaseOn, \"Access is denied. The vesting schedule was already released.\");\n        require(_newReleaseDate > allocations[_address].releaseOn, \"Access is denied. You can also extend the release date but not the other way around.\");        \n        \n\n        uint256 previousReleaseDate = allocations[_address].releaseOn;\n        allocations[_address].releaseOn = _newReleaseDate;\n\n        emit ScheduleExtended(_address, allocations[_address].memberName, previousReleaseDate, _newReleaseDate);\n        return true;\n    }\n    \n    ///@notice Gets the drawing power of the beneficiary.\n    ///@param _address The address to check the drawing power of.\n    ///@return Returns the amount in vesting coin that can be withdrawn.\n    function getDrawingPower(address _address) public view returns(uint256) {\n        if(withdrawalCap == 0){\n            return 0;\n        }\n        \n        uint256 duration = block.timestamp - allocations[_address].releaseOn;\n        uint256 cycles = 1 + (duration.div(withdrawalFrequency));\n\n        uint256 amount = cycles * withdrawalCap;\n        uint256 cap = amount > allocations[_address].allocation ? allocations[_address].allocation : amount;\n        uint256 drawingPower = cap.sub(totalWithdrawn);\n\n        return drawingPower;\n    }\n    \n    ///@notice Signifies if the sender has enough balances to withdraw the desired amount of the vesting coin.\n    ///@param _amount The amount desired to be withdrawn.\n    modifier canWithdraw(uint256 _amount)  {\n        require(allocations[msg.sender].startedOn > 0, \"Access is denied. Requested vesting schedule does not exist.\");\n        require(!allocations[msg.sender].deleted, \"Access is denied. Requested vesting schedule does not exist.\");\n        require(block.timestamp >= allocations[msg.sender].releaseOn, \"Access is denied. You are not allowed to withdraw before the release date.\");\n        require(allocations[msg.sender].closingBalance >= _amount, \"Access is denied. Insufficient funds.\");\n        \n        uint256 drawingPower = getDrawingPower(msg.sender);\n\n        ///Zero means unlimited amount.\n        ///We've already verified above that the investor has sufficient balance.\n        if(withdrawalCap > 0){\n            require(drawingPower >= _amount, \"Access is denied. The requested amount exceeds your allocation.\");\n            _;\n        }\n    }\n\n    ///@notice This action enables the beneficiaries to withdraw a desired amount from this contract.    \n    ///@param _amount The amount in vesting coin desired to withdraw.\n    function withdraw(uint256 _amount) external canWithdraw(_amount) afterEarliestWithdrawalDate whenNotPaused returns(bool) {                        \n        allocations[msg.sender].lastWithdrawnOn = block.timestamp;\n\n        allocations[msg.sender].closingBalance = allocations[msg.sender].closingBalance.sub(_amount);\n        allocations[msg.sender].withdrawn = allocations[msg.sender].withdrawn.add(_amount);\n\n        totalWithdrawn = totalWithdrawn.add(_amount);\n\n        require(vestingCoin.transfer(msg.sender, _amount));\n\n        emit Withdrawn(msg.sender, allocations[msg.sender].memberName, _amount);\n        return (true);\n    }\n}",
  "sourcePath": "C:\\Users\\user\\Desktop\\alpsfinance-smart-contracts\\contracts\\Vesting\\VestingBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/Vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        5297
      ],
      "CustomAdmin": [
        7328
      ],
      "CustomPausable": [
        7393
      ],
      "ERC20": [
        2806
      ],
      "FrequencyHelper": [
        8627
      ],
      "IERC20": [
        2884
      ],
      "IERC20Metadata": [
        3590
      ],
      "Ownable": [
        532
      ],
      "SafeMath": [
        7057
      ],
      "VestingBase": [
        8503
      ]
    },
    "id": 8504,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7415,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:42"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7416,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 2885,
        "src": "64:56:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7417,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 7058,
        "src": "121:57:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 7418,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 2807,
        "src": "179:55:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Vesting/CustomAdmin.sol",
        "file": "./CustomAdmin.sol",
        "id": 7419,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 7329,
        "src": "236:27:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Vesting/frequencyHelper.sol",
        "file": "./frequencyHelper.sol",
        "id": 7420,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 8628,
        "src": "264:31:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Vesting/CustomPausable.sol",
        "file": "./CustomPausable.sol",
        "id": 7421,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 7394,
        "src": "296:30:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7423,
              "name": "CustomAdmin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7328,
              "src": "545:11:42"
            },
            "id": 7424,
            "nodeType": "InheritanceSpecifier",
            "src": "545:11:42"
          },
          {
            "baseName": {
              "id": 7425,
              "name": "FrequencyHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8627,
              "src": "558:15:42"
            },
            "id": 7426,
            "nodeType": "InheritanceSpecifier",
            "src": "558:15:42"
          },
          {
            "baseName": {
              "id": 7427,
              "name": "CustomPausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7393,
              "src": "575:14:42"
            },
            "id": 7428,
            "nodeType": "InheritanceSpecifier",
            "src": "575:14:42"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7422,
          "nodeType": "StructuredDocumentation",
          "src": "328:192:42",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 8503,
        "linearizedBaseContracts": [
          8503,
          7393,
          8627,
          7328,
          532,
          5297
        ],
        "name": "VestingBase",
        "nameLocation": "530:11:42",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7431,
            "libraryName": {
              "id": 7429,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "600:8:42"
            },
            "nodeType": "UsingForDirective",
            "src": "594:27:42",
            "typeName": {
              "id": 7430,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "613:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "VestingBase.Allocation",
            "id": 7448,
            "members": [
              {
                "constant": false,
                "id": 7433,
                "mutability": "mutable",
                "name": "memberName",
                "nameLocation": "715:10:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "707:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7432,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:6:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7435,
                "mutability": "mutable",
                "name": "startedOn",
                "nameLocation": "743:9:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "735:17:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7434,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "735:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7437,
                "mutability": "mutable",
                "name": "releaseOn",
                "nameLocation": "770:9:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "762:17:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7436,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "762:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7439,
                "mutability": "mutable",
                "name": "allocation",
                "nameLocation": "797:10:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "789:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7438,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "789:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7441,
                "mutability": "mutable",
                "name": "closingBalance",
                "nameLocation": "825:14:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "817:22:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7440,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "817:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7443,
                "mutability": "mutable",
                "name": "deleted",
                "nameLocation": "854:7:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "849:12:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7442,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "849:4:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7445,
                "mutability": "mutable",
                "name": "withdrawn",
                "nameLocation": "879:9:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "871:17:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7444,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "871:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7447,
                "mutability": "mutable",
                "name": "lastWithdrawnOn",
                "nameLocation": "906:15:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "898:23:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7446,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "898:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Allocation",
            "nameLocation": "686:10:42",
            "nodeType": "StructDefinition",
            "scope": 8503,
            "src": "679:249:42",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7449,
              "nodeType": "StructuredDocumentation",
              "src": "935:125:42",
              "text": "@notice Maximum amount of tokens that can be withdrawn for the specified frequency.\nZero means that there's no cap;"
            },
            "functionSelector": "8971611c",
            "id": 7451,
            "mutability": "mutable",
            "name": "withdrawalCap",
            "nameLocation": "1080:13:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1065:28:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1065:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7452,
              "nodeType": "StructuredDocumentation",
              "src": "1100:102:42",
              "text": "@notice The frequency of token withdrawals. If the withdrawalCap is zero, this variable is ignored."
            },
            "functionSelector": "3792bab4",
            "id": 7454,
            "mutability": "mutable",
            "name": "withdrawalFrequency",
            "nameLocation": "1222:19:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1207:34:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7453,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1207:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7455,
              "nodeType": "StructuredDocumentation",
              "src": "1248:54:42",
              "text": "@notice The date on which the vesting was started. "
            },
            "functionSelector": "4713a044",
            "id": 7457,
            "mutability": "mutable",
            "name": "vestingStartedOn",
            "nameLocation": "1322:16:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1307:31:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7456,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1307:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7458,
              "nodeType": "StructuredDocumentation",
              "src": "1345:41:42",
              "text": "@notice The minimum period of vesting."
            },
            "functionSelector": "706250c8",
            "id": 7460,
            "mutability": "mutable",
            "name": "minimumVestingPeriod",
            "nameLocation": "1406:20:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1391:35:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7459,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1391:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7461,
              "nodeType": "StructuredDocumentation",
              "src": "1433:72:42",
              "text": "@notice The earliest date on which the vested tokens can be redeemed."
            },
            "functionSelector": "78ee3af6",
            "id": 7463,
            "mutability": "mutable",
            "name": "earliestWithdrawalDate",
            "nameLocation": "1525:22:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1510:37:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7462,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1510:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7464,
              "nodeType": "StructuredDocumentation",
              "src": "1554:69:42",
              "text": "@notice The sum total amount of tokens vested for all allocations."
            },
            "functionSelector": "199cbc54",
            "id": 7466,
            "mutability": "mutable",
            "name": "totalVested",
            "nameLocation": "1643:11:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1628:26:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7465,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1628:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7467,
              "nodeType": "StructuredDocumentation",
              "src": "1661:73:42",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 7469,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "1754:14:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1739:29:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1739:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7470,
              "nodeType": "StructuredDocumentation",
              "src": "1775:55:42",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 7473,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "1848:11:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1835:24:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2806",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 7472,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7471,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2806,
                "src": "1835:5:42"
              },
              "referencedDeclaration": 2806,
              "src": "1835:5:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2806",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7474,
              "nodeType": "StructuredDocumentation",
              "src": "1866:52:42",
              "text": "@notice The list of vesting schedule allocations;"
            },
            "id": 7479,
            "mutability": "mutable",
            "name": "allocations",
            "nameLocation": "1963:11:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1923:51:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
              "typeString": "mapping(address => struct VestingBase.Allocation)"
            },
            "typeName": {
              "id": 7478,
              "keyType": {
                "id": 7475,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1931:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1923:30:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                "typeString": "mapping(address => struct VestingBase.Allocation)"
              },
              "valueType": {
                "id": 7477,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7476,
                  "name": "Allocation",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7448,
                  "src": "1942:10:42"
                },
                "referencedDeclaration": 7448,
                "src": "1942:10:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Allocation_$7448_storage_ptr",
                  "typeString": "struct VestingBase.Allocation"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7480,
              "nodeType": "StructuredDocumentation",
              "src": "1978:10:42",
              "text": "Events;"
            },
            "id": 7490,
            "name": "Funded",
            "nameLocation": "1999:6:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7482,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_funder",
                  "nameLocation": "2022:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "2006:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7484,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2039:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "2031:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7486,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_previousCap",
                  "nameLocation": "2056:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "2048:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7488,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newCap",
                  "nameLocation": "2078:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "2070:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2005:81:42"
            },
            "src": "1993:94:42"
          },
          {
            "anonymous": false,
            "id": 7498,
            "name": "FundRemoved",
            "nameLocation": "2098:11:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7492,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2126:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "2110:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7494,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2144:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "2136:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7496,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_remainingInPool",
                  "nameLocation": "2161:16:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "2153:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2109:69:42"
            },
            "src": "2092:87:42"
          },
          {
            "anonymous": false,
            "id": 7506,
            "name": "Withdrawn",
            "nameLocation": "2190:9:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7500,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2216:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "2200:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7502,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2233:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "2226:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7501,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7504,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2254:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "2246:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2199:63:42"
            },
            "src": "2184:79:42"
          },
          {
            "anonymous": false,
            "id": 7516,
            "name": "AllocationCreated",
            "nameLocation": "2276:17:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7508,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2310:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7516,
                  "src": "2294:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7510,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2327:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7516,
                  "src": "2320:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2320:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7512,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2348:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7516,
                  "src": "2340:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2340:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_releaseOn",
                  "nameLocation": "2365:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7516,
                  "src": "2357:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2293:83:42"
            },
            "src": "2270:107:42"
          },
          {
            "anonymous": false,
            "id": 7524,
            "name": "AllocationDeleted",
            "nameLocation": "2388:17:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7518,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2422:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2406:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7520,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2439:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2432:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7519,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2432:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7522,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2460:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2452:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2405:63:42"
            },
            "src": "2382:87:42"
          },
          {
            "anonymous": false,
            "id": 7534,
            "name": "AllocationIncreased",
            "nameLocation": "2480:19:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7526,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2516:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7534,
                  "src": "2500:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2533:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7534,
                  "src": "2526:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2526:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7530,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2554:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7534,
                  "src": "2546:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7532,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_additionalAmount",
                  "nameLocation": "2571:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7534,
                  "src": "2563:25:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2563:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2499:90:42"
            },
            "src": "2474:116:42"
          },
          {
            "anonymous": false,
            "id": 7544,
            "name": "AllocationDecreased",
            "nameLocation": "2601:19:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7536,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2637:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "2621:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2621:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7538,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2654:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "2647:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7537,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7540,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2675:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "2667:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2667:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7542,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_lessAmount",
                  "nameLocation": "2692:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "2684:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2620:84:42"
            },
            "src": "2595:110:42"
          },
          {
            "anonymous": false,
            "id": 7554,
            "name": "ScheduleExtended",
            "nameLocation": "2716:16:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7546,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2749:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7554,
                  "src": "2733:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2733:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7548,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2766:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7554,
                  "src": "2759:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7550,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_releaseOn",
                  "nameLocation": "2787:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7554,
                  "src": "2779:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7552,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newReleaseDate",
                  "nameLocation": "2807:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7554,
                  "src": "2799:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2732:91:42"
            },
            "src": "2710:114:42"
          },
          {
            "body": {
              "id": 7603,
              "nodeType": "Block",
              "src": "3343:422:42",
              "statements": [
                {
                  "expression": {
                    "id": 7570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7568,
                      "name": "minimumVestingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7460,
                      "src": "3353:20:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7569,
                      "name": "_minPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7557,
                      "src": "3376:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3353:33:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7571,
                  "nodeType": "ExpressionStatement",
                  "src": "3353:33:42"
                },
                {
                  "expression": {
                    "id": 7575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7572,
                      "name": "vestingStartedOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7457,
                      "src": "3396:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7573,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3415:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 7574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3415:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3396:34:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7576,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:34:42"
                },
                {
                  "expression": {
                    "id": 7579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7577,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7473,
                      "src": "3440:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7578,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7562,
                      "src": "3454:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3440:26:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 7580,
                  "nodeType": "ExpressionStatement",
                  "src": "3440:26:42"
                },
                {
                  "expression": {
                    "id": 7583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7581,
                      "name": "withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "3476:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7582,
                      "name": "_withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7559,
                      "src": "3492:14:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3476:30:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7584,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:30:42"
                },
                {
                  "documentation": "Calcualate the earliest date of withdrawal.",
                  "expression": {
                    "id": 7590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7585,
                      "name": "earliestWithdrawalDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7463,
                      "src": "3572:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7588,
                          "name": "minimumVestingPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7460,
                          "src": "3618:20:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7586,
                          "name": "vestingStartedOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7457,
                          "src": "3597:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "3597:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3597:42:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3572:67:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7591,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:67:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7592,
                      "name": "_withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7559,
                      "src": "3655:14:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3672:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3655:18:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7602,
                  "nodeType": "IfStatement",
                  "src": "3652:107:42",
                  "trueBody": {
                    "id": 7601,
                    "nodeType": "Block",
                    "src": "3674:85:42",
                    "statements": [
                      {
                        "expression": {
                          "id": 7599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7595,
                            "name": "withdrawalFrequency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7454,
                            "src": "3688:19:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 7597,
                                "name": "_withdrawalFrequency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7565,
                                "src": "3727:20:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Frequency_$8567",
                                  "typeString": "enum FrequencyHelper.Frequency"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Frequency_$8567",
                                  "typeString": "enum FrequencyHelper.Frequency"
                                }
                              ],
                              "id": 7596,
                              "name": "convertFrequency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8626,
                              "src": "3710:16:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_enum$_Frequency_$8567_$returns$_t_uint256_$",
                                "typeString": "function (enum FrequencyHelper.Frequency) pure returns (uint256)"
                              }
                            },
                            "id": 7598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3710:38:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3688:60:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7600,
                        "nodeType": "ExpressionStatement",
                        "src": "3688:60:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7555,
              "nodeType": "StructuredDocumentation",
              "src": "2832:394:42",
              "text": "@notice Constructs this contract\n@param _minPeriod The minimum vesting period.\n@param _withdrawalCap Maximum amount of tokens that can be withdrawn for the specified frequency.\n@param _withdrawalFrequency The frequency of token withdrawals. If the _withdrawalCap is zero, this variable is ignored.\n@param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 7604,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7557,
                  "mutability": "mutable",
                  "name": "_minPeriod",
                  "nameLocation": "3253:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "3245:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7559,
                  "mutability": "mutable",
                  "name": "_withdrawalCap",
                  "nameLocation": "3273:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "3265:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7562,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "3295:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "3289:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2806",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7561,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7560,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2806,
                      "src": "3289:5:42"
                    },
                    "referencedDeclaration": 2806,
                    "src": "3289:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7565,
                  "mutability": "mutable",
                  "name": "_withdrawalFrequency",
                  "nameLocation": "3320:20:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "3310:30:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Frequency_$8567",
                    "typeString": "enum FrequencyHelper.Frequency"
                  },
                  "typeName": {
                    "id": 7564,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7563,
                      "name": "Frequency",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8567,
                      "src": "3310:9:42"
                    },
                    "referencedDeclaration": 8567,
                    "src": "3310:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Frequency_$8567",
                      "typeString": "enum FrequencyHelper.Frequency"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3244:97:42"
            },
            "returnParameters": {
              "id": 7567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3343:0:42"
            },
            "scope": 8503,
            "src": "3233:532:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7618,
              "nodeType": "Block",
              "src": "3964:60:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7614,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4011:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4003:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4003:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4003:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7610,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7473,
                        "src": "3981:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "3981:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:36:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7609,
                  "id": 7617,
                  "nodeType": "Return",
                  "src": "3974:43:42"
                }
              ]
            },
            "documentation": {
              "id": 7605,
              "nodeType": "StructuredDocumentation",
              "src": "3772:129:42",
              "text": "@notice The balance of this smart contract. \n@return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 7619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "3915:17:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3932:2:42"
            },
            "returnParameters": {
              "id": 7609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7619,
                  "src": "3955:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3955:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3954:9:42"
            },
            "scope": 8503,
            "src": "3906:118:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7629,
              "nodeType": "Block",
              "src": "4091:55:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7626,
                        "name": "totalWithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "4124:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7624,
                        "name": "totalVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "4108:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6936,
                      "src": "4108:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4108:31:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7623,
                  "id": 7628,
                  "nodeType": "Return",
                  "src": "4101:38:42"
                }
              ]
            },
            "functionSelector": "dba61ab7",
            "id": 7630,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountInVesting",
            "nameLocation": "4041:18:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4059:2:42"
            },
            "returnParameters": {
              "id": 7623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7630,
                  "src": "4082:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4081:9:42"
            },
            "scope": 8503,
            "src": "4032:114:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7641,
              "nodeType": "Block",
              "src": "4312:87:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7634,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4330:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4330:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7636,
                          "name": "earliestWithdrawalDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7463,
                          "src": "4349:22:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4330:41:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4322:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:50:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7639,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:50:42"
                },
                {
                  "id": 7640,
                  "nodeType": "PlaceholderStatement",
                  "src": "4391:1:42"
                }
              ]
            },
            "documentation": {
              "id": 7631,
              "nodeType": "StructuredDocumentation",
              "src": "4152:121:42",
              "text": "@notice Signifies that the action is only possible \nafter the earliest withdrawal date of the vesting contract."
            },
            "id": 7642,
            "name": "afterEarliestWithdrawalDate",
            "nameLocation": "4284:27:42",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4312:0:42"
            },
            "src": "4275:124:42",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7700,
              "nodeType": "Block",
              "src": "4792:459:42",
              "statements": [
                {
                  "assignments": [
                    7652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7652,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "4848:9:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7700,
                      "src": "4840:17:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7651,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4840:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check the funds available.",
                  "id": 7662,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7655,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4882:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4882:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7659,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4902:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4894:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7657,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4894:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4894:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7653,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7473,
                        "src": "4860:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2360,
                      "src": "4860:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 7661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4860:48:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4840:68:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7664,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7652,
                          "src": "4926:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4938:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4926:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "id": 7667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4941:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        },
                        "value": "Nothing to fund."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        }
                      ],
                      "id": 7663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4918:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:42:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7669,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:42:42"
                },
                {
                  "assignments": [
                    7672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7672,
                      "mutability": "mutable",
                      "name": "current",
                      "nameLocation": "5021:7:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7700,
                      "src": "5013:15:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7671,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5013:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the current allocation.",
                  "id": 7675,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7673,
                      "name": "getAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7619,
                      "src": "5031:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5031:19:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5013:37:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7679,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5110:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5110:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 7683,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5130:4:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestingBase_$8503",
                                  "typeString": "contract VestingBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VestingBase_$8503",
                                  "typeString": "contract VestingBase"
                                }
                              ],
                              "id": 7682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5122:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7681,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5122:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5122:13:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7685,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7652,
                            "src": "5137:9:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7677,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7473,
                            "src": "5085:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2418,
                          "src": "5085:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5085:62:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5077:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5077:71:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7688,
                  "nodeType": "ExpressionStatement",
                  "src": "5077:71:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7690,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5171:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5171:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7692,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7652,
                        "src": "5183:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7693,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7672,
                        "src": "5194:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7694,
                          "name": "getAvailableFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7619,
                          "src": "5203:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 7695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5203:19:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7689,
                      "name": "Funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7490,
                      "src": "5164:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5164:59:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7697,
                  "nodeType": "EmitStatement",
                  "src": "5159:64:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5240:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7649,
                  "id": 7699,
                  "nodeType": "Return",
                  "src": "5233:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7643,
              "nodeType": "StructuredDocumentation",
              "src": "4405:333:42",
              "text": "@notice Enables this vesting contract to receive the ERC20 (vesting coin).\nBefore calling this function please approve your desired amount of the coin\nfor this smart contract address.\nPlease note that this action is restricted to administrators only.\n@return Returns true if the funding was successful."
            },
            "functionSelector": "b60d4288",
            "id": 7701,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7646,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7645,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "4768:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "4768:9:42"
              }
            ],
            "name": "fund",
            "nameLocation": "4752:4:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4756:2:42"
            },
            "returnParameters": {
              "id": 7649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7701,
                  "src": "4786:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7647,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4786:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4785:6:42"
            },
            "scope": 8503,
            "src": "4743:508:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7765,
              "nodeType": "Block",
              "src": "5699:411:42",
              "statements": [
                {
                  "assignments": [
                    7712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7712,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "5725:7:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7765,
                      "src": "5717:15:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5717:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7720,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7717,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5765:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5757:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7715,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5757:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5757:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7713,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7473,
                        "src": "5735:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "5735:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5735:36:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5717:54:42"
                },
                {
                  "assignments": [
                    7722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7722,
                      "mutability": "mutable",
                      "name": "locked",
                      "nameLocation": "5789:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7765,
                      "src": "5781:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7721,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5781:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7725,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7723,
                      "name": "getAmountInVesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7630,
                      "src": "5798:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5798:20:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5781:37:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7727,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7712,
                          "src": "5837:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 7728,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7722,
                          "src": "5847:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5837:16:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5829:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5829:25:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7731,
                  "nodeType": "ExpressionStatement",
                  "src": "5829:25:42"
                },
                {
                  "assignments": [
                    7733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7733,
                      "mutability": "mutable",
                      "name": "available",
                      "nameLocation": "5873:9:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7765,
                      "src": "5865:17:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7732,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5865:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7737,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7734,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7712,
                      "src": "5885:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 7735,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7722,
                      "src": "5895:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5885:16:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5865:36:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7739,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7733,
                          "src": "5920:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7740,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7704,
                          "src": "5933:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5920:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5912:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5912:29:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7743,
                  "nodeType": "ExpressionStatement",
                  "src": "5912:29:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7747,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5989:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5989:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7749,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7704,
                            "src": "6001:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7745,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7473,
                            "src": "5968:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "5968:20:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5968:41:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5960:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5960:50:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7752,
                  "nodeType": "ExpressionStatement",
                  "src": "5960:50:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7754,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6038:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6038:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7756,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7704,
                        "src": "6050:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7759,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7704,
                            "src": "6073:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7757,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7733,
                            "src": "6059:9:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6936,
                          "src": "6059:13:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6059:22:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7753,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7498,
                      "src": "6026:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 7761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6026:56:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7762,
                  "nodeType": "EmitStatement",
                  "src": "6021:61:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6099:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7710,
                  "id": 7764,
                  "nodeType": "Return",
                  "src": "6092:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7702,
              "nodeType": "StructuredDocumentation",
              "src": "5259:364:42",
              "text": "@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\nPlease note that this action is restricted to administrators only\nand you may only withdraw amounts above the sum total allocation balances.\n@param _amount The amount desired to withdraw.\n@return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 7766,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7707,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7706,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "5675:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "5675:9:42"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "5637:11:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7704,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5657:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7766,
                  "src": "5649:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5649:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5648:17:42"
            },
            "returnParameters": {
              "id": 7710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7766,
                  "src": "5693:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7708,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5693:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5692:6:42"
            },
            "scope": 8503,
            "src": "5628:482:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7860,
              "nodeType": "Block",
              "src": "6977:955:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7783,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7769,
                          "src": "6995:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7015:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7007:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7784,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7007:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7007:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6995:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 7789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7019:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 7782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6987:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6987:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7791,
                  "nodeType": "ExpressionStatement",
                  "src": "6987:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7793,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7773,
                          "src": "7056:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7066:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7056:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e742e",
                        "id": 7796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7069:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc",
                          "typeString": "literal_string \"Invalid amount.\""
                        },
                        "value": "Invalid amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc",
                          "typeString": "literal_string \"Invalid amount.\""
                        }
                      ],
                      "id": 7792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7048:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7048:39:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7798,
                  "nodeType": "ExpressionStatement",
                  "src": "7048:39:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7800,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "7105:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 7802,
                            "indexExpression": {
                              "id": 7801,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7769,
                              "src": "7117:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7105:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 7803,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "7105:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7140:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7105:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e204475706c696361746520656e7472792e",
                        "id": 7806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7143:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33fb2bfe7d0e1088e2a69c3b294d1d3d63e6848eabd1a57a84a7792506b8a155",
                          "typeString": "literal_string \"Access is denied. Duplicate entry.\""
                        },
                        "value": "Access is denied. Duplicate entry."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33fb2bfe7d0e1088e2a69c3b294d1d3d63e6848eabd1a57a84a7792506b8a155",
                          "typeString": "literal_string \"Access is denied. Duplicate entry.\""
                        }
                      ],
                      "id": 7799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7097:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7097:83:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7808,
                  "nodeType": "ExpressionStatement",
                  "src": "7097:83:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7810,
                          "name": "_releaseOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7775,
                          "src": "7198:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7811,
                          "name": "earliestWithdrawalDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7463,
                          "src": "7212:22:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7198:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20506c6561736520737065636966792061206c6f6e6765722076657374696e6720706572696f642e",
                        "id": 7813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7236:59:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee66c5b449a29711846f75dfa559ce8b81826f413445ec994992210fcc8fffcb",
                          "typeString": "literal_string \"Access is denied. Please specify a longer vesting period.\""
                        },
                        "value": "Access is denied. Please specify a longer vesting period."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee66c5b449a29711846f75dfa559ce8b81826f413445ec994992210fcc8fffcb",
                          "typeString": "literal_string \"Access is denied. Please specify a longer vesting period.\""
                        }
                      ],
                      "id": 7809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7190:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7190:106:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7815,
                  "nodeType": "ExpressionStatement",
                  "src": "7190:106:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7817,
                            "name": "getAvailableFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7619,
                            "src": "7314:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 7818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7314:19:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 7822,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7773,
                              "src": "7362:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 7819,
                                "name": "getAmountInVesting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7630,
                                "src": "7337:18:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 7820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7337:20:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6921,
                            "src": "7337:24:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 7823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7337:33:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7314:56:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742062616c616e63652c2076657374696e67206361702065786365656465642e",
                        "id": 7825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7372:63:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca",
                          "typeString": "literal_string \"Access is denied. Insufficient balance, vesting cap exceeded.\""
                        },
                        "value": "Access is denied. Insufficient balance, vesting cap exceeded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca",
                          "typeString": "literal_string \"Access is denied. Insufficient balance, vesting cap exceeded.\""
                        }
                      ],
                      "id": 7816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7306:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7306:130:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7827,
                  "nodeType": "ExpressionStatement",
                  "src": "7306:130:42"
                },
                {
                  "expression": {
                    "id": 7842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7828,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "7455:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 7830,
                      "indexExpression": {
                        "id": 7829,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7769,
                        "src": "7467:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7455:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 7832,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "7516:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7516:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7834,
                          "name": "_memberName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7771,
                          "src": "7557:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 7835,
                          "name": "_releaseOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7775,
                          "src": "7593:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7836,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7773,
                          "src": "7629:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7837,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7773,
                          "src": "7666:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 7838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7696:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 7839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7726:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 7840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7758:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7831,
                        "name": "Allocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7448,
                        "src": "7479:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Allocation_$7448_storage_ptr_$",
                          "typeString": "type(struct VestingBase.Allocation storage pointer)"
                        }
                      },
                      "id": 7841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "startedOn",
                        "memberName",
                        "releaseOn",
                        "allocation",
                        "closingBalance",
                        "deleted",
                        "withdrawn",
                        "lastWithdrawnOn"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7479:291:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_memory_ptr",
                        "typeString": "struct VestingBase.Allocation memory"
                      }
                    },
                    "src": "7455:315:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                      "typeString": "struct VestingBase.Allocation storage ref"
                    }
                  },
                  "id": 7843,
                  "nodeType": "ExpressionStatement",
                  "src": "7455:315:42"
                },
                {
                  "expression": {
                    "id": 7849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7844,
                      "name": "totalVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "7789:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7847,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7773,
                          "src": "7819:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7845,
                          "name": "totalVested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7466,
                          "src": "7803:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "7803:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7803:24:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7789:38:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7850,
                  "nodeType": "ExpressionStatement",
                  "src": "7789:38:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7852,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7769,
                        "src": "7861:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7853,
                        "name": "_memberName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "7871:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7854,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7773,
                        "src": "7884:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7855,
                        "name": "_releaseOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7775,
                        "src": "7893:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7851,
                      "name": "AllocationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7516,
                      "src": "7843:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256,uint256)"
                      }
                    },
                    "id": 7856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7843:61:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7857,
                  "nodeType": "EmitStatement",
                  "src": "7838:66:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7921:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7781,
                  "id": 7859,
                  "nodeType": "Return",
                  "src": "7914:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7767,
              "nodeType": "StructuredDocumentation",
              "src": "6117:711:42",
              "text": "@notice Creates a vesting schedule allocation for a new beneficiary.\nA beneficiary could mean founders, employees, or advisors.\nPlease note that this action can only be performed by an administrator.\n@param _address The address which will receive the tokens in the future date.\n@param _memberName The name of the candidate for which this vesting schedule allocation is being created for.\n@param _amount The total amount of tokens being vested over the period of vesting duration.\n@param _releaseOn The date on which the first vesting schedule becomes available for withdrawal.\n@return Returns true if the vesting schedule allocation was successfully created."
            },
            "functionSelector": "517b4912",
            "id": 7861,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7777,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "6953:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "6953:9:42"
              }
            ],
            "name": "createAllocation",
            "nameLocation": "6845:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7769,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6870:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6862:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6862:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7771,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "6894:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6880:25:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7770,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6880:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7773,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6915:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6907:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6907:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7775,
                  "mutability": "mutable",
                  "name": "_releaseOn",
                  "nameLocation": "6932:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6924:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6924:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6861:82:42"
            },
            "returnParameters": {
              "id": 7781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7780,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6971:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7779,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6971:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6970:6:42"
            },
            "scope": 8503,
            "src": "6836:1096:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7970,
              "nodeType": "Block",
              "src": "8356:895:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7872,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7864,
                          "src": "8374:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8394:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8386:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7873,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8386:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8386:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8374:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 7878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8398:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 7871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8366:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8366:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7880,
                  "nodeType": "ExpressionStatement",
                  "src": "8366:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7882,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "8435:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 7884,
                            "indexExpression": {
                              "id": 7883,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7864,
                              "src": "8447:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8435:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 7885,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "8435:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8469:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8435:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 7888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8472:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 7881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8427:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8427:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7890,
                  "nodeType": "ExpressionStatement",
                  "src": "8427:108:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8553:30:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7892,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "8554:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 7894,
                            "indexExpression": {
                              "id": 7893,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7864,
                              "src": "8566:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8554:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 7895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "8554:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 7897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8585:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 7891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8545:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8545:103:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7899,
                  "nodeType": "ExpressionStatement",
                  "src": "8545:103:42"
                },
                {
                  "assignments": [
                    7901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7901,
                      "mutability": "mutable",
                      "name": "allocation",
                      "nameLocation": "8667:10:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "8659:18:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8659:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7906,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7902,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "8680:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 7904,
                      "indexExpression": {
                        "id": 7903,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7864,
                        "src": "8692:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8680:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "id": 7905,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "allocation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7439,
                    "src": "8680:32:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8659:53:42"
                },
                {
                  "assignments": [
                    7908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7908,
                      "mutability": "mutable",
                      "name": "previousBalance",
                      "nameLocation": "8730:15:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "8722:23:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7907,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8722:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7913,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7909,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "8748:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 7911,
                      "indexExpression": {
                        "id": 7910,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7864,
                        "src": "8760:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8748:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "id": 7912,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "closingBalance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7441,
                    "src": "8748:36:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8722:62:42"
                },
                {
                  "assignments": [
                    7915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7915,
                      "mutability": "mutable",
                      "name": "withdrawn",
                      "nameLocation": "8802:9:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "8794:17:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7914,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8794:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7920,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7916,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "8814:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 7918,
                      "indexExpression": {
                        "id": 7917,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7864,
                        "src": "8826:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8814:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "id": 7919,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "withdrawn",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7445,
                    "src": "8814:31:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8794:51:42"
                },
                {
                  "assignments": [
                    7922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7922,
                      "mutability": "mutable",
                      "name": "lessAmount",
                      "nameLocation": "8863:10:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "8855:18:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7921,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8855:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7927,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7925,
                        "name": "withdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7915,
                        "src": "8896:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7923,
                        "name": "previousBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7908,
                        "src": "8876:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6936,
                      "src": "8876:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8876:30:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8855:51:42"
                },
                {
                  "expression": {
                    "id": 7936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7928,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "8917:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 7930,
                        "indexExpression": {
                          "id": 7929,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7864,
                          "src": "8929:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8917:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 7931,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7439,
                      "src": "8917:32:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7934,
                          "name": "lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7922,
                          "src": "8967:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7932,
                          "name": "allocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7901,
                          "src": "8952:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "8952:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8952:26:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8917:61:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7937,
                  "nodeType": "ExpressionStatement",
                  "src": "8917:61:42"
                },
                {
                  "expression": {
                    "id": 7943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7938,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "8988:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 7940,
                        "indexExpression": {
                          "id": 7939,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7864,
                          "src": "9000:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8988:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 7941,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "closingBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7441,
                      "src": "8988:36:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 7942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9027:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8988:40:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7944,
                  "nodeType": "ExpressionStatement",
                  "src": "8988:40:42"
                },
                {
                  "expression": {
                    "id": 7950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7945,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "9038:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 7947,
                        "indexExpression": {
                          "id": 7946,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7864,
                          "src": "9050:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9038:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 7948,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deleted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7443,
                      "src": "9038:29:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9070:4:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9038:36:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7951,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:36:42"
                },
                {
                  "expression": {
                    "id": 7957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7952,
                      "name": "totalVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "9093:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7955,
                          "name": "lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7922,
                          "src": "9123:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7953,
                          "name": "totalVested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7466,
                          "src": "9107:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "9107:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9107:27:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9093:41:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7958,
                  "nodeType": "ExpressionStatement",
                  "src": "9093:41:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7960,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7864,
                        "src": "9168:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7961,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "9178:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 7963,
                          "indexExpression": {
                            "id": 7962,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7864,
                            "src": "9190:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9178:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 7964,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "9178:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 7965,
                        "name": "lessAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7922,
                        "src": "9212:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7959,
                      "name": "AllocationDeleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7524,
                      "src": "9150:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 7966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9150:73:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7967,
                  "nodeType": "EmitStatement",
                  "src": "9145:78:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9240:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7870,
                  "id": 7969,
                  "nodeType": "Return",
                  "src": "9233:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7862,
              "nodeType": "StructuredDocumentation",
              "src": "7939:334:42",
              "text": "@notice Deletes the specified vesting schedule allocation.\nPlease note that this action can only be performed by an administrator.\n@param _address The address of the beneficiary whose allocation is being requested to be deleted.\n@return Returns true if the vesting schedule allocation was successfully deleted."
            },
            "functionSelector": "fad36ece",
            "id": 7971,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7867,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7866,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "8332:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "8332:9:42"
              }
            ],
            "name": "deleteAllocation",
            "nameLocation": "8288:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7864,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "8313:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "8305:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8305:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8304:18:42"
            },
            "returnParameters": {
              "id": 7870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "8350:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7868,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8350:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8349:6:42"
            },
            "scope": 8503,
            "src": "8279:972:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8082,
              "nodeType": "Block",
              "src": "9832:954:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7984,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7974,
                          "src": "9850:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9870:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9862:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7985,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9862:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9862:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9850:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 7990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9874:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 7983,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9842:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9842:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7992,
                  "nodeType": "ExpressionStatement",
                  "src": "9842:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7994,
                          "name": "_additionalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "9911:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9931:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9911:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e742e",
                        "id": 7997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9934:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc",
                          "typeString": "literal_string \"Invalid amount.\""
                        },
                        "value": "Invalid amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc",
                          "typeString": "literal_string \"Invalid amount.\""
                        }
                      ],
                      "id": 7993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9903:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9903:49:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7999,
                  "nodeType": "ExpressionStatement",
                  "src": "9903:49:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8001,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "9971:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8003,
                            "indexExpression": {
                              "id": 8002,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7974,
                              "src": "9983:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9971:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8004,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "9971:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10005:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9971:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10008:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9963:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9963:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8009,
                  "nodeType": "ExpressionStatement",
                  "src": "9963:108:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10089:30:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8011,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "10090:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8013,
                            "indexExpression": {
                              "id": 8012,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7974,
                              "src": "10102:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10090:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8014,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "10090:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10121:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10081:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10081:103:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8018,
                  "nodeType": "ExpressionStatement",
                  "src": "10081:103:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8020,
                            "name": "getAvailableFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7619,
                            "src": "10203:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 8021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10203:19:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 8025,
                              "name": "_additionalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7976,
                              "src": "10251:17:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 8022,
                                "name": "getAmountInVesting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7630,
                                "src": "10226:18:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 8023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10226:20:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6921,
                            "src": "10226:24:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10226:43:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10203:66:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742062616c616e63652c2076657374696e67206361702065786365656465642e",
                        "id": 8028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10271:63:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca",
                          "typeString": "literal_string \"Access is denied. Insufficient balance, vesting cap exceeded.\""
                        },
                        "value": "Access is denied. Insufficient balance, vesting cap exceeded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca",
                          "typeString": "literal_string \"Access is denied. Insufficient balance, vesting cap exceeded.\""
                        }
                      ],
                      "id": 8019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10195:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10195:140:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8030,
                  "nodeType": "ExpressionStatement",
                  "src": "10195:140:42"
                },
                {
                  "expression": {
                    "id": 8042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8031,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "10346:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8033,
                        "indexExpression": {
                          "id": 8032,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7974,
                          "src": "10358:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10346:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7439,
                      "src": "10346:32:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8040,
                          "name": "_additionalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "10418:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8035,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "10381:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8037,
                            "indexExpression": {
                              "id": 8036,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7974,
                              "src": "10393:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10381:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8038,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allocation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7439,
                          "src": "10381:32:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "10381:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10381:55:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10346:90:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8043,
                  "nodeType": "ExpressionStatement",
                  "src": "10346:90:42"
                },
                {
                  "expression": {
                    "id": 8055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8044,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "10446:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8046,
                        "indexExpression": {
                          "id": 8045,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7974,
                          "src": "10458:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10446:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8047,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "closingBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7441,
                      "src": "10446:36:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8053,
                          "name": "_additionalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "10526:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8048,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "10485:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8050,
                            "indexExpression": {
                              "id": 8049,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7974,
                              "src": "10497:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10485:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8051,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "10485:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "10485:40:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10485:59:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10446:98:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8056,
                  "nodeType": "ExpressionStatement",
                  "src": "10446:98:42"
                },
                {
                  "expression": {
                    "id": 8062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8057,
                      "name": "totalVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "10555:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8060,
                          "name": "_additionalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "10585:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 8058,
                          "name": "totalVested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7466,
                          "src": "10569:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "10569:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10569:34:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10555:48:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8063,
                  "nodeType": "ExpressionStatement",
                  "src": "10555:48:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8065,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7974,
                        "src": "10639:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8066,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "10649:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8068,
                          "indexExpression": {
                            "id": 8067,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7974,
                            "src": "10661:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10649:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "10649:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8075,
                            "name": "_additionalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7976,
                            "src": "10720:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 8070,
                                "name": "allocations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7479,
                                "src": "10683:11:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                  "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                                }
                              },
                              "id": 8072,
                              "indexExpression": {
                                "id": 8071,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7974,
                                "src": "10695:8:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10683:21:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                                "typeString": "struct VestingBase.Allocation storage ref"
                              }
                            },
                            "id": 8073,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7439,
                            "src": "10683:32:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6936,
                          "src": "10683:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10683:55:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8077,
                        "name": "_additionalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7976,
                        "src": "10740:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8064,
                      "name": "AllocationIncreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7534,
                      "src": "10619:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256,uint256)"
                      }
                    },
                    "id": 8078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10619:139:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8079,
                  "nodeType": "EmitStatement",
                  "src": "10614:144:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10775:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7982,
                  "id": 8081,
                  "nodeType": "Return",
                  "src": "10768:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7972,
              "nodeType": "StructuredDocumentation",
              "src": "9256:465:42",
              "text": "@notice Increases the total allocation of the specified vesting schedule.\nPlease note that this action can only be performed by an administrator.\n@param _address The address of the beneficiary whose allocation is being requested to be increased.\n@param _additionalAmount The additional amount in vesting coin to be addeded to the existing allocation.\n@return Returns true if the vesting schedule allocation was successfully increased."
            },
            "functionSelector": "936bf978",
            "id": 8083,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7979,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7978,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "9808:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "9808:9:42"
              }
            ],
            "name": "increaseAllocation",
            "nameLocation": "9735:18:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7974,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "9762:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8083,
                  "src": "9754:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9754:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7976,
                  "mutability": "mutable",
                  "name": "_additionalAmount",
                  "nameLocation": "9780:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8083,
                  "src": "9772:25:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9772:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9753:45:42"
            },
            "returnParameters": {
              "id": 7982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8083,
                  "src": "9826:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7980,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9826:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9825:6:42"
            },
            "scope": 8503,
            "src": "9726:1060:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8191,
              "nodeType": "Block",
              "src": "11350:867:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8096,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8086,
                          "src": "11368:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11388:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11380:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11380:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11380:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11368:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 8102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11392:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 8095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11360:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11360:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8104,
                  "nodeType": "ExpressionStatement",
                  "src": "11360:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8106,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "11429:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11443:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11429:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11421:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11421:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8110,
                  "nodeType": "ExpressionStatement",
                  "src": "11421:24:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8112,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11464:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8114,
                            "indexExpression": {
                              "id": 8113,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11476:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11464:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8115,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "11464:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11498:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11464:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11501:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11456:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11456:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8120,
                  "nodeType": "ExpressionStatement",
                  "src": "11456:108:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11582:30:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8122,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11583:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8124,
                            "indexExpression": {
                              "id": 8123,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11595:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11583:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "11583:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11614:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11574:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11574:103:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8129,
                  "nodeType": "ExpressionStatement",
                  "src": "11574:103:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8131,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11695:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8133,
                            "indexExpression": {
                              "id": 8132,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11707:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11695:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8134,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "11695:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8135,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "11735:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11695:51:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742066756e64732e",
                        "id": 8137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11748:39:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298",
                          "typeString": "literal_string \"Access is denied. Insufficient funds.\""
                        },
                        "value": "Access is denied. Insufficient funds."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298",
                          "typeString": "literal_string \"Access is denied. Insufficient funds.\""
                        }
                      ],
                      "id": 8130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11687:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11687:101:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8139,
                  "nodeType": "ExpressionStatement",
                  "src": "11687:101:42"
                },
                {
                  "expression": {
                    "id": 8151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8140,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "11799:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8142,
                        "indexExpression": {
                          "id": 8141,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8086,
                          "src": "11811:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11799:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7439,
                      "src": "11799:32:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8149,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "11871:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8144,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11834:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8146,
                            "indexExpression": {
                              "id": 8145,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11846:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11834:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allocation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7439,
                          "src": "11834:32:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "11834:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11834:49:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11799:84:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8152,
                  "nodeType": "ExpressionStatement",
                  "src": "11799:84:42"
                },
                {
                  "expression": {
                    "id": 8164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8153,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "11893:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8155,
                        "indexExpression": {
                          "id": 8154,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8086,
                          "src": "11905:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11893:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8156,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "closingBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7441,
                      "src": "11893:36:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8162,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "11973:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8157,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11932:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8159,
                            "indexExpression": {
                              "id": 8158,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11944:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11932:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8160,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "11932:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "11932:40:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11932:53:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11893:92:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8165,
                  "nodeType": "ExpressionStatement",
                  "src": "11893:92:42"
                },
                {
                  "expression": {
                    "id": 8171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8166,
                      "name": "totalVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "12004:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8169,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "12034:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 8167,
                          "name": "totalVested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7466,
                          "src": "12018:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "12018:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12018:28:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12004:42:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8172,
                  "nodeType": "ExpressionStatement",
                  "src": "12004:42:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8174,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "12082:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8175,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "12092:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8177,
                          "indexExpression": {
                            "id": 8176,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8086,
                            "src": "12104:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12092:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8178,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "12092:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8184,
                            "name": "_lessAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8088,
                            "src": "12163:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 8179,
                                "name": "allocations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7479,
                                "src": "12126:11:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                  "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                                }
                              },
                              "id": 8181,
                              "indexExpression": {
                                "id": 8180,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8086,
                                "src": "12138:8:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12126:21:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                                "typeString": "struct VestingBase.Allocation storage ref"
                              }
                            },
                            "id": 8182,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7439,
                            "src": "12126:32:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6921,
                          "src": "12126:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12126:49:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8186,
                        "name": "_lessAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8088,
                        "src": "12177:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8173,
                      "name": "AllocationDecreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7544,
                      "src": "12062:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256,uint256)"
                      }
                    },
                    "id": 8187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12062:127:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8188,
                  "nodeType": "EmitStatement",
                  "src": "12057:132:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12206:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8094,
                  "id": 8190,
                  "nodeType": "Return",
                  "src": "12199:11:42"
                }
              ]
            },
            "documentation": {
              "id": 8084,
              "nodeType": "StructuredDocumentation",
              "src": "10793:452:42",
              "text": "@notice Decreases the total allocation of the specified vesting schedule.\nPlease note that this action can only be performed by an administrator.\n@param _address The address of the beneficiary whose allocation is being requested to be decreased.\n@param _lessAmount The amount in vesting coin to be decreased from the existing allocation.\n@return Returns true if the vesting schedule allocation was successfully decreased."
            },
            "functionSelector": "158a774d",
            "id": 8192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8091,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8090,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "11326:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "11326:9:42"
              }
            ],
            "name": "decreaseAllocation",
            "nameLocation": "11259:18:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8086,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "11286:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8192,
                  "src": "11278:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11278:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8088,
                  "mutability": "mutable",
                  "name": "_lessAmount",
                  "nameLocation": "11304:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8192,
                  "src": "11296:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11296:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11277:39:42"
            },
            "returnParameters": {
              "id": 8094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8093,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8192,
                  "src": "11344:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8092,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11344:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11343:6:42"
            },
            "scope": 8503,
            "src": "11250:967:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8280,
              "nodeType": "Block",
              "src": "12762:871:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8205,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8195,
                          "src": "12780:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12800:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12792:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8206,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12792:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12792:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12780:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 8211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12804:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 8204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12772:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12772:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8213,
                  "nodeType": "ExpressionStatement",
                  "src": "12772:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8215,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "12841:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8217,
                            "indexExpression": {
                              "id": 8216,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8195,
                              "src": "12853:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12841:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "12841:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12875:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12841:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12878:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12833:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12833:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8223,
                  "nodeType": "ExpressionStatement",
                  "src": "12833:108:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12959:30:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8225,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "12960:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8227,
                            "indexExpression": {
                              "id": 8226,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8195,
                              "src": "12972:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12960:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "12960:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12991:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12951:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12951:103:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8232,
                  "nodeType": "ExpressionStatement",
                  "src": "12951:103:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8234,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "13073:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 8235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13073:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8236,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "13091:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8238,
                            "indexExpression": {
                              "id": 8237,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8195,
                              "src": "13103:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13091:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7437,
                          "src": "13091:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13073:49:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205468652076657374696e67207363686564756c652077617320616c72656164792072656c65617365642e",
                        "id": 8241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13124:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_494c5705e9a7014a484f7982903520206f1c897c51a1cd752526e3c563421966",
                          "typeString": "literal_string \"Access is denied. The vesting schedule was already released.\""
                        },
                        "value": "Access is denied. The vesting schedule was already released."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_494c5705e9a7014a484f7982903520206f1c897c51a1cd752526e3c563421966",
                          "typeString": "literal_string \"Access is denied. The vesting schedule was already released.\""
                        }
                      ],
                      "id": 8233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13064:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13064:123:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8243,
                  "nodeType": "ExpressionStatement",
                  "src": "13064:123:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8245,
                          "name": "_newReleaseDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8197,
                          "src": "13205:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8246,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "13223:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8248,
                            "indexExpression": {
                              "id": 8247,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8195,
                              "src": "13235:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13223:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8249,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7437,
                          "src": "13223:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13205:49:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20596f752063616e20616c736f20657874656e64207468652072656c65617365206461746520627574206e6f7420746865206f74686572207761792061726f756e642e",
                        "id": 8251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13256:86:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5adecffb723a004af6b679798c1cd516d03b217de4259c32b901687171fcd29f",
                          "typeString": "literal_string \"Access is denied. You can also extend the release date but not the other way around.\""
                        },
                        "value": "Access is denied. You can also extend the release date but not the other way around."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5adecffb723a004af6b679798c1cd516d03b217de4259c32b901687171fcd29f",
                          "typeString": "literal_string \"Access is denied. You can also extend the release date but not the other way around.\""
                        }
                      ],
                      "id": 8244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13197:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13197:146:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8253,
                  "nodeType": "ExpressionStatement",
                  "src": "13197:146:42"
                },
                {
                  "assignments": [
                    8255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8255,
                      "mutability": "mutable",
                      "name": "previousReleaseDate",
                      "nameLocation": "13379:19:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8280,
                      "src": "13371:27:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8254,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13371:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8260,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8256,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "13401:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 8258,
                      "indexExpression": {
                        "id": 8257,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8195,
                        "src": "13413:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13401:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "id": 8259,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "releaseOn",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7437,
                    "src": "13401:31:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13371:61:42"
                },
                {
                  "expression": {
                    "id": 8266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8261,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "13442:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8263,
                        "indexExpression": {
                          "id": 8262,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8195,
                          "src": "13454:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13442:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "releaseOn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7437,
                      "src": "13442:31:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8265,
                      "name": "_newReleaseDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8197,
                      "src": "13476:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13442:49:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8267,
                  "nodeType": "ExpressionStatement",
                  "src": "13442:49:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8269,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8195,
                        "src": "13524:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8270,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "13534:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8272,
                          "indexExpression": {
                            "id": 8271,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8195,
                            "src": "13546:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13534:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8273,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "13534:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 8274,
                        "name": "previousReleaseDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8255,
                        "src": "13568:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8275,
                        "name": "_newReleaseDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8197,
                        "src": "13589:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8268,
                      "name": "ScheduleExtended",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7554,
                      "src": "13507:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256,uint256)"
                      }
                    },
                    "id": 8276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13507:98:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8277,
                  "nodeType": "EmitStatement",
                  "src": "13502:103:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13622:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8203,
                  "id": 8279,
                  "nodeType": "Return",
                  "src": "13615:11:42"
                }
              ]
            },
            "documentation": {
              "id": 8193,
              "nodeType": "StructuredDocumentation",
              "src": "12223:432:42",
              "text": "@notice Extends the release date of the specified vesting schedule allocation.\nPlease note that this action can only be performed by an administrator.\n@param _address The address of the beneficiary who allocation is being requested to be extended.\n@param _newReleaseDate A new release date to extend the allocation to.\n@return Returns true if the vesting schedule allocation was successfully extended."
            },
            "functionSelector": "0715a0b4",
            "id": 8281,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8199,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "12738:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "12738:9:42"
              }
            ],
            "name": "extendAllocation",
            "nameLocation": "12669:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8195,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "12694:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8281,
                  "src": "12686:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12686:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8197,
                  "mutability": "mutable",
                  "name": "_newReleaseDate",
                  "nameLocation": "12712:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8281,
                  "src": "12704:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12704:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12685:43:42"
            },
            "returnParameters": {
              "id": 8203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8281,
                  "src": "12756:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8201,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12756:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12755:6:42"
            },
            "scope": 8503,
            "src": "12660:973:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8346,
              "nodeType": "Block",
              "src": "13912:469:42",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8289,
                      "name": "withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "13925:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13942:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13925:18:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8295,
                  "nodeType": "IfStatement",
                  "src": "13922:55:42",
                  "trueBody": {
                    "id": 8294,
                    "nodeType": "Block",
                    "src": "13944:33:42",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 8292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13965:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 8288,
                        "id": 8293,
                        "nodeType": "Return",
                        "src": "13958:8:42"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8297,
                      "mutability": "mutable",
                      "name": "duration",
                      "nameLocation": "14003:8:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "13995:16:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8296,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13995:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8305,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8298,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "14014:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 8299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "14014:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 8300,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "14032:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8302,
                        "indexExpression": {
                          "id": 8301,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8284,
                          "src": "14044:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14032:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8303,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseOn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7437,
                      "src": "14032:31:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14014:49:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13995:68:42"
                },
                {
                  "assignments": [
                    8307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8307,
                      "mutability": "mutable",
                      "name": "cycles",
                      "nameLocation": "14081:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "14073:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14073:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8315,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 8308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14090:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 8311,
                              "name": "withdrawalFrequency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7454,
                              "src": "14108:19:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8309,
                              "name": "duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8297,
                              "src": "14095:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6966,
                            "src": "14095:12:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14095:33:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8313,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14094:35:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14090:39:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14073:56:42"
                },
                {
                  "assignments": [
                    8317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8317,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "14148:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "14140:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8316,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14140:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8321,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8318,
                      "name": "cycles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8307,
                      "src": "14157:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 8319,
                      "name": "withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "14166:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14157:22:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14140:39:42"
                },
                {
                  "assignments": [
                    8323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8323,
                      "mutability": "mutable",
                      "name": "cap",
                      "nameLocation": "14197:3:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "14189:11:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14189:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8336,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8324,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8317,
                        "src": "14203:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 8325,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "14212:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8327,
                          "indexExpression": {
                            "id": 8326,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8284,
                            "src": "14224:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14212:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8328,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allocation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7439,
                        "src": "14212:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14203:41:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 8334,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8317,
                      "src": "14282:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "14203:85:42",
                    "trueExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 8330,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "14247:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8332,
                        "indexExpression": {
                          "id": 8331,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8284,
                          "src": "14259:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14247:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8333,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7439,
                      "src": "14247:32:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14189:99:42"
                },
                {
                  "assignments": [
                    8338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8338,
                      "mutability": "mutable",
                      "name": "drawingPower",
                      "nameLocation": "14306:12:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "14298:20:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14298:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8343,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8341,
                        "name": "totalWithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "14329:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8339,
                        "name": "cap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8323,
                        "src": "14321:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6936,
                      "src": "14321:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14321:23:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14298:46:42"
                },
                {
                  "expression": {
                    "id": 8344,
                    "name": "drawingPower",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8338,
                    "src": "14362:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8288,
                  "id": 8345,
                  "nodeType": "Return",
                  "src": "14355:19:42"
                }
              ]
            },
            "documentation": {
              "id": 8282,
              "nodeType": "StructuredDocumentation",
              "src": "13643:192:42",
              "text": "@notice Gets the drawing power of the beneficiary.\n@param _address The address to check the drawing power of.\n@return Returns the amount in vesting coin that can be withdrawn."
            },
            "functionSelector": "e4353ad6",
            "id": 8347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDrawingPower",
            "nameLocation": "13849:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8284,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "13873:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8347,
                  "src": "13865:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13865:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13864:18:42"
            },
            "returnParameters": {
              "id": 8288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8347,
                  "src": "13903:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13903:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13902:9:42"
            },
            "scope": 8503,
            "src": "13840:541:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8416,
              "nodeType": "Block",
              "src": "14599:861:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8353,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "14617:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8356,
                            "indexExpression": {
                              "expression": {
                                "id": 8354,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14629:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14629:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14617:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "14617:33:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14653:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14617:37:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14656:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14609:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14609:110:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8362,
                  "nodeType": "ExpressionStatement",
                  "src": "14609:110:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14737:32:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8364,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "14738:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8367,
                            "indexExpression": {
                              "expression": {
                                "id": 8365,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14750:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14750:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14738:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8368,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "14738:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14771:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14729:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14729:105:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8372,
                  "nodeType": "ExpressionStatement",
                  "src": "14729:105:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8374,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "14852:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 8375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14852:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8376,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "14871:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8379,
                            "indexExpression": {
                              "expression": {
                                "id": 8377,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14883:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14883:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14871:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8380,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7437,
                          "src": "14871:33:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14852:52:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20596f7520617265206e6f7420616c6c6f77656420746f207769746864726177206265666f7265207468652072656c6561736520646174652e",
                        "id": 8382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14906:76:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2c672ebaa1ef91e2a4cb289b836b7c4c6d12d9bbfeea0e85832b6812fa489cb",
                          "typeString": "literal_string \"Access is denied. You are not allowed to withdraw before the release date.\""
                        },
                        "value": "Access is denied. You are not allowed to withdraw before the release date."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2c672ebaa1ef91e2a4cb289b836b7c4c6d12d9bbfeea0e85832b6812fa489cb",
                          "typeString": "literal_string \"Access is denied. You are not allowed to withdraw before the release date.\""
                        }
                      ],
                      "id": 8373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14844:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14844:139:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8384,
                  "nodeType": "ExpressionStatement",
                  "src": "14844:139:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8386,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "15001:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8389,
                            "indexExpression": {
                              "expression": {
                                "id": 8387,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15013:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15013:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15001:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8390,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "15001:38:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8391,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8350,
                          "src": "15043:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15001:49:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742066756e64732e",
                        "id": 8393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15052:39:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298",
                          "typeString": "literal_string \"Access is denied. Insufficient funds.\""
                        },
                        "value": "Access is denied. Insufficient funds."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298",
                          "typeString": "literal_string \"Access is denied. Insufficient funds.\""
                        }
                      ],
                      "id": 8385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14993:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14993:99:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8395,
                  "nodeType": "ExpressionStatement",
                  "src": "14993:99:42"
                },
                {
                  "assignments": [
                    8397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8397,
                      "mutability": "mutable",
                      "name": "drawingPower",
                      "nameLocation": "15119:12:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8416,
                      "src": "15111:20:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15111:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8402,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "15150:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15150:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8398,
                      "name": "getDrawingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8347,
                      "src": "15134:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 8401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15134:27:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15111:50:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8403,
                      "name": "withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "15297:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15313:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15297:17:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Zero means unlimited amount.\nWe've already verified above that the investor has sufficient balance.",
                  "id": 8415,
                  "nodeType": "IfStatement",
                  "src": "15294:160:42",
                  "trueBody": {
                    "id": 8414,
                    "nodeType": "Block",
                    "src": "15315:139:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8407,
                                "name": "drawingPower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8397,
                                "src": "15337:12:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 8408,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8350,
                                "src": "15353:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15337:23:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4163636573732069732064656e6965642e205468652072657175657374656420616d6f756e74206578636565647320796f757220616c6c6f636174696f6e2e",
                              "id": 8410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15362:65:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3c1057cbb80ed0d2f6e11108550f15ac9221a1918ce90a76ddb9a7f1c7062cc5",
                                "typeString": "literal_string \"Access is denied. The requested amount exceeds your allocation.\""
                              },
                              "value": "Access is denied. The requested amount exceeds your allocation."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3c1057cbb80ed0d2f6e11108550f15ac9221a1918ce90a76ddb9a7f1c7062cc5",
                                "typeString": "literal_string \"Access is denied. The requested amount exceeds your allocation.\""
                              }
                            ],
                            "id": 8406,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15329:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15329:99:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8412,
                        "nodeType": "ExpressionStatement",
                        "src": "15329:99:42"
                      },
                      {
                        "id": 8413,
                        "nodeType": "PlaceholderStatement",
                        "src": "15442:1:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8348,
              "nodeType": "StructuredDocumentation",
              "src": "14391:164:42",
              "text": "@notice Signifies if the sender has enough balances to withdraw the desired amount of the vesting coin.\n@param _amount The amount desired to be withdrawn."
            },
            "id": 8417,
            "name": "canWithdraw",
            "nameLocation": "14569:11:42",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8350,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14589:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "14581:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14581:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14580:17:42"
            },
            "src": "14560:900:42",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8501,
              "nodeType": "Block",
              "src": "15763:514:42",
              "statements": [
                {
                  "expression": {
                    "id": 8439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8432,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "15797:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8435,
                        "indexExpression": {
                          "expression": {
                            "id": 8433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15809:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15809:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15797:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastWithdrawnOn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7447,
                      "src": "15797:39:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8437,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "15839:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 8438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "15839:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15797:57:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8440,
                  "nodeType": "ExpressionStatement",
                  "src": "15797:57:42"
                },
                {
                  "expression": {
                    "id": 8454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8441,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "15865:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8444,
                        "indexExpression": {
                          "expression": {
                            "id": 8442,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15877:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15877:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15865:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8445,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "closingBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7441,
                      "src": "15865:38:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8452,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8420,
                          "src": "15949:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8446,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "15906:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8449,
                            "indexExpression": {
                              "expression": {
                                "id": 8447,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15918:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15918:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15906:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8450,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "15906:38:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "15906:42:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15906:51:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15865:92:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8455,
                  "nodeType": "ExpressionStatement",
                  "src": "15865:92:42"
                },
                {
                  "expression": {
                    "id": 8469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8456,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "15967:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8459,
                        "indexExpression": {
                          "expression": {
                            "id": 8457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15979:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15979:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15967:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8460,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7445,
                      "src": "15967:33:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8467,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8420,
                          "src": "16041:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8461,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "16003:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8464,
                            "indexExpression": {
                              "expression": {
                                "id": 8462,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "16015:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16015:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16003:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8465,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7445,
                          "src": "16003:33:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "16003:37:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16003:46:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15967:82:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8470,
                  "nodeType": "ExpressionStatement",
                  "src": "15967:82:42"
                },
                {
                  "expression": {
                    "id": 8476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8471,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7469,
                      "src": "16060:14:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8474,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8420,
                          "src": "16096:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 8472,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7469,
                          "src": "16077:14:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "16077:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16077:27:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16060:44:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8477,
                  "nodeType": "ExpressionStatement",
                  "src": "16060:44:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 8481,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "16144:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16144:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8483,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8420,
                            "src": "16156:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8479,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7473,
                            "src": "16123:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 8480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "16123:20:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16123:41:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16115:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16115:50:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8486,
                  "nodeType": "ExpressionStatement",
                  "src": "16115:50:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8488,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16191:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16191:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8490,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "16203:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8493,
                          "indexExpression": {
                            "expression": {
                              "id": 8491,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "16215:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16215:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16203:23:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8494,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "16203:34:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 8495,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8420,
                        "src": "16239:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8487,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7506,
                      "src": "16181:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 8496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16181:66:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8497,
                  "nodeType": "EmitStatement",
                  "src": "16176:71:42"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 8498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16265:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 8499,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "16264:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8431,
                  "id": 8500,
                  "nodeType": "Return",
                  "src": "16257:13:42"
                }
              ]
            },
            "documentation": {
              "id": 8418,
              "nodeType": "StructuredDocumentation",
              "src": "15466:171:42",
              "text": "@notice This action enables the beneficiaries to withdraw a desired amount from this contract.    \n@param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "2e1a7d4d",
            "id": 8502,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8423,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8420,
                    "src": "15698:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8424,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8422,
                  "name": "canWithdraw",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8417,
                  "src": "15686:11:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "15686:20:42"
              },
              {
                "id": 8426,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8425,
                  "name": "afterEarliestWithdrawalDate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7642,
                  "src": "15707:27:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "15707:27:42"
              },
              {
                "id": 8428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8427,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7351,
                  "src": "15735:13:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "15735:13:42"
              }
            ],
            "name": "withdraw",
            "nameLocation": "15651:8:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8420,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "15668:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8502,
                  "src": "15660:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15660:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15659:17:42"
            },
            "returnParameters": {
              "id": 8431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8502,
                  "src": "15757:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8429,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15757:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15756:6:42"
            },
            "scope": 8503,
            "src": "15642:635:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8504,
        "src": "521:15758:42",
        "usedErrors": []
      }
    ],
    "src": "37:16242:42"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        5297
      ],
      "CustomAdmin": [
        7328
      ],
      "CustomPausable": [
        7393
      ],
      "ERC20": [
        2806
      ],
      "FrequencyHelper": [
        8627
      ],
      "IERC20": [
        2884
      ],
      "IERC20Metadata": [
        3590
      ],
      "Ownable": [
        532
      ],
      "SafeMath": [
        7057
      ],
      "VestingBase": [
        8503
      ]
    },
    "id": 8504,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7415,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:42"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7416,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 2885,
        "src": "64:56:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7417,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 7058,
        "src": "121:57:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 7418,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 2807,
        "src": "179:55:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Vesting/CustomAdmin.sol",
        "file": "./CustomAdmin.sol",
        "id": 7419,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 7329,
        "src": "236:27:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Vesting/frequencyHelper.sol",
        "file": "./frequencyHelper.sol",
        "id": 7420,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 8628,
        "src": "264:31:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Vesting/CustomPausable.sol",
        "file": "./CustomPausable.sol",
        "id": 7421,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8504,
        "sourceUnit": 7394,
        "src": "296:30:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7423,
              "name": "CustomAdmin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7328,
              "src": "545:11:42"
            },
            "id": 7424,
            "nodeType": "InheritanceSpecifier",
            "src": "545:11:42"
          },
          {
            "baseName": {
              "id": 7425,
              "name": "FrequencyHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8627,
              "src": "558:15:42"
            },
            "id": 7426,
            "nodeType": "InheritanceSpecifier",
            "src": "558:15:42"
          },
          {
            "baseName": {
              "id": 7427,
              "name": "CustomPausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7393,
              "src": "575:14:42"
            },
            "id": 7428,
            "nodeType": "InheritanceSpecifier",
            "src": "575:14:42"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7422,
          "nodeType": "StructuredDocumentation",
          "src": "328:192:42",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 8503,
        "linearizedBaseContracts": [
          8503,
          7393,
          8627,
          7328,
          532,
          5297
        ],
        "name": "VestingBase",
        "nameLocation": "530:11:42",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7431,
            "libraryName": {
              "id": 7429,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "600:8:42"
            },
            "nodeType": "UsingForDirective",
            "src": "594:27:42",
            "typeName": {
              "id": 7430,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "613:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "VestingBase.Allocation",
            "id": 7448,
            "members": [
              {
                "constant": false,
                "id": 7433,
                "mutability": "mutable",
                "name": "memberName",
                "nameLocation": "715:10:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "707:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7432,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:6:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7435,
                "mutability": "mutable",
                "name": "startedOn",
                "nameLocation": "743:9:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "735:17:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7434,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "735:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7437,
                "mutability": "mutable",
                "name": "releaseOn",
                "nameLocation": "770:9:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "762:17:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7436,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "762:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7439,
                "mutability": "mutable",
                "name": "allocation",
                "nameLocation": "797:10:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "789:18:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7438,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "789:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7441,
                "mutability": "mutable",
                "name": "closingBalance",
                "nameLocation": "825:14:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "817:22:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7440,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "817:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7443,
                "mutability": "mutable",
                "name": "deleted",
                "nameLocation": "854:7:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "849:12:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7442,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "849:4:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7445,
                "mutability": "mutable",
                "name": "withdrawn",
                "nameLocation": "879:9:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "871:17:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7444,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "871:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7447,
                "mutability": "mutable",
                "name": "lastWithdrawnOn",
                "nameLocation": "906:15:42",
                "nodeType": "VariableDeclaration",
                "scope": 7448,
                "src": "898:23:42",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7446,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "898:7:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Allocation",
            "nameLocation": "686:10:42",
            "nodeType": "StructDefinition",
            "scope": 8503,
            "src": "679:249:42",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7449,
              "nodeType": "StructuredDocumentation",
              "src": "935:125:42",
              "text": "@notice Maximum amount of tokens that can be withdrawn for the specified frequency.\nZero means that there's no cap;"
            },
            "functionSelector": "8971611c",
            "id": 7451,
            "mutability": "mutable",
            "name": "withdrawalCap",
            "nameLocation": "1080:13:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1065:28:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1065:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7452,
              "nodeType": "StructuredDocumentation",
              "src": "1100:102:42",
              "text": "@notice The frequency of token withdrawals. If the withdrawalCap is zero, this variable is ignored."
            },
            "functionSelector": "3792bab4",
            "id": 7454,
            "mutability": "mutable",
            "name": "withdrawalFrequency",
            "nameLocation": "1222:19:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1207:34:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7453,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1207:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7455,
              "nodeType": "StructuredDocumentation",
              "src": "1248:54:42",
              "text": "@notice The date on which the vesting was started. "
            },
            "functionSelector": "4713a044",
            "id": 7457,
            "mutability": "mutable",
            "name": "vestingStartedOn",
            "nameLocation": "1322:16:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1307:31:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7456,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1307:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7458,
              "nodeType": "StructuredDocumentation",
              "src": "1345:41:42",
              "text": "@notice The minimum period of vesting."
            },
            "functionSelector": "706250c8",
            "id": 7460,
            "mutability": "mutable",
            "name": "minimumVestingPeriod",
            "nameLocation": "1406:20:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1391:35:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7459,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1391:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7461,
              "nodeType": "StructuredDocumentation",
              "src": "1433:72:42",
              "text": "@notice The earliest date on which the vested tokens can be redeemed."
            },
            "functionSelector": "78ee3af6",
            "id": 7463,
            "mutability": "mutable",
            "name": "earliestWithdrawalDate",
            "nameLocation": "1525:22:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1510:37:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7462,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1510:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7464,
              "nodeType": "StructuredDocumentation",
              "src": "1554:69:42",
              "text": "@notice The sum total amount of tokens vested for all allocations."
            },
            "functionSelector": "199cbc54",
            "id": 7466,
            "mutability": "mutable",
            "name": "totalVested",
            "nameLocation": "1643:11:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1628:26:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7465,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1628:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7467,
              "nodeType": "StructuredDocumentation",
              "src": "1661:73:42",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 7469,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "1754:14:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1739:29:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1739:7:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7470,
              "nodeType": "StructuredDocumentation",
              "src": "1775:55:42",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 7473,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "1848:11:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1835:24:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2806",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 7472,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7471,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2806,
                "src": "1835:5:42"
              },
              "referencedDeclaration": 2806,
              "src": "1835:5:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2806",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7474,
              "nodeType": "StructuredDocumentation",
              "src": "1866:52:42",
              "text": "@notice The list of vesting schedule allocations;"
            },
            "id": 7479,
            "mutability": "mutable",
            "name": "allocations",
            "nameLocation": "1963:11:42",
            "nodeType": "VariableDeclaration",
            "scope": 8503,
            "src": "1923:51:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
              "typeString": "mapping(address => struct VestingBase.Allocation)"
            },
            "typeName": {
              "id": 7478,
              "keyType": {
                "id": 7475,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1931:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1923:30:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                "typeString": "mapping(address => struct VestingBase.Allocation)"
              },
              "valueType": {
                "id": 7477,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7476,
                  "name": "Allocation",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7448,
                  "src": "1942:10:42"
                },
                "referencedDeclaration": 7448,
                "src": "1942:10:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Allocation_$7448_storage_ptr",
                  "typeString": "struct VestingBase.Allocation"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7480,
              "nodeType": "StructuredDocumentation",
              "src": "1978:10:42",
              "text": "Events;"
            },
            "id": 7490,
            "name": "Funded",
            "nameLocation": "1999:6:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7482,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_funder",
                  "nameLocation": "2022:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "2006:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7484,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2039:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "2031:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7486,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_previousCap",
                  "nameLocation": "2056:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "2048:20:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7488,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newCap",
                  "nameLocation": "2078:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7490,
                  "src": "2070:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2005:81:42"
            },
            "src": "1993:94:42"
          },
          {
            "anonymous": false,
            "id": 7498,
            "name": "FundRemoved",
            "nameLocation": "2098:11:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7492,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2126:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "2110:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7494,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2144:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "2136:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7496,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_remainingInPool",
                  "nameLocation": "2161:16:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "2153:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2109:69:42"
            },
            "src": "2092:87:42"
          },
          {
            "anonymous": false,
            "id": 7506,
            "name": "Withdrawn",
            "nameLocation": "2190:9:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7500,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2216:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "2200:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7502,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2233:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "2226:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7501,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7504,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2254:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7506,
                  "src": "2246:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2199:63:42"
            },
            "src": "2184:79:42"
          },
          {
            "anonymous": false,
            "id": 7516,
            "name": "AllocationCreated",
            "nameLocation": "2276:17:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7508,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2310:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7516,
                  "src": "2294:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7510,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2327:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7516,
                  "src": "2320:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2320:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7512,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2348:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7516,
                  "src": "2340:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2340:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_releaseOn",
                  "nameLocation": "2365:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7516,
                  "src": "2357:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2293:83:42"
            },
            "src": "2270:107:42"
          },
          {
            "anonymous": false,
            "id": 7524,
            "name": "AllocationDeleted",
            "nameLocation": "2388:17:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7518,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2422:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2406:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7520,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2439:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2432:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7519,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2432:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7522,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2460:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7524,
                  "src": "2452:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2405:63:42"
            },
            "src": "2382:87:42"
          },
          {
            "anonymous": false,
            "id": 7534,
            "name": "AllocationIncreased",
            "nameLocation": "2480:19:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7526,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2516:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7534,
                  "src": "2500:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2533:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7534,
                  "src": "2526:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2526:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7530,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2554:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7534,
                  "src": "2546:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7532,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_additionalAmount",
                  "nameLocation": "2571:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7534,
                  "src": "2563:25:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2563:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2499:90:42"
            },
            "src": "2474:116:42"
          },
          {
            "anonymous": false,
            "id": 7544,
            "name": "AllocationDecreased",
            "nameLocation": "2601:19:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7536,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2637:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "2621:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2621:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7538,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2654:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "2647:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7537,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7540,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2675:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "2667:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2667:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7542,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_lessAmount",
                  "nameLocation": "2692:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "2684:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2620:84:42"
            },
            "src": "2595:110:42"
          },
          {
            "anonymous": false,
            "id": 7554,
            "name": "ScheduleExtended",
            "nameLocation": "2716:16:42",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7546,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2749:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7554,
                  "src": "2733:24:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2733:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7548,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "2766:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7554,
                  "src": "2759:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7550,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_releaseOn",
                  "nameLocation": "2787:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7554,
                  "src": "2779:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7552,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newReleaseDate",
                  "nameLocation": "2807:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7554,
                  "src": "2799:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2732:91:42"
            },
            "src": "2710:114:42"
          },
          {
            "body": {
              "id": 7603,
              "nodeType": "Block",
              "src": "3343:422:42",
              "statements": [
                {
                  "expression": {
                    "id": 7570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7568,
                      "name": "minimumVestingPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7460,
                      "src": "3353:20:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7569,
                      "name": "_minPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7557,
                      "src": "3376:10:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3353:33:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7571,
                  "nodeType": "ExpressionStatement",
                  "src": "3353:33:42"
                },
                {
                  "expression": {
                    "id": 7575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7572,
                      "name": "vestingStartedOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7457,
                      "src": "3396:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7573,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3415:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 7574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3415:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3396:34:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7576,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:34:42"
                },
                {
                  "expression": {
                    "id": 7579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7577,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7473,
                      "src": "3440:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7578,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7562,
                      "src": "3454:12:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3440:26:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 7580,
                  "nodeType": "ExpressionStatement",
                  "src": "3440:26:42"
                },
                {
                  "expression": {
                    "id": 7583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7581,
                      "name": "withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "3476:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7582,
                      "name": "_withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7559,
                      "src": "3492:14:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3476:30:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7584,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:30:42"
                },
                {
                  "documentation": "Calcualate the earliest date of withdrawal.",
                  "expression": {
                    "id": 7590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7585,
                      "name": "earliestWithdrawalDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7463,
                      "src": "3572:22:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7588,
                          "name": "minimumVestingPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7460,
                          "src": "3618:20:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7586,
                          "name": "vestingStartedOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7457,
                          "src": "3597:16:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "3597:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3597:42:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3572:67:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7591,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:67:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7592,
                      "name": "_withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7559,
                      "src": "3655:14:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3672:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3655:18:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7602,
                  "nodeType": "IfStatement",
                  "src": "3652:107:42",
                  "trueBody": {
                    "id": 7601,
                    "nodeType": "Block",
                    "src": "3674:85:42",
                    "statements": [
                      {
                        "expression": {
                          "id": 7599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7595,
                            "name": "withdrawalFrequency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7454,
                            "src": "3688:19:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 7597,
                                "name": "_withdrawalFrequency",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7565,
                                "src": "3727:20:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Frequency_$8567",
                                  "typeString": "enum FrequencyHelper.Frequency"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Frequency_$8567",
                                  "typeString": "enum FrequencyHelper.Frequency"
                                }
                              ],
                              "id": 7596,
                              "name": "convertFrequency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8626,
                              "src": "3710:16:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_enum$_Frequency_$8567_$returns$_t_uint256_$",
                                "typeString": "function (enum FrequencyHelper.Frequency) pure returns (uint256)"
                              }
                            },
                            "id": 7598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3710:38:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3688:60:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7600,
                        "nodeType": "ExpressionStatement",
                        "src": "3688:60:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7555,
              "nodeType": "StructuredDocumentation",
              "src": "2832:394:42",
              "text": "@notice Constructs this contract\n@param _minPeriod The minimum vesting period.\n@param _withdrawalCap Maximum amount of tokens that can be withdrawn for the specified frequency.\n@param _withdrawalFrequency The frequency of token withdrawals. If the _withdrawalCap is zero, this variable is ignored.\n@param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 7604,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7557,
                  "mutability": "mutable",
                  "name": "_minPeriod",
                  "nameLocation": "3253:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "3245:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7559,
                  "mutability": "mutable",
                  "name": "_withdrawalCap",
                  "nameLocation": "3273:14:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "3265:22:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7562,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "3295:12:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "3289:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2806",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7561,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7560,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2806,
                      "src": "3289:5:42"
                    },
                    "referencedDeclaration": 2806,
                    "src": "3289:5:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7565,
                  "mutability": "mutable",
                  "name": "_withdrawalFrequency",
                  "nameLocation": "3320:20:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "3310:30:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Frequency_$8567",
                    "typeString": "enum FrequencyHelper.Frequency"
                  },
                  "typeName": {
                    "id": 7564,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7563,
                      "name": "Frequency",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8567,
                      "src": "3310:9:42"
                    },
                    "referencedDeclaration": 8567,
                    "src": "3310:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Frequency_$8567",
                      "typeString": "enum FrequencyHelper.Frequency"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3244:97:42"
            },
            "returnParameters": {
              "id": 7567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3343:0:42"
            },
            "scope": 8503,
            "src": "3233:532:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7618,
              "nodeType": "Block",
              "src": "3964:60:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7614,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4011:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4003:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4003:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4003:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7610,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7473,
                        "src": "3981:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "3981:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:36:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7609,
                  "id": 7617,
                  "nodeType": "Return",
                  "src": "3974:43:42"
                }
              ]
            },
            "documentation": {
              "id": 7605,
              "nodeType": "StructuredDocumentation",
              "src": "3772:129:42",
              "text": "@notice The balance of this smart contract. \n@return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 7619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "3915:17:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3932:2:42"
            },
            "returnParameters": {
              "id": 7609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7619,
                  "src": "3955:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3955:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3954:9:42"
            },
            "scope": 8503,
            "src": "3906:118:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7629,
              "nodeType": "Block",
              "src": "4091:55:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7626,
                        "name": "totalWithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "4124:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7624,
                        "name": "totalVested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7466,
                        "src": "4108:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6936,
                      "src": "4108:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4108:31:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7623,
                  "id": 7628,
                  "nodeType": "Return",
                  "src": "4101:38:42"
                }
              ]
            },
            "functionSelector": "dba61ab7",
            "id": 7630,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountInVesting",
            "nameLocation": "4041:18:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4059:2:42"
            },
            "returnParameters": {
              "id": 7623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7630,
                  "src": "4082:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4081:9:42"
            },
            "scope": 8503,
            "src": "4032:114:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7641,
              "nodeType": "Block",
              "src": "4312:87:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7634,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4330:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4330:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7636,
                          "name": "earliestWithdrawalDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7463,
                          "src": "4349:22:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4330:41:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4322:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4322:50:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7639,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:50:42"
                },
                {
                  "id": 7640,
                  "nodeType": "PlaceholderStatement",
                  "src": "4391:1:42"
                }
              ]
            },
            "documentation": {
              "id": 7631,
              "nodeType": "StructuredDocumentation",
              "src": "4152:121:42",
              "text": "@notice Signifies that the action is only possible \nafter the earliest withdrawal date of the vesting contract."
            },
            "id": 7642,
            "name": "afterEarliestWithdrawalDate",
            "nameLocation": "4284:27:42",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4312:0:42"
            },
            "src": "4275:124:42",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7700,
              "nodeType": "Block",
              "src": "4792:459:42",
              "statements": [
                {
                  "assignments": [
                    7652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7652,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "4848:9:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7700,
                      "src": "4840:17:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7651,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4840:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check the funds available.",
                  "id": 7662,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7655,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4882:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4882:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7659,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4902:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4894:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7657,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4894:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4894:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7653,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7473,
                        "src": "4860:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2360,
                      "src": "4860:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 7661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4860:48:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4840:68:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7664,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7652,
                          "src": "4926:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4938:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4926:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "id": 7667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4941:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        },
                        "value": "Nothing to fund."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        }
                      ],
                      "id": 7663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4918:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:42:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7669,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:42:42"
                },
                {
                  "assignments": [
                    7672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7672,
                      "mutability": "mutable",
                      "name": "current",
                      "nameLocation": "5021:7:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7700,
                      "src": "5013:15:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7671,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5013:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the current allocation.",
                  "id": 7675,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7673,
                      "name": "getAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7619,
                      "src": "5031:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5031:19:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5013:37:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7679,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5110:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5110:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 7683,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5130:4:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestingBase_$8503",
                                  "typeString": "contract VestingBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VestingBase_$8503",
                                  "typeString": "contract VestingBase"
                                }
                              ],
                              "id": 7682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5122:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7681,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5122:7:42",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5122:13:42",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7685,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7652,
                            "src": "5137:9:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7677,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7473,
                            "src": "5085:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2418,
                          "src": "5085:24:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5085:62:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5077:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5077:71:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7688,
                  "nodeType": "ExpressionStatement",
                  "src": "5077:71:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7690,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5171:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5171:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7692,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7652,
                        "src": "5183:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7693,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7672,
                        "src": "5194:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7694,
                          "name": "getAvailableFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7619,
                          "src": "5203:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 7695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5203:19:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7689,
                      "name": "Funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7490,
                      "src": "5164:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5164:59:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7697,
                  "nodeType": "EmitStatement",
                  "src": "5159:64:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5240:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7649,
                  "id": 7699,
                  "nodeType": "Return",
                  "src": "5233:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7643,
              "nodeType": "StructuredDocumentation",
              "src": "4405:333:42",
              "text": "@notice Enables this vesting contract to receive the ERC20 (vesting coin).\nBefore calling this function please approve your desired amount of the coin\nfor this smart contract address.\nPlease note that this action is restricted to administrators only.\n@return Returns true if the funding was successful."
            },
            "functionSelector": "b60d4288",
            "id": 7701,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7646,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7645,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "4768:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "4768:9:42"
              }
            ],
            "name": "fund",
            "nameLocation": "4752:4:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4756:2:42"
            },
            "returnParameters": {
              "id": 7649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7701,
                  "src": "4786:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7647,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4786:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4785:6:42"
            },
            "scope": 8503,
            "src": "4743:508:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7765,
              "nodeType": "Block",
              "src": "5699:411:42",
              "statements": [
                {
                  "assignments": [
                    7712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7712,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "5725:7:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7765,
                      "src": "5717:15:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5717:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7720,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7717,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5765:4:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$8503",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5757:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7715,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5757:7:42",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5757:13:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7713,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7473,
                        "src": "5735:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "5735:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5735:36:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5717:54:42"
                },
                {
                  "assignments": [
                    7722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7722,
                      "mutability": "mutable",
                      "name": "locked",
                      "nameLocation": "5789:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7765,
                      "src": "5781:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7721,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5781:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7725,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7723,
                      "name": "getAmountInVesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7630,
                      "src": "5798:18:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5798:20:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5781:37:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7727,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7712,
                          "src": "5837:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 7728,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7722,
                          "src": "5847:6:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5837:16:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5829:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5829:25:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7731,
                  "nodeType": "ExpressionStatement",
                  "src": "5829:25:42"
                },
                {
                  "assignments": [
                    7733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7733,
                      "mutability": "mutable",
                      "name": "available",
                      "nameLocation": "5873:9:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7765,
                      "src": "5865:17:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7732,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5865:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7737,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7734,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7712,
                      "src": "5885:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 7735,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7722,
                      "src": "5895:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5885:16:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5865:36:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7739,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7733,
                          "src": "5920:9:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7740,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7704,
                          "src": "5933:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5920:20:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5912:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5912:29:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7743,
                  "nodeType": "ExpressionStatement",
                  "src": "5912:29:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7747,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5989:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5989:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7749,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7704,
                            "src": "6001:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7745,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7473,
                            "src": "5968:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "5968:20:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5968:41:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5960:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5960:50:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7752,
                  "nodeType": "ExpressionStatement",
                  "src": "5960:50:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7754,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6038:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6038:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7756,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7704,
                        "src": "6050:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7759,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7704,
                            "src": "6073:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7757,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7733,
                            "src": "6059:9:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6936,
                          "src": "6059:13:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6059:22:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7753,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7498,
                      "src": "6026:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 7761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6026:56:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7762,
                  "nodeType": "EmitStatement",
                  "src": "6021:61:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6099:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7710,
                  "id": 7764,
                  "nodeType": "Return",
                  "src": "6092:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7702,
              "nodeType": "StructuredDocumentation",
              "src": "5259:364:42",
              "text": "@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\nPlease note that this action is restricted to administrators only\nand you may only withdraw amounts above the sum total allocation balances.\n@param _amount The amount desired to withdraw.\n@return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 7766,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7707,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7706,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "5675:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "5675:9:42"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "5637:11:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7704,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5657:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7766,
                  "src": "5649:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5649:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5648:17:42"
            },
            "returnParameters": {
              "id": 7710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7709,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7766,
                  "src": "5693:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7708,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5693:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5692:6:42"
            },
            "scope": 8503,
            "src": "5628:482:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7860,
              "nodeType": "Block",
              "src": "6977:955:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7783,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7769,
                          "src": "6995:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7015:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7007:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7784,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7007:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7007:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6995:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 7789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7019:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 7782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6987:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6987:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7791,
                  "nodeType": "ExpressionStatement",
                  "src": "6987:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7793,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7773,
                          "src": "7056:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7066:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7056:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e742e",
                        "id": 7796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7069:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc",
                          "typeString": "literal_string \"Invalid amount.\""
                        },
                        "value": "Invalid amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc",
                          "typeString": "literal_string \"Invalid amount.\""
                        }
                      ],
                      "id": 7792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7048:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7048:39:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7798,
                  "nodeType": "ExpressionStatement",
                  "src": "7048:39:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7800,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "7105:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 7802,
                            "indexExpression": {
                              "id": 7801,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7769,
                              "src": "7117:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7105:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 7803,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "7105:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7140:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7105:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e204475706c696361746520656e7472792e",
                        "id": 7806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7143:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33fb2bfe7d0e1088e2a69c3b294d1d3d63e6848eabd1a57a84a7792506b8a155",
                          "typeString": "literal_string \"Access is denied. Duplicate entry.\""
                        },
                        "value": "Access is denied. Duplicate entry."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33fb2bfe7d0e1088e2a69c3b294d1d3d63e6848eabd1a57a84a7792506b8a155",
                          "typeString": "literal_string \"Access is denied. Duplicate entry.\""
                        }
                      ],
                      "id": 7799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7097:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7097:83:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7808,
                  "nodeType": "ExpressionStatement",
                  "src": "7097:83:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7810,
                          "name": "_releaseOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7775,
                          "src": "7198:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7811,
                          "name": "earliestWithdrawalDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7463,
                          "src": "7212:22:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7198:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20506c6561736520737065636966792061206c6f6e6765722076657374696e6720706572696f642e",
                        "id": 7813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7236:59:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee66c5b449a29711846f75dfa559ce8b81826f413445ec994992210fcc8fffcb",
                          "typeString": "literal_string \"Access is denied. Please specify a longer vesting period.\""
                        },
                        "value": "Access is denied. Please specify a longer vesting period."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee66c5b449a29711846f75dfa559ce8b81826f413445ec994992210fcc8fffcb",
                          "typeString": "literal_string \"Access is denied. Please specify a longer vesting period.\""
                        }
                      ],
                      "id": 7809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7190:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7190:106:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7815,
                  "nodeType": "ExpressionStatement",
                  "src": "7190:106:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7817,
                            "name": "getAvailableFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7619,
                            "src": "7314:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 7818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7314:19:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 7822,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7773,
                              "src": "7362:7:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 7819,
                                "name": "getAmountInVesting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7630,
                                "src": "7337:18:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 7820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7337:20:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6921,
                            "src": "7337:24:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 7823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7337:33:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7314:56:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742062616c616e63652c2076657374696e67206361702065786365656465642e",
                        "id": 7825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7372:63:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca",
                          "typeString": "literal_string \"Access is denied. Insufficient balance, vesting cap exceeded.\""
                        },
                        "value": "Access is denied. Insufficient balance, vesting cap exceeded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca",
                          "typeString": "literal_string \"Access is denied. Insufficient balance, vesting cap exceeded.\""
                        }
                      ],
                      "id": 7816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7306:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7306:130:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7827,
                  "nodeType": "ExpressionStatement",
                  "src": "7306:130:42"
                },
                {
                  "expression": {
                    "id": 7842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7828,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "7455:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 7830,
                      "indexExpression": {
                        "id": 7829,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7769,
                        "src": "7467:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7455:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 7832,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "7516:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 7833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7516:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7834,
                          "name": "_memberName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7771,
                          "src": "7557:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 7835,
                          "name": "_releaseOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7775,
                          "src": "7593:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7836,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7773,
                          "src": "7629:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 7837,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7773,
                          "src": "7666:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 7838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7696:5:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 7839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7726:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 7840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7758:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 7831,
                        "name": "Allocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7448,
                        "src": "7479:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Allocation_$7448_storage_ptr_$",
                          "typeString": "type(struct VestingBase.Allocation storage pointer)"
                        }
                      },
                      "id": 7841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "startedOn",
                        "memberName",
                        "releaseOn",
                        "allocation",
                        "closingBalance",
                        "deleted",
                        "withdrawn",
                        "lastWithdrawnOn"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7479:291:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_memory_ptr",
                        "typeString": "struct VestingBase.Allocation memory"
                      }
                    },
                    "src": "7455:315:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                      "typeString": "struct VestingBase.Allocation storage ref"
                    }
                  },
                  "id": 7843,
                  "nodeType": "ExpressionStatement",
                  "src": "7455:315:42"
                },
                {
                  "expression": {
                    "id": 7849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7844,
                      "name": "totalVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "7789:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7847,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7773,
                          "src": "7819:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7845,
                          "name": "totalVested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7466,
                          "src": "7803:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "7803:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7803:24:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7789:38:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7850,
                  "nodeType": "ExpressionStatement",
                  "src": "7789:38:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7852,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7769,
                        "src": "7861:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7853,
                        "name": "_memberName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7771,
                        "src": "7871:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 7854,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7773,
                        "src": "7884:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7855,
                        "name": "_releaseOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7775,
                        "src": "7893:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7851,
                      "name": "AllocationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7516,
                      "src": "7843:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256,uint256)"
                      }
                    },
                    "id": 7856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7843:61:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7857,
                  "nodeType": "EmitStatement",
                  "src": "7838:66:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7921:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7781,
                  "id": 7859,
                  "nodeType": "Return",
                  "src": "7914:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7767,
              "nodeType": "StructuredDocumentation",
              "src": "6117:711:42",
              "text": "@notice Creates a vesting schedule allocation for a new beneficiary.\nA beneficiary could mean founders, employees, or advisors.\nPlease note that this action can only be performed by an administrator.\n@param _address The address which will receive the tokens in the future date.\n@param _memberName The name of the candidate for which this vesting schedule allocation is being created for.\n@param _amount The total amount of tokens being vested over the period of vesting duration.\n@param _releaseOn The date on which the first vesting schedule becomes available for withdrawal.\n@return Returns true if the vesting schedule allocation was successfully created."
            },
            "functionSelector": "517b4912",
            "id": 7861,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7778,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7777,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "6953:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "6953:9:42"
              }
            ],
            "name": "createAllocation",
            "nameLocation": "6845:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7769,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6870:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6862:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6862:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7771,
                  "mutability": "mutable",
                  "name": "_memberName",
                  "nameLocation": "6894:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6880:25:42",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7770,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6880:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7773,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6915:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6907:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6907:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7775,
                  "mutability": "mutable",
                  "name": "_releaseOn",
                  "nameLocation": "6932:10:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6924:18:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6924:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6861:82:42"
            },
            "returnParameters": {
              "id": 7781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7780,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "6971:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7779,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6971:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6970:6:42"
            },
            "scope": 8503,
            "src": "6836:1096:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7970,
              "nodeType": "Block",
              "src": "8356:895:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7872,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7864,
                          "src": "8374:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8394:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8386:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7873,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8386:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8386:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8374:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 7878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8398:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 7871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8366:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8366:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7880,
                  "nodeType": "ExpressionStatement",
                  "src": "8366:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7882,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "8435:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 7884,
                            "indexExpression": {
                              "id": 7883,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7864,
                              "src": "8447:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8435:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 7885,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "8435:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8469:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8435:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 7888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8472:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 7881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8427:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8427:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7890,
                  "nodeType": "ExpressionStatement",
                  "src": "8427:108:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8553:30:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 7892,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "8554:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 7894,
                            "indexExpression": {
                              "id": 7893,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7864,
                              "src": "8566:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8554:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 7895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "8554:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 7897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8585:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 7891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8545:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8545:103:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7899,
                  "nodeType": "ExpressionStatement",
                  "src": "8545:103:42"
                },
                {
                  "assignments": [
                    7901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7901,
                      "mutability": "mutable",
                      "name": "allocation",
                      "nameLocation": "8667:10:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "8659:18:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8659:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7906,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7902,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "8680:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 7904,
                      "indexExpression": {
                        "id": 7903,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7864,
                        "src": "8692:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8680:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "id": 7905,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "allocation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7439,
                    "src": "8680:32:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8659:53:42"
                },
                {
                  "assignments": [
                    7908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7908,
                      "mutability": "mutable",
                      "name": "previousBalance",
                      "nameLocation": "8730:15:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "8722:23:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7907,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8722:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7913,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7909,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "8748:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 7911,
                      "indexExpression": {
                        "id": 7910,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7864,
                        "src": "8760:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8748:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "id": 7912,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "closingBalance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7441,
                    "src": "8748:36:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8722:62:42"
                },
                {
                  "assignments": [
                    7915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7915,
                      "mutability": "mutable",
                      "name": "withdrawn",
                      "nameLocation": "8802:9:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "8794:17:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7914,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8794:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7920,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 7916,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "8814:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 7918,
                      "indexExpression": {
                        "id": 7917,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7864,
                        "src": "8826:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8814:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "id": 7919,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "withdrawn",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7445,
                    "src": "8814:31:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8794:51:42"
                },
                {
                  "assignments": [
                    7922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7922,
                      "mutability": "mutable",
                      "name": "lessAmount",
                      "nameLocation": "8863:10:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "8855:18:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7921,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8855:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7927,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7925,
                        "name": "withdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7915,
                        "src": "8896:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7923,
                        "name": "previousBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7908,
                        "src": "8876:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6936,
                      "src": "8876:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8876:30:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8855:51:42"
                },
                {
                  "expression": {
                    "id": 7936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7928,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "8917:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 7930,
                        "indexExpression": {
                          "id": 7929,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7864,
                          "src": "8929:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8917:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 7931,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7439,
                      "src": "8917:32:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7934,
                          "name": "lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7922,
                          "src": "8967:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7932,
                          "name": "allocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7901,
                          "src": "8952:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "8952:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8952:26:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8917:61:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7937,
                  "nodeType": "ExpressionStatement",
                  "src": "8917:61:42"
                },
                {
                  "expression": {
                    "id": 7943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7938,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "8988:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 7940,
                        "indexExpression": {
                          "id": 7939,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7864,
                          "src": "9000:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8988:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 7941,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "closingBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7441,
                      "src": "8988:36:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 7942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9027:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8988:40:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7944,
                  "nodeType": "ExpressionStatement",
                  "src": "8988:40:42"
                },
                {
                  "expression": {
                    "id": 7950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7945,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "9038:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 7947,
                        "indexExpression": {
                          "id": 7946,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7864,
                          "src": "9050:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9038:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 7948,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deleted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7443,
                      "src": "9038:29:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9070:4:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9038:36:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7951,
                  "nodeType": "ExpressionStatement",
                  "src": "9038:36:42"
                },
                {
                  "expression": {
                    "id": 7957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7952,
                      "name": "totalVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "9093:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7955,
                          "name": "lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7922,
                          "src": "9123:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7953,
                          "name": "totalVested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7466,
                          "src": "9107:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "9107:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9107:27:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9093:41:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7958,
                  "nodeType": "ExpressionStatement",
                  "src": "9093:41:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7960,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7864,
                        "src": "9168:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7961,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "9178:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 7963,
                          "indexExpression": {
                            "id": 7962,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7864,
                            "src": "9190:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9178:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 7964,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "9178:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 7965,
                        "name": "lessAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7922,
                        "src": "9212:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7959,
                      "name": "AllocationDeleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7524,
                      "src": "9150:17:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 7966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9150:73:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7967,
                  "nodeType": "EmitStatement",
                  "src": "9145:78:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9240:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7870,
                  "id": 7969,
                  "nodeType": "Return",
                  "src": "9233:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7862,
              "nodeType": "StructuredDocumentation",
              "src": "7939:334:42",
              "text": "@notice Deletes the specified vesting schedule allocation.\nPlease note that this action can only be performed by an administrator.\n@param _address The address of the beneficiary whose allocation is being requested to be deleted.\n@return Returns true if the vesting schedule allocation was successfully deleted."
            },
            "functionSelector": "fad36ece",
            "id": 7971,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7867,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7866,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "8332:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "8332:9:42"
              }
            ],
            "name": "deleteAllocation",
            "nameLocation": "8288:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7864,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "8313:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "8305:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8305:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8304:18:42"
            },
            "returnParameters": {
              "id": 7870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "8350:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7868,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8350:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8349:6:42"
            },
            "scope": 8503,
            "src": "8279:972:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8082,
              "nodeType": "Block",
              "src": "9832:954:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7984,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7974,
                          "src": "9850:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9870:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9862:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7985,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9862:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9862:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9850:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 7990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9874:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 7983,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9842:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9842:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7992,
                  "nodeType": "ExpressionStatement",
                  "src": "9842:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7994,
                          "name": "_additionalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "9911:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9931:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9911:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e742e",
                        "id": 7997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9934:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc",
                          "typeString": "literal_string \"Invalid amount.\""
                        },
                        "value": "Invalid amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_029a21b5fde4319dd75e1bd4f96d331a4a14ab18a0315f12999646068f384cbc",
                          "typeString": "literal_string \"Invalid amount.\""
                        }
                      ],
                      "id": 7993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9903:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9903:49:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7999,
                  "nodeType": "ExpressionStatement",
                  "src": "9903:49:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8001,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "9971:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8003,
                            "indexExpression": {
                              "id": 8002,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7974,
                              "src": "9983:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9971:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8004,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "9971:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10005:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9971:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10008:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9963:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9963:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8009,
                  "nodeType": "ExpressionStatement",
                  "src": "9963:108:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10089:30:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8011,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "10090:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8013,
                            "indexExpression": {
                              "id": 8012,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7974,
                              "src": "10102:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10090:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8014,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "10090:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10121:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10081:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10081:103:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8018,
                  "nodeType": "ExpressionStatement",
                  "src": "10081:103:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 8020,
                            "name": "getAvailableFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7619,
                            "src": "10203:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 8021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10203:19:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 8025,
                              "name": "_additionalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7976,
                              "src": "10251:17:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 8022,
                                "name": "getAmountInVesting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7630,
                                "src": "10226:18:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 8023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10226:20:42",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6921,
                            "src": "10226:24:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10226:43:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10203:66:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742062616c616e63652c2076657374696e67206361702065786365656465642e",
                        "id": 8028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10271:63:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca",
                          "typeString": "literal_string \"Access is denied. Insufficient balance, vesting cap exceeded.\""
                        },
                        "value": "Access is denied. Insufficient balance, vesting cap exceeded."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c3ec02c65232224cfd8ad8cda5b508b6f4a44224ded21ce381f36bf42122ca",
                          "typeString": "literal_string \"Access is denied. Insufficient balance, vesting cap exceeded.\""
                        }
                      ],
                      "id": 8019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10195:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10195:140:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8030,
                  "nodeType": "ExpressionStatement",
                  "src": "10195:140:42"
                },
                {
                  "expression": {
                    "id": 8042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8031,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "10346:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8033,
                        "indexExpression": {
                          "id": 8032,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7974,
                          "src": "10358:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10346:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7439,
                      "src": "10346:32:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8040,
                          "name": "_additionalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "10418:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8035,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "10381:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8037,
                            "indexExpression": {
                              "id": 8036,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7974,
                              "src": "10393:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10381:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8038,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allocation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7439,
                          "src": "10381:32:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "10381:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10381:55:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10346:90:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8043,
                  "nodeType": "ExpressionStatement",
                  "src": "10346:90:42"
                },
                {
                  "expression": {
                    "id": 8055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8044,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "10446:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8046,
                        "indexExpression": {
                          "id": 8045,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7974,
                          "src": "10458:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10446:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8047,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "closingBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7441,
                      "src": "10446:36:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8053,
                          "name": "_additionalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "10526:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8048,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "10485:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8050,
                            "indexExpression": {
                              "id": 8049,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7974,
                              "src": "10497:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10485:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8051,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "10485:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "10485:40:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10485:59:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10446:98:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8056,
                  "nodeType": "ExpressionStatement",
                  "src": "10446:98:42"
                },
                {
                  "expression": {
                    "id": 8062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8057,
                      "name": "totalVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "10555:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8060,
                          "name": "_additionalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "10585:17:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 8058,
                          "name": "totalVested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7466,
                          "src": "10569:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "10569:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10569:34:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10555:48:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8063,
                  "nodeType": "ExpressionStatement",
                  "src": "10555:48:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8065,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7974,
                        "src": "10639:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8066,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "10649:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8068,
                          "indexExpression": {
                            "id": 8067,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7974,
                            "src": "10661:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10649:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "10649:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8075,
                            "name": "_additionalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7976,
                            "src": "10720:17:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 8070,
                                "name": "allocations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7479,
                                "src": "10683:11:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                  "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                                }
                              },
                              "id": 8072,
                              "indexExpression": {
                                "id": 8071,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7974,
                                "src": "10695:8:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10683:21:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                                "typeString": "struct VestingBase.Allocation storage ref"
                              }
                            },
                            "id": 8073,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7439,
                            "src": "10683:32:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6936,
                          "src": "10683:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10683:55:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8077,
                        "name": "_additionalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7976,
                        "src": "10740:17:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8064,
                      "name": "AllocationIncreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7534,
                      "src": "10619:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256,uint256)"
                      }
                    },
                    "id": 8078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10619:139:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8079,
                  "nodeType": "EmitStatement",
                  "src": "10614:144:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10775:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7982,
                  "id": 8081,
                  "nodeType": "Return",
                  "src": "10768:11:42"
                }
              ]
            },
            "documentation": {
              "id": 7972,
              "nodeType": "StructuredDocumentation",
              "src": "9256:465:42",
              "text": "@notice Increases the total allocation of the specified vesting schedule.\nPlease note that this action can only be performed by an administrator.\n@param _address The address of the beneficiary whose allocation is being requested to be increased.\n@param _additionalAmount The additional amount in vesting coin to be addeded to the existing allocation.\n@return Returns true if the vesting schedule allocation was successfully increased."
            },
            "functionSelector": "936bf978",
            "id": 8083,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7979,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7978,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "9808:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "9808:9:42"
              }
            ],
            "name": "increaseAllocation",
            "nameLocation": "9735:18:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7974,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "9762:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8083,
                  "src": "9754:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9754:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7976,
                  "mutability": "mutable",
                  "name": "_additionalAmount",
                  "nameLocation": "9780:17:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8083,
                  "src": "9772:25:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9772:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9753:45:42"
            },
            "returnParameters": {
              "id": 7982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8083,
                  "src": "9826:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7980,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9826:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9825:6:42"
            },
            "scope": 8503,
            "src": "9726:1060:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8191,
              "nodeType": "Block",
              "src": "11350:867:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8096,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8086,
                          "src": "11368:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11388:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11380:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11380:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11380:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11368:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 8102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11392:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 8095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11360:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11360:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8104,
                  "nodeType": "ExpressionStatement",
                  "src": "11360:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8106,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "11429:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11443:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11429:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11421:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11421:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8110,
                  "nodeType": "ExpressionStatement",
                  "src": "11421:24:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8112,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11464:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8114,
                            "indexExpression": {
                              "id": 8113,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11476:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11464:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8115,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "11464:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11498:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11464:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11501:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11456:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11456:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8120,
                  "nodeType": "ExpressionStatement",
                  "src": "11456:108:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11582:30:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8122,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11583:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8124,
                            "indexExpression": {
                              "id": 8123,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11595:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11583:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "11583:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11614:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11574:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11574:103:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8129,
                  "nodeType": "ExpressionStatement",
                  "src": "11574:103:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8131,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11695:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8133,
                            "indexExpression": {
                              "id": 8132,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11707:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11695:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8134,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "11695:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8135,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "11735:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11695:51:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742066756e64732e",
                        "id": 8137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11748:39:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298",
                          "typeString": "literal_string \"Access is denied. Insufficient funds.\""
                        },
                        "value": "Access is denied. Insufficient funds."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298",
                          "typeString": "literal_string \"Access is denied. Insufficient funds.\""
                        }
                      ],
                      "id": 8130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11687:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11687:101:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8139,
                  "nodeType": "ExpressionStatement",
                  "src": "11687:101:42"
                },
                {
                  "expression": {
                    "id": 8151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8140,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "11799:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8142,
                        "indexExpression": {
                          "id": 8141,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8086,
                          "src": "11811:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11799:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7439,
                      "src": "11799:32:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8149,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "11871:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8144,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11834:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8146,
                            "indexExpression": {
                              "id": 8145,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11846:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11834:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allocation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7439,
                          "src": "11834:32:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "11834:36:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11834:49:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11799:84:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8152,
                  "nodeType": "ExpressionStatement",
                  "src": "11799:84:42"
                },
                {
                  "expression": {
                    "id": 8164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8153,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "11893:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8155,
                        "indexExpression": {
                          "id": 8154,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8086,
                          "src": "11905:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11893:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8156,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "closingBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7441,
                      "src": "11893:36:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8162,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "11973:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8157,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "11932:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8159,
                            "indexExpression": {
                              "id": 8158,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8086,
                              "src": "11944:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11932:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8160,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "11932:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "11932:40:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11932:53:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11893:92:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8165,
                  "nodeType": "ExpressionStatement",
                  "src": "11893:92:42"
                },
                {
                  "expression": {
                    "id": 8171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8166,
                      "name": "totalVested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7466,
                      "src": "12004:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8169,
                          "name": "_lessAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "12034:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 8167,
                          "name": "totalVested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7466,
                          "src": "12018:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "12018:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12018:28:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12004:42:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8172,
                  "nodeType": "ExpressionStatement",
                  "src": "12004:42:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8174,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "12082:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8175,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "12092:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8177,
                          "indexExpression": {
                            "id": 8176,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8086,
                            "src": "12104:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12092:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8178,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "12092:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8184,
                            "name": "_lessAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8088,
                            "src": "12163:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 8179,
                                "name": "allocations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7479,
                                "src": "12126:11:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                  "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                                }
                              },
                              "id": 8181,
                              "indexExpression": {
                                "id": 8180,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8086,
                                "src": "12138:8:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12126:21:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                                "typeString": "struct VestingBase.Allocation storage ref"
                              }
                            },
                            "id": 8182,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7439,
                            "src": "12126:32:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6921,
                          "src": "12126:36:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12126:49:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8186,
                        "name": "_lessAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8088,
                        "src": "12177:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8173,
                      "name": "AllocationDecreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7544,
                      "src": "12062:19:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256,uint256)"
                      }
                    },
                    "id": 8187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12062:127:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8188,
                  "nodeType": "EmitStatement",
                  "src": "12057:132:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12206:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8094,
                  "id": 8190,
                  "nodeType": "Return",
                  "src": "12199:11:42"
                }
              ]
            },
            "documentation": {
              "id": 8084,
              "nodeType": "StructuredDocumentation",
              "src": "10793:452:42",
              "text": "@notice Decreases the total allocation of the specified vesting schedule.\nPlease note that this action can only be performed by an administrator.\n@param _address The address of the beneficiary whose allocation is being requested to be decreased.\n@param _lessAmount The amount in vesting coin to be decreased from the existing allocation.\n@return Returns true if the vesting schedule allocation was successfully decreased."
            },
            "functionSelector": "158a774d",
            "id": 8192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8091,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8090,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "11326:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "11326:9:42"
              }
            ],
            "name": "decreaseAllocation",
            "nameLocation": "11259:18:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8086,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "11286:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8192,
                  "src": "11278:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11278:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8088,
                  "mutability": "mutable",
                  "name": "_lessAmount",
                  "nameLocation": "11304:11:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8192,
                  "src": "11296:19:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11296:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11277:39:42"
            },
            "returnParameters": {
              "id": 8094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8093,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8192,
                  "src": "11344:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8092,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11344:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11343:6:42"
            },
            "scope": 8503,
            "src": "11250:967:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8280,
              "nodeType": "Block",
              "src": "12762:871:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8205,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8195,
                          "src": "12780:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12800:1:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12792:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8206,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12792:7:42",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12792:10:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12780:22:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616464726573732e",
                        "id": 8211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12804:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        },
                        "value": "Invalid address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59acb5750c30236105ee23a5a3223a770d00887da62c81b37662e3711045ad34",
                          "typeString": "literal_string \"Invalid address.\""
                        }
                      ],
                      "id": 8204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12772:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12772:51:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8213,
                  "nodeType": "ExpressionStatement",
                  "src": "12772:51:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8215,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "12841:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8217,
                            "indexExpression": {
                              "id": 8216,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8195,
                              "src": "12853:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12841:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "12841:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12875:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12841:35:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12878:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12833:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12833:108:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8223,
                  "nodeType": "ExpressionStatement",
                  "src": "12833:108:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12959:30:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8225,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "12960:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8227,
                            "indexExpression": {
                              "id": 8226,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8195,
                              "src": "12972:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12960:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "12960:29:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12991:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12951:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12951:103:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8232,
                  "nodeType": "ExpressionStatement",
                  "src": "12951:103:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8234,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "13073:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 8235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13073:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8236,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "13091:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8238,
                            "indexExpression": {
                              "id": 8237,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8195,
                              "src": "13103:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13091:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7437,
                          "src": "13091:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13073:49:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205468652076657374696e67207363686564756c652077617320616c72656164792072656c65617365642e",
                        "id": 8241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13124:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_494c5705e9a7014a484f7982903520206f1c897c51a1cd752526e3c563421966",
                          "typeString": "literal_string \"Access is denied. The vesting schedule was already released.\""
                        },
                        "value": "Access is denied. The vesting schedule was already released."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_494c5705e9a7014a484f7982903520206f1c897c51a1cd752526e3c563421966",
                          "typeString": "literal_string \"Access is denied. The vesting schedule was already released.\""
                        }
                      ],
                      "id": 8233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13064:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13064:123:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8243,
                  "nodeType": "ExpressionStatement",
                  "src": "13064:123:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8245,
                          "name": "_newReleaseDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8197,
                          "src": "13205:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8246,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "13223:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8248,
                            "indexExpression": {
                              "id": 8247,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8195,
                              "src": "13235:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13223:21:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8249,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7437,
                          "src": "13223:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13205:49:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20596f752063616e20616c736f20657874656e64207468652072656c65617365206461746520627574206e6f7420746865206f74686572207761792061726f756e642e",
                        "id": 8251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13256:86:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5adecffb723a004af6b679798c1cd516d03b217de4259c32b901687171fcd29f",
                          "typeString": "literal_string \"Access is denied. You can also extend the release date but not the other way around.\""
                        },
                        "value": "Access is denied. You can also extend the release date but not the other way around."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5adecffb723a004af6b679798c1cd516d03b217de4259c32b901687171fcd29f",
                          "typeString": "literal_string \"Access is denied. You can also extend the release date but not the other way around.\""
                        }
                      ],
                      "id": 8244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13197:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13197:146:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8253,
                  "nodeType": "ExpressionStatement",
                  "src": "13197:146:42"
                },
                {
                  "assignments": [
                    8255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8255,
                      "mutability": "mutable",
                      "name": "previousReleaseDate",
                      "nameLocation": "13379:19:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8280,
                      "src": "13371:27:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8254,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13371:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8260,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 8256,
                        "name": "allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7479,
                        "src": "13401:11:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                          "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                        }
                      },
                      "id": 8258,
                      "indexExpression": {
                        "id": 8257,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8195,
                        "src": "13413:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13401:21:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                        "typeString": "struct VestingBase.Allocation storage ref"
                      }
                    },
                    "id": 8259,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "releaseOn",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7437,
                    "src": "13401:31:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13371:61:42"
                },
                {
                  "expression": {
                    "id": 8266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8261,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "13442:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8263,
                        "indexExpression": {
                          "id": 8262,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8195,
                          "src": "13454:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13442:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "releaseOn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7437,
                      "src": "13442:31:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8265,
                      "name": "_newReleaseDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8197,
                      "src": "13476:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13442:49:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8267,
                  "nodeType": "ExpressionStatement",
                  "src": "13442:49:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8269,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8195,
                        "src": "13524:8:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8270,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "13534:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8272,
                          "indexExpression": {
                            "id": 8271,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8195,
                            "src": "13546:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13534:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8273,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "13534:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 8274,
                        "name": "previousReleaseDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8255,
                        "src": "13568:19:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 8275,
                        "name": "_newReleaseDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8197,
                        "src": "13589:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8268,
                      "name": "ScheduleExtended",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7554,
                      "src": "13507:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256,uint256)"
                      }
                    },
                    "id": 8276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13507:98:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8277,
                  "nodeType": "EmitStatement",
                  "src": "13502:103:42"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13622:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8203,
                  "id": 8279,
                  "nodeType": "Return",
                  "src": "13615:11:42"
                }
              ]
            },
            "documentation": {
              "id": 8193,
              "nodeType": "StructuredDocumentation",
              "src": "12223:432:42",
              "text": "@notice Extends the release date of the specified vesting schedule allocation.\nPlease note that this action can only be performed by an administrator.\n@param _address The address of the beneficiary who allocation is being requested to be extended.\n@param _newReleaseDate A new release date to extend the allocation to.\n@return Returns true if the vesting schedule allocation was successfully extended."
            },
            "functionSelector": "0715a0b4",
            "id": 8281,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8199,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7127,
                  "src": "12738:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "12738:9:42"
              }
            ],
            "name": "extendAllocation",
            "nameLocation": "12669:16:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8195,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "12694:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8281,
                  "src": "12686:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12686:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8197,
                  "mutability": "mutable",
                  "name": "_newReleaseDate",
                  "nameLocation": "12712:15:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8281,
                  "src": "12704:23:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12704:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12685:43:42"
            },
            "returnParameters": {
              "id": 8203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8281,
                  "src": "12756:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8201,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12756:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12755:6:42"
            },
            "scope": 8503,
            "src": "12660:973:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8346,
              "nodeType": "Block",
              "src": "13912:469:42",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8289,
                      "name": "withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "13925:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13942:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13925:18:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8295,
                  "nodeType": "IfStatement",
                  "src": "13922:55:42",
                  "trueBody": {
                    "id": 8294,
                    "nodeType": "Block",
                    "src": "13944:33:42",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 8292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13965:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 8288,
                        "id": 8293,
                        "nodeType": "Return",
                        "src": "13958:8:42"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8297,
                      "mutability": "mutable",
                      "name": "duration",
                      "nameLocation": "14003:8:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "13995:16:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8296,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13995:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8305,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 8298,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "14014:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 8299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "14014:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 8300,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "14032:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8302,
                        "indexExpression": {
                          "id": 8301,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8284,
                          "src": "14044:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14032:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8303,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "releaseOn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7437,
                      "src": "14032:31:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14014:49:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13995:68:42"
                },
                {
                  "assignments": [
                    8307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8307,
                      "mutability": "mutable",
                      "name": "cycles",
                      "nameLocation": "14081:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "14073:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14073:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8315,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 8308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14090:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 8311,
                              "name": "withdrawalFrequency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7454,
                              "src": "14108:19:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8309,
                              "name": "duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8297,
                              "src": "14095:8:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 8310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6966,
                            "src": "14095:12:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 8312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14095:33:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 8313,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14094:35:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14090:39:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14073:56:42"
                },
                {
                  "assignments": [
                    8317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8317,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "14148:6:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "14140:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8316,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14140:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8321,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8318,
                      "name": "cycles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8307,
                      "src": "14157:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 8319,
                      "name": "withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "14166:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14157:22:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14140:39:42"
                },
                {
                  "assignments": [
                    8323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8323,
                      "mutability": "mutable",
                      "name": "cap",
                      "nameLocation": "14197:3:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "14189:11:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8322,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14189:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8336,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8324,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8317,
                        "src": "14203:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 8325,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "14212:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8327,
                          "indexExpression": {
                            "id": 8326,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8284,
                            "src": "14224:8:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14212:21:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8328,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allocation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7439,
                        "src": "14212:32:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14203:41:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 8334,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8317,
                      "src": "14282:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "14203:85:42",
                    "trueExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 8330,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "14247:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8332,
                        "indexExpression": {
                          "id": 8331,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8284,
                          "src": "14259:8:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14247:21:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8333,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7439,
                      "src": "14247:32:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14189:99:42"
                },
                {
                  "assignments": [
                    8338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8338,
                      "mutability": "mutable",
                      "name": "drawingPower",
                      "nameLocation": "14306:12:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8346,
                      "src": "14298:20:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8337,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14298:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8343,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8341,
                        "name": "totalWithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "14329:14:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8339,
                        "name": "cap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8323,
                        "src": "14321:3:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6936,
                      "src": "14321:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14321:23:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14298:46:42"
                },
                {
                  "expression": {
                    "id": 8344,
                    "name": "drawingPower",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8338,
                    "src": "14362:12:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8288,
                  "id": 8345,
                  "nodeType": "Return",
                  "src": "14355:19:42"
                }
              ]
            },
            "documentation": {
              "id": 8282,
              "nodeType": "StructuredDocumentation",
              "src": "13643:192:42",
              "text": "@notice Gets the drawing power of the beneficiary.\n@param _address The address to check the drawing power of.\n@return Returns the amount in vesting coin that can be withdrawn."
            },
            "functionSelector": "e4353ad6",
            "id": 8347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDrawingPower",
            "nameLocation": "13849:15:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8284,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "13873:8:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8347,
                  "src": "13865:16:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13865:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13864:18:42"
            },
            "returnParameters": {
              "id": 8288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8347,
                  "src": "13903:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13903:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13902:9:42"
            },
            "scope": 8503,
            "src": "13840:541:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8416,
              "nodeType": "Block",
              "src": "14599:861:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8353,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "14617:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8356,
                            "indexExpression": {
                              "expression": {
                                "id": 8354,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14629:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14629:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14617:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startedOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7435,
                          "src": "14617:33:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14653:1:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14617:37:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14656:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14609:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14609:110:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8362,
                  "nodeType": "ExpressionStatement",
                  "src": "14609:110:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14737:32:42",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8364,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "14738:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8367,
                            "indexExpression": {
                              "expression": {
                                "id": 8365,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14750:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14750:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14738:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8368,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deleted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7443,
                          "src": "14738:31:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e205265717565737465642076657374696e67207363686564756c6520646f6573206e6f742065786973742e",
                        "id": 8370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14771:62:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        },
                        "value": "Access is denied. Requested vesting schedule does not exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bdb3cd670d5f281895c15913e1b84b28ea37b0bf721514274eb89b94daf0e41",
                          "typeString": "literal_string \"Access is denied. Requested vesting schedule does not exist.\""
                        }
                      ],
                      "id": 8363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14729:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14729:105:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8372,
                  "nodeType": "ExpressionStatement",
                  "src": "14729:105:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8374,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "14852:5:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 8375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14852:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8376,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "14871:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8379,
                            "indexExpression": {
                              "expression": {
                                "id": 8377,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14883:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14883:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14871:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8380,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "releaseOn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7437,
                          "src": "14871:33:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14852:52:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20596f7520617265206e6f7420616c6c6f77656420746f207769746864726177206265666f7265207468652072656c6561736520646174652e",
                        "id": 8382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14906:76:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2c672ebaa1ef91e2a4cb289b836b7c4c6d12d9bbfeea0e85832b6812fa489cb",
                          "typeString": "literal_string \"Access is denied. You are not allowed to withdraw before the release date.\""
                        },
                        "value": "Access is denied. You are not allowed to withdraw before the release date."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2c672ebaa1ef91e2a4cb289b836b7c4c6d12d9bbfeea0e85832b6812fa489cb",
                          "typeString": "literal_string \"Access is denied. You are not allowed to withdraw before the release date.\""
                        }
                      ],
                      "id": 8373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14844:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14844:139:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8384,
                  "nodeType": "ExpressionStatement",
                  "src": "14844:139:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8386,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "15001:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8389,
                            "indexExpression": {
                              "expression": {
                                "id": 8387,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15013:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15013:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15001:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8390,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "15001:38:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8391,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8350,
                          "src": "15043:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15001:49:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732069732064656e6965642e20496e73756666696369656e742066756e64732e",
                        "id": 8393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15052:39:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298",
                          "typeString": "literal_string \"Access is denied. Insufficient funds.\""
                        },
                        "value": "Access is denied. Insufficient funds."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc98602a18187a6506d2581fb30af5c1a4727f6939a78778ca1a61a723737298",
                          "typeString": "literal_string \"Access is denied. Insufficient funds.\""
                        }
                      ],
                      "id": 8385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14993:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14993:99:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8395,
                  "nodeType": "ExpressionStatement",
                  "src": "14993:99:42"
                },
                {
                  "assignments": [
                    8397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8397,
                      "mutability": "mutable",
                      "name": "drawingPower",
                      "nameLocation": "15119:12:42",
                      "nodeType": "VariableDeclaration",
                      "scope": 8416,
                      "src": "15111:20:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15111:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8402,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8399,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "15150:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15150:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8398,
                      "name": "getDrawingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8347,
                      "src": "15134:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 8401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15134:27:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15111:50:42"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8403,
                      "name": "withdrawalCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "15297:13:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15313:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15297:17:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Zero means unlimited amount.\nWe've already verified above that the investor has sufficient balance.",
                  "id": 8415,
                  "nodeType": "IfStatement",
                  "src": "15294:160:42",
                  "trueBody": {
                    "id": 8414,
                    "nodeType": "Block",
                    "src": "15315:139:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8407,
                                "name": "drawingPower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8397,
                                "src": "15337:12:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 8408,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8350,
                                "src": "15353:7:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15337:23:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4163636573732069732064656e6965642e205468652072657175657374656420616d6f756e74206578636565647320796f757220616c6c6f636174696f6e2e",
                              "id": 8410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15362:65:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3c1057cbb80ed0d2f6e11108550f15ac9221a1918ce90a76ddb9a7f1c7062cc5",
                                "typeString": "literal_string \"Access is denied. The requested amount exceeds your allocation.\""
                              },
                              "value": "Access is denied. The requested amount exceeds your allocation."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3c1057cbb80ed0d2f6e11108550f15ac9221a1918ce90a76ddb9a7f1c7062cc5",
                                "typeString": "literal_string \"Access is denied. The requested amount exceeds your allocation.\""
                              }
                            ],
                            "id": 8406,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15329:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15329:99:42",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8412,
                        "nodeType": "ExpressionStatement",
                        "src": "15329:99:42"
                      },
                      {
                        "id": 8413,
                        "nodeType": "PlaceholderStatement",
                        "src": "15442:1:42"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8348,
              "nodeType": "StructuredDocumentation",
              "src": "14391:164:42",
              "text": "@notice Signifies if the sender has enough balances to withdraw the desired amount of the vesting coin.\n@param _amount The amount desired to be withdrawn."
            },
            "id": 8417,
            "name": "canWithdraw",
            "nameLocation": "14569:11:42",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8350,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14589:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8417,
                  "src": "14581:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14581:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14580:17:42"
            },
            "src": "14560:900:42",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8501,
              "nodeType": "Block",
              "src": "15763:514:42",
              "statements": [
                {
                  "expression": {
                    "id": 8439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8432,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "15797:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8435,
                        "indexExpression": {
                          "expression": {
                            "id": 8433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15809:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15809:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15797:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastWithdrawnOn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7447,
                      "src": "15797:39:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 8437,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "15839:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 8438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "15839:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15797:57:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8440,
                  "nodeType": "ExpressionStatement",
                  "src": "15797:57:42"
                },
                {
                  "expression": {
                    "id": 8454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8441,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "15865:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8444,
                        "indexExpression": {
                          "expression": {
                            "id": 8442,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15877:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15877:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15865:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8445,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "closingBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7441,
                      "src": "15865:38:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8452,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8420,
                          "src": "15949:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8446,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "15906:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8449,
                            "indexExpression": {
                              "expression": {
                                "id": 8447,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15918:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15918:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15906:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8450,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closingBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7441,
                          "src": "15906:38:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6936,
                        "src": "15906:42:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15906:51:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15865:92:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8455,
                  "nodeType": "ExpressionStatement",
                  "src": "15865:92:42"
                },
                {
                  "expression": {
                    "id": 8469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 8456,
                          "name": "allocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7479,
                          "src": "15967:11:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                            "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                          }
                        },
                        "id": 8459,
                        "indexExpression": {
                          "expression": {
                            "id": 8457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "15979:3:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15979:10:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15967:23:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                          "typeString": "struct VestingBase.Allocation storage ref"
                        }
                      },
                      "id": 8460,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7445,
                      "src": "15967:33:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8467,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8420,
                          "src": "16041:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8461,
                              "name": "allocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7479,
                              "src": "16003:11:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                                "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                              }
                            },
                            "id": 8464,
                            "indexExpression": {
                              "expression": {
                                "id": 8462,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "16015:3:42",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16015:10:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16003:23:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                              "typeString": "struct VestingBase.Allocation storage ref"
                            }
                          },
                          "id": 8465,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7445,
                          "src": "16003:33:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "16003:37:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16003:46:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15967:82:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8470,
                  "nodeType": "ExpressionStatement",
                  "src": "15967:82:42"
                },
                {
                  "expression": {
                    "id": 8476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8471,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7469,
                      "src": "16060:14:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8474,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8420,
                          "src": "16096:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 8472,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7469,
                          "src": "16077:14:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 8473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "16077:18:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 8475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16077:27:42",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16060:44:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8477,
                  "nodeType": "ExpressionStatement",
                  "src": "16060:44:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 8481,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "16144:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16144:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8483,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8420,
                            "src": "16156:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8479,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7473,
                            "src": "16123:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 8480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "16123:20:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16123:41:42",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16115:7:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16115:50:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8486,
                  "nodeType": "ExpressionStatement",
                  "src": "16115:50:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8488,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16191:3:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16191:10:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 8490,
                            "name": "allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7479,
                            "src": "16203:11:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Allocation_$7448_storage_$",
                              "typeString": "mapping(address => struct VestingBase.Allocation storage ref)"
                            }
                          },
                          "id": 8493,
                          "indexExpression": {
                            "expression": {
                              "id": 8491,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "16215:3:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16215:10:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16203:23:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$7448_storage",
                            "typeString": "struct VestingBase.Allocation storage ref"
                          }
                        },
                        "id": 8494,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "memberName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7433,
                        "src": "16203:34:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 8495,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8420,
                        "src": "16239:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8487,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7506,
                      "src": "16181:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 8496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16181:66:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8497,
                  "nodeType": "EmitStatement",
                  "src": "16176:71:42"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 8498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16265:4:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 8499,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "16264:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8431,
                  "id": 8500,
                  "nodeType": "Return",
                  "src": "16257:13:42"
                }
              ]
            },
            "documentation": {
              "id": 8418,
              "nodeType": "StructuredDocumentation",
              "src": "15466:171:42",
              "text": "@notice This action enables the beneficiaries to withdraw a desired amount from this contract.    \n@param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "2e1a7d4d",
            "id": 8502,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8423,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8420,
                    "src": "15698:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8424,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8422,
                  "name": "canWithdraw",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8417,
                  "src": "15686:11:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "15686:20:42"
              },
              {
                "id": 8426,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8425,
                  "name": "afterEarliestWithdrawalDate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7642,
                  "src": "15707:27:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "15707:27:42"
              },
              {
                "id": 8428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8427,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7351,
                  "src": "15735:13:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "15735:13:42"
              }
            ],
            "name": "withdraw",
            "nameLocation": "15651:8:42",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8420,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "15668:7:42",
                  "nodeType": "VariableDeclaration",
                  "scope": 8502,
                  "src": "15660:15:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15660:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15659:17:42"
            },
            "returnParameters": {
              "id": 8431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8502,
                  "src": "15757:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8429,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15757:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15756:6:42"
            },
            "scope": 8503,
            "src": "15642:635:42",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8504,
        "src": "521:15758:42",
        "usedErrors": []
      }
    ],
    "src": "37:16242:42"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-10T05:30:48.510Z",
  "devdoc": {
    "details": "A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.",
    "kind": "dev",
    "methods": {
      "addAdmin(address)": {
        "params": {
          "_address": "The address to add to the administrator list."
        }
      },
      "addManyAdmins(address[])": {
        "params": {
          "_accounts": "The wallet addresses to add to the administrator list."
        }
      },
      "constructor": {
        "params": {
          "_minPeriod": "The minimum vesting period.",
          "_vestingCoin": "The ERC20 contract of the coin being vested.",
          "_withdrawalCap": "Maximum amount of tokens that can be withdrawn for the specified frequency.",
          "_withdrawalFrequency": "The frequency of token withdrawals. If the _withdrawalCap is zero, this variable is ignored."
        }
      },
      "createAllocation(address,string,uint256,uint256)": {
        "params": {
          "_address": "The address which will receive the tokens in the future date.",
          "_amount": "The total amount of tokens being vested over the period of vesting duration.",
          "_memberName": "The name of the candidate for which this vesting schedule allocation is being created for.",
          "_releaseOn": "The date on which the first vesting schedule becomes available for withdrawal."
        },
        "returns": {
          "_0": "Returns true if the vesting schedule allocation was successfully created."
        }
      },
      "decreaseAllocation(address,uint256)": {
        "params": {
          "_address": "The address of the beneficiary whose allocation is being requested to be decreased.",
          "_lessAmount": "The amount in vesting coin to be decreased from the existing allocation."
        },
        "returns": {
          "_0": "Returns true if the vesting schedule allocation was successfully decreased."
        }
      },
      "deleteAllocation(address)": {
        "params": {
          "_address": "The address of the beneficiary whose allocation is being requested to be deleted."
        },
        "returns": {
          "_0": "Returns true if the vesting schedule allocation was successfully deleted."
        }
      },
      "extendAllocation(address,uint256)": {
        "params": {
          "_address": "The address of the beneficiary who allocation is being requested to be extended.",
          "_newReleaseDate": "A new release date to extend the allocation to."
        },
        "returns": {
          "_0": "Returns true if the vesting schedule allocation was successfully extended."
        }
      },
      "fund()": {
        "returns": {
          "_0": "Returns true if the funding was successful."
        }
      },
      "getAvailableFunds()": {
        "returns": {
          "_0": "Returns the closing balance of vesting coin held by this contract."
        }
      },
      "getDrawingPower(address)": {
        "params": {
          "_address": "The address to check the drawing power of."
        },
        "returns": {
          "_0": "Returns the amount in vesting coin that can be withdrawn."
        }
      },
      "increaseAllocation(address,uint256)": {
        "params": {
          "_additionalAmount": "The additional amount in vesting coin to be addeded to the existing allocation.",
          "_address": "The address of the beneficiary whose allocation is being requested to be increased."
        },
        "returns": {
          "_0": "Returns true if the vesting schedule allocation was successfully increased."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeAdmin(address)": {
        "params": {
          "_address": "The address to remove from the administrator list."
        }
      },
      "removeFunds(uint256)": {
        "params": {
          "_amount": "The amount desired to withdraw."
        },
        "returns": {
          "_0": "Returns true if the withdrawal was successful."
        }
      },
      "removeManyAdmins(address[])": {
        "params": {
          "_accounts": "The wallet addresses to add to the administrator list."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "params": {
          "_amount": "The amount in vesting coin desired to withdraw."
        }
      }
    },
    "title": "Vesting",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Funded(address,uint256,uint256,uint256)": {
        "notice": "Events;"
      }
    },
    "kind": "user",
    "methods": {
      "addAdmin(address)": {
        "notice": "Adds the specified address to the list of administrators."
      },
      "addManyAdmins(address[])": {
        "notice": "Adds multiple addresses to the administrator list."
      },
      "admins(address)": {
        "notice": "List of administrators."
      },
      "constructor": {
        "notice": "Constructs this contract"
      },
      "createAllocation(address,string,uint256,uint256)": {
        "notice": "Creates a vesting schedule allocation for a new beneficiary. A beneficiary could mean founders, employees, or advisors. Please note that this action can only be performed by an administrator."
      },
      "decreaseAllocation(address,uint256)": {
        "notice": "Decreases the total allocation of the specified vesting schedule. Please note that this action can only be performed by an administrator."
      },
      "deleteAllocation(address)": {
        "notice": "Deletes the specified vesting schedule allocation. Please note that this action can only be performed by an administrator."
      },
      "earliestWithdrawalDate()": {
        "notice": "The earliest date on which the vested tokens can be redeemed."
      },
      "extendAllocation(address,uint256)": {
        "notice": "Extends the release date of the specified vesting schedule allocation. Please note that this action can only be performed by an administrator."
      },
      "fund()": {
        "notice": "Enables this vesting contract to receive the ERC20 (vesting coin). Before calling this function please approve your desired amount of the coin for this smart contract address. Please note that this action is restricted to administrators only."
      },
      "getAvailableFunds()": {
        "notice": "The balance of this smart contract. "
      },
      "getDrawingPower(address)": {
        "notice": "Gets the drawing power of the beneficiary."
      },
      "increaseAllocation(address,uint256)": {
        "notice": "Increases the total allocation of the specified vesting schedule. Please note that this action can only be performed by an administrator."
      },
      "minimumVestingPeriod()": {
        "notice": "The minimum period of vesting."
      },
      "pause()": {
        "notice": "Pauses the contract."
      },
      "removeAdmin(address)": {
        "notice": "Removes the specified address from the list of administrators."
      },
      "removeFunds(uint256)": {
        "notice": "Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances."
      },
      "removeManyAdmins(address[])": {
        "notice": "Removes multiple addresses to the administrator list."
      },
      "totalVested()": {
        "notice": "The sum total amount of tokens vested for all allocations."
      },
      "totalWithdrawn()": {
        "notice": "The sum total amount of tokens withdrawn from all allocations."
      },
      "unpause()": {
        "notice": "Unpauses the contract and returns to normal state."
      },
      "vestingCoin()": {
        "notice": "The ERC20 contract of the coin being vested."
      },
      "vestingStartedOn()": {
        "notice": "The date on which the vesting was started. "
      },
      "withdraw(uint256)": {
        "notice": "This action enables the beneficiaries to withdraw a desired amount from this contract.    "
      },
      "withdrawalCap()": {
        "notice": "Maximum amount of tokens that can be withdrawn for the specified frequency. Zero means that there's no cap;"
      },
      "withdrawalFrequency()": {
        "notice": "The frequency of token withdrawals. If the withdrawalCap is zero, this variable is ignored."
      }
    },
    "version": 1
  }
}