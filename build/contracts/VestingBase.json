{
  "contractName": "VestingBase",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_vestingCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_remainingInPool",
          "type": "uint256"
        }
      ],
      "name": "FundRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_previousCap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newCap",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCoin",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "removeFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_newMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_vestingCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_remainingInPool\",\"type\":\"uint256\"}],\"name\":\"FundRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previousCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCap\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCoin\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vestingCoin\":\"The ERC20 contract of the coin being vested.\"}},\"fund()\":{\"returns\":{\"_0\":\"Returns true if the funding was successful.\"}},\"getAvailableFunds()\":{\"returns\":{\"_0\":\"Returns the closing balance of vesting coin held by this contract.\"}},\"getMerkleRoot(uint256)\":{\"params\":{\"_round\":\"The round of which markleTree to be viewed.\"},\"returns\":{\"_0\":\"Returns Total vested balance.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeFunds(uint256)\":{\"params\":{\"_amount\":\"The amount desired to withdraw.\"},\"returns\":{\"_0\":\"Returns true if the withdrawal was successful.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"params\":{\"_amount\":\"The amount in vesting coin desired to withdraw.\"}}},\"title\":\"Vesting\",\"version\":1},\"userdoc\":{\"events\":{\"Funded(address,uint256,uint256,uint256)\":{\"notice\":\"Events;\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs this contract\"},\"fund()\":{\"notice\":\"Enables this vesting contract to receive the ERC20 (vesting coin). Before calling this function please approve your desired amount of the coin for this smart contract address. Please note that this action is restricted to administrators only.\"},\"getAvailableFunds()\":{\"notice\":\"The Vesting Token balance of this smart contract.\"},\"getMerkleRoot(uint256)\":{\"notice\":\"Gets the markle tree of each vesting Rounds.\"},\"removeFunds(uint256)\":{\"notice\":\"Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances.\"},\"setMerkleRoot(bytes32,uint256)\":{\"notice\":\"This action enables admin to set newMarkelRoot.\"},\"totalWithdrawn()\":{\"notice\":\"The sum total amount of tokens withdrawn from all allocations.\"},\"vestingCoin()\":{\"notice\":\"The ERC20 contract of the coin being vested.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"notice\":\"This action enables the beneficiaries to withdraw a desired amount from this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Vesting/VestingBase.sol\":\"VestingBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xb45e104b4d8ecd7f3ad94bdebd7a76bfa258f5bc91444bb4858f75616cfad140\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06abef552fe0601522ef089d68e2f79ed8d15fe0c06dd4f35d7e6e5a1e247363\",\"dweb:/ipfs/QmaT69xxfRukB41W5gWBRDEA5Y96etSExwvqV6qn75g3mg\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xea64fbaccbf9d8c235cf6838240ddcebb97f9fc383660289e9dff32e4fb85f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e8a1dd0eac2fa865dc9a052bee01eec31677d7bc01b5b5aa825d820f3f1b343\",\"dweb:/ipfs/QmR8WuNeoAvJhnL7msQfQwaZEkwVnNyNDUNBL3Y616ohYa\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/Vesting/VestingBase.sol\":{\"keccak256\":\"0x26505b2f976b77de68bf29030ca5ade1e771073aacbeb6fe151d47a70d4d67b4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://547e9f3e907101ff68709455e0da4c6b551738810ec097848a7f30ed55ed1ac3\",\"dweb:/ipfs/QmWgJWTstWjieSc2z566RKaevGKYYd1Na2REyAC5eCjmcZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610dff380380610dff83398101604081905261002f916100ba565b6100383361006a565b6000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b03929092169190911790556100ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b610d06806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101385780637c382d0b146101425780638da5cb5b14610155578063a065b0bd1461017a578063b60d42881461018d578063f2fde38b1461019557600080fd5b80630aab8ba5146100b95780632f384523146100df5780634b319713146101025780635195bd291461010b5780635c975abb146101135780636092dfcb14610125575b600080fd5b6100cc6100c7366004610b01565b6101a8565b6040519081526020015b60405180910390f35b6100f26100ed366004610b01565b6101ef565b60405190151581526020016100d6565b6100cc60015481565b6100cc6103b8565b600054600160a01b900460ff166100f2565b6100f2610133366004610b1a565b61042a565b6101406106da565b005b610140610150366004610b9f565b610710565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d6565b600254610162906001600160a01b031681565b6100f26107a8565b6101406101a3366004610bc1565b61096d565b600080546001600160a01b031633146101dc5760405162461bcd60e51b81526004016101d390610bea565b60405180910390fd5b5060009081526004602052604090205490565b600080546001600160a01b0316331461021a5760405162461bcd60e51b81526004016101d390610bea565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102879190610c1f565b90506000600154826102999190610c4e565b9050838110156102eb5760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e616365000060448201526064016101d3565b60025460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610c65565b61036957600080fd5b337f2d2c22b12ce2c4142ec672b74a307ec23572019efd8c9a930a8fc19f0fcd6c86856103968482610a08565b6040805192835260208301919091520160405180910390a25060019392505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104259190610c1f565b905090565b60008054600160a01b900460ff16156104785760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101d3565b600082815260036020908152604080832033845290915290205460ff16156104ed5760405162461bcd60e51b815260206004820152602260248201527f56657374696e673a2056657374696e6720686173206265656e20636c61696d65604482015261642160f01b60648201526084016101d3565b60008281526004602090815260408083205490516bffffffffffffffffffffffff193360601b16928101929092526034820188905291906054016040516020818303038152906040528051906020012090506000610581878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250879250869150610a1b9050565b9050806105e45760405162461bcd60e51b815260206004820152602b60248201527f56657374696e673a204164647265737320686173206e6f2056657374696e672060448201526a616c6c6f636174696f6e2160a81b60648201526084016101d3565b60008581526003602090815260408083203384529091529020805460ff19166001908117909155546106169089610a31565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190610c65565b61069757600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146107045760405162461bcd60e51b81526004016101d390610bea565b61070e6000610a3d565b565b6000546001600160a01b0316331461073a5760405162461bcd60e51b81526004016101d390610bea565b816107975760405162461bcd60e51b815260206004820152602760248201527f56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f746044820152662076616c75652160c81b60648201526084016101d3565b600090815260046020526040902055565b600080546001600160a01b031633146107d35760405162461bcd60e51b81526004016101d390610bea565b600254604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190610c1f565b90506000811161088b5760405162461bcd60e51b815260206004820152601060248201526f2737ba3434b733903a3790333ab7321760811b60448201526064016101d3565b60006108956103b8565b6002546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109119190610c65565b61091a57600080fd5b337f26b27e83d0b82c44eb17d6f11776a8c600332d2ed7d9febfe585848bcfadf52d83836109466103b8565b6040805193845260208401929092529082015260600160405180910390a260019250505090565b6000546001600160a01b031633146109975760405162461bcd60e51b81526004016101d390610bea565b6001600160a01b0381166109fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d3565b610a0581610a3d565b50565b6000610a148284610c4e565b9392505050565b600082610a288584610a8d565b14949350505050565b6000610a148284610c87565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b8451811015610af9576000858281518110610aaf57610aaf610c9f565b60200260200101519050808311610ad55760008381526020829052604090209250610ae6565b600081815260208490526040902092505b5080610af181610cb5565b915050610a92565b509392505050565b600060208284031215610b1357600080fd5b5035919050565b60008060008060608587031215610b3057600080fd5b84359350602085013567ffffffffffffffff80821115610b4f57600080fd5b818701915087601f830112610b6357600080fd5b813581811115610b7257600080fd5b8860208260051b8501011115610b8757600080fd5b95986020929092019750949560400135945092505050565b60008060408385031215610bb257600080fd5b50508035926020909101359150565b600060208284031215610bd357600080fd5b81356001600160a01b0381168114610a1457600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610c3157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610c6057610c60610c38565b500390565b600060208284031215610c7757600080fd5b81518015158114610a1457600080fd5b60008219821115610c9a57610c9a610c38565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610cc957610cc9610c38565b506001019056fea26469706673582212208696a3bca9c7f40c97f5a918bcc54c233d7b3659ca2abe82e2f69f92d165bb6864736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101385780637c382d0b146101425780638da5cb5b14610155578063a065b0bd1461017a578063b60d42881461018d578063f2fde38b1461019557600080fd5b80630aab8ba5146100b95780632f384523146100df5780634b319713146101025780635195bd291461010b5780635c975abb146101135780636092dfcb14610125575b600080fd5b6100cc6100c7366004610b01565b6101a8565b6040519081526020015b60405180910390f35b6100f26100ed366004610b01565b6101ef565b60405190151581526020016100d6565b6100cc60015481565b6100cc6103b8565b600054600160a01b900460ff166100f2565b6100f2610133366004610b1a565b61042a565b6101406106da565b005b610140610150366004610b9f565b610710565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d6565b600254610162906001600160a01b031681565b6100f26107a8565b6101406101a3366004610bc1565b61096d565b600080546001600160a01b031633146101dc5760405162461bcd60e51b81526004016101d390610bea565b60405180910390fd5b5060009081526004602052604090205490565b600080546001600160a01b0316331461021a5760405162461bcd60e51b81526004016101d390610bea565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102879190610c1f565b90506000600154826102999190610c4e565b9050838110156102eb5760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e616365000060448201526064016101d3565b60025460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190610c65565b61036957600080fd5b337f2d2c22b12ce2c4142ec672b74a307ec23572019efd8c9a930a8fc19f0fcd6c86856103968482610a08565b6040805192835260208301919091520160405180910390a25060019392505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104259190610c1f565b905090565b60008054600160a01b900460ff16156104785760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101d3565b600082815260036020908152604080832033845290915290205460ff16156104ed5760405162461bcd60e51b815260206004820152602260248201527f56657374696e673a2056657374696e6720686173206265656e20636c61696d65604482015261642160f01b60648201526084016101d3565b60008281526004602090815260408083205490516bffffffffffffffffffffffff193360601b16928101929092526034820188905291906054016040516020818303038152906040528051906020012090506000610581878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250879250869150610a1b9050565b9050806105e45760405162461bcd60e51b815260206004820152602b60248201527f56657374696e673a204164647265737320686173206e6f2056657374696e672060448201526a616c6c6f636174696f6e2160a81b60648201526084016101d3565b60008581526003602090815260408083203384529091529020805460ff19166001908117909155546106169089610a31565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190610c65565b61069757600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146107045760405162461bcd60e51b81526004016101d390610bea565b61070e6000610a3d565b565b6000546001600160a01b0316331461073a5760405162461bcd60e51b81526004016101d390610bea565b816107975760405162461bcd60e51b815260206004820152602760248201527f56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f746044820152662076616c75652160c81b60648201526084016101d3565b600090815260046020526040902055565b600080546001600160a01b031633146107d35760405162461bcd60e51b81526004016101d390610bea565b600254604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190610c1f565b90506000811161088b5760405162461bcd60e51b815260206004820152601060248201526f2737ba3434b733903a3790333ab7321760811b60448201526064016101d3565b60006108956103b8565b6002546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109119190610c65565b61091a57600080fd5b337f26b27e83d0b82c44eb17d6f11776a8c600332d2ed7d9febfe585848bcfadf52d83836109466103b8565b6040805193845260208401929092529082015260600160405180910390a260019250505090565b6000546001600160a01b031633146109975760405162461bcd60e51b81526004016101d390610bea565b6001600160a01b0381166109fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d3565b610a0581610a3d565b50565b6000610a148284610c4e565b9392505050565b600082610a288584610a8d565b14949350505050565b6000610a148284610c87565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b8451811015610af9576000858281518110610aaf57610aaf610c9f565b60200260200101519050808311610ad55760008381526020829052604090209250610ae6565b600081815260208490526040902092505b5080610af181610cb5565b915050610a92565b509392505050565b600060208284031215610b1357600080fd5b5035919050565b60008060008060608587031215610b3057600080fd5b84359350602085013567ffffffffffffffff80821115610b4f57600080fd5b818701915087601f830112610b6357600080fd5b813581811115610b7257600080fd5b8860208260051b8501011115610b8757600080fd5b95986020929092019750949560400135945092505050565b60008060408385031215610bb257600080fd5b50508035926020909101359150565b600060208284031215610bd357600080fd5b81356001600160a01b0381168114610a1457600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610c3157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610c6057610c60610c38565b500390565b600060208284031215610c7757600080fd5b81518015158114610a1457600080fd5b60008219821115610c9a57610c9a610c38565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610cc957610cc9610c38565b506001019056fea26469706673582212208696a3bca9c7f40c97f5a918bcc54c233d7b3659ca2abe82e2f69f92d165bb6864736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:320:60",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:60",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:209:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "155:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "157:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "157:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "157:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "130:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "139:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "126:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "151:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "122:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "122:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "119:52:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:29:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "193:5:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:16:60"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "184:5:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "272:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "281:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "274:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "274:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "274:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "231:5:60"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "242:5:60"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "257:3:60",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "262:1:60",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:3:60"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "253:11:60"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "266:1:60",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:19:60"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "238:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "238:31:60"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "228:2:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "228:42:60"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "221:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:50:60"
                  },
                  "nodeType": "YulIf",
                  "src": "218:70:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "297:15:60",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "307:5:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "297:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$2806_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "75:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "86:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "98:6:60",
                "type": ""
              }
            ],
            "src": "14:304:60"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$2806_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 60,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8504:60",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:60",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:60",
                "type": ""
              }
            ],
            "src": "14:180:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:76:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:60"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:25:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:25:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:60",
                "type": ""
              }
            ],
            "src": "199:177:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "476:92:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "486:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "498:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "494:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "486:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "528:9:60"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "553:6:60"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "546:6:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "546:14:60"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "539:6:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:22:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "521:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:41:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:41:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "445:9:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "456:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "467:4:60",
                "type": ""
              }
            ],
            "src": "381:187:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "674:76:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "684:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "696:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "692:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "692:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "684:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "726:9:60"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "737:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:25:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "719:25:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "643:9:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "654:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "665:4:60",
                "type": ""
              }
            ],
            "src": "573:177:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "894:612:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "940:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "952:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "942:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "942:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "942:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "915:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "924:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:2:60",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "907:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "904:52:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "965:33:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "988:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "975:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:23:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "965:6:60"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:46:60",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1038:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1049:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:18:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:32:60"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1011:6:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1062:28:60",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1072:18:60",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1066:2:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1117:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1126:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1129:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1119:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1119:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1119:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1105:6:60"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1113:2:60"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1102:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:14:60"
                  },
                  "nodeType": "YulIf",
                  "src": "1099:34:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1142:32:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1156:9:60"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1167:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1152:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:22:60"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1146:2:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1222:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1231:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1234:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1224:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1224:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1224:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1201:2:60"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1205:4:60",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1197:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1197:13:60"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1212:7:60"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:27:60"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1186:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:35:60"
                  },
                  "nodeType": "YulIf",
                  "src": "1183:55:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1247:30:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1274:2:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1261:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:16:60"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1251:6:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1304:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1313:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1316:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1306:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1306:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1292:6:60"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1300:2:60"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1289:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:14:60"
                  },
                  "nodeType": "YulIf",
                  "src": "1286:34:60"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1378:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1390:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1380:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1380:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1380:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1343:2:60"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1351:1:60",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1354:6:60"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:14:60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1339:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1339:23:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1364:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1335:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1335:32:60"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1369:7:60"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1332:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:45:60"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:65:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1403:21:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1417:2:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1421:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:11:60"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1403:6:60"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1433:16:60",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1443:6:60"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1433:6:60"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1458:42:60",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1485:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1481:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1481:18:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1468:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:32:60"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1458:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "836:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "847:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "859:6:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "867:6:60",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "875:6:60",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "883:6:60",
                "type": ""
              }
            ],
            "src": "755:751:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1598:161:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1644:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1653:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1656:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1646:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1646:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1646:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1619:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1628:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1615:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1615:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:60",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1611:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "1608:52:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1669:33:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1692:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1679:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:23:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1669:6:60"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1711:42:60",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1738:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1749:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1734:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1734:18:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1721:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1721:32:60"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1556:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1567:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1579:6:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1587:6:60",
                "type": ""
              }
            ],
            "src": "1511:248:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:102:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1887:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1883:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1875:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1932:6:60"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1948:3:60",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1953:1:60",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1944:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1944:11:60"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1957:1:60",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1940:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1940:19:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1928:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1928:32:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:51:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:51:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1834:9:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1845:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1856:4:60",
                "type": ""
              }
            ],
            "src": "1764:203:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2087:102:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2097:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2109:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2120:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2097:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2139:9:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2154:6:60"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2170:3:60",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2175:1:60",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2166:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2166:11:60"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2179:1:60",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2162:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2162:19:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:32:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2132:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:51:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2132:51:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$2806__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2056:9:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2067:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2078:4:60",
                "type": ""
              }
            ],
            "src": "1972:217:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2264:216:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2310:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2319:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2322:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2312:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2312:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2312:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2285:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2294:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2281:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2281:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2306:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2277:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "2274:52:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2335:36:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2361:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2348:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:23:60"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2339:5:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2434:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2443:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2446:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2436:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2436:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2436:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2393:5:60"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2404:5:60"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2419:3:60",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2424:1:60",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2415:3:60"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2415:11:60"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2428:1:60",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2411:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2411:19:60"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2400:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2400:31:60"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2390:2:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2390:42:60"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2383:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:50:60"
                  },
                  "nodeType": "YulIf",
                  "src": "2380:70:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:15:60",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2469:5:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2459:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2230:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2241:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2253:6:60",
                "type": ""
              }
            ],
            "src": "2194:286:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2659:182:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2676:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2687:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2669:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2669:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2669:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2710:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2721:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2706:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2726:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2699:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2699:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2749:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2745:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2745:18:60"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2765:34:60",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2738:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:62:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2738:62:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2809:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2821:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2832:2:60",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2817:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2817:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2809:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2636:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2650:4:60",
                "type": ""
              }
            ],
            "src": "2485:356:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2927:103:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2973:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2982:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2985:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2975:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2975:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2975:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2948:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2957:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2944:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2944:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2969:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2940:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2940:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "2937:52:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2998:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3014:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3008:5:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3008:16:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2998:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2893:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2904:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2916:6:60",
                "type": ""
              }
            ],
            "src": "2846:184:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3067:95:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3084:1:60",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3091:3:60",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3096:10:60",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3087:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3087:20:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3077:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:31:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3077:31:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3124:1:60",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3127:4:60",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3117:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3117:15:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3117:15:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3148:1:60",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3151:4:60",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3141:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3141:15:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3141:15:60"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3035:127:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3216:76:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3238:22:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3240:16:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3240:18:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3240:18:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3232:1:60"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3235:1:60"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3229:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3229:8:60"
                  },
                  "nodeType": "YulIf",
                  "src": "3226:34:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3269:17:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3281:1:60"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3284:1:60"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3277:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3277:9:60"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3269:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3198:1:60",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3201:1:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3207:4:60",
                "type": ""
              }
            ],
            "src": "3167:125:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3471:180:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3488:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3499:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3481:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3481:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3481:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3522:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3533:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3518:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3518:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3538:2:60",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3511:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3511:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3511:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3561:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3572:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3557:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3557:18:60"
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3577:32:60",
                        "type": "",
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3550:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3550:60:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3550:60:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3619:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3631:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3642:2:60",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3627:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3627:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3619:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3448:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3462:4:60",
                "type": ""
              }
            ],
            "src": "3297:354:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3785:145:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3795:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3807:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3818:2:60",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3803:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3803:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3795:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3837:9:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3852:6:60"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3868:3:60",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3873:1:60",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3864:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3864:11:60"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3877:1:60",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3860:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3860:19:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3848:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3848:32:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3830:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3830:51:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3830:51:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3901:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3912:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3897:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3897:18:60"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3917:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3890:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3890:34:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3890:34:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3746:9:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3757:6:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3765:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3776:4:60",
                "type": ""
              }
            ],
            "src": "3656:274:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4013:199:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4059:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4068:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4071:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4061:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4061:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4061:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4034:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4043:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4030:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4030:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4055:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4026:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4026:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "4023:52:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4084:29:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4103:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4097:5:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:16:60"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4088:5:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4166:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4175:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4178:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4168:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4168:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4168:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4135:5:60"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4156:5:60"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4149:6:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4149:13:60"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4142:6:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4142:21:60"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4132:2:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4132:32:60"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4125:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4125:40:60"
                  },
                  "nodeType": "YulIf",
                  "src": "4122:60:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4191:15:60",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4201:5:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4191:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3979:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3990:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4002:6:60",
                "type": ""
              }
            ],
            "src": "3935:277:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4346:119:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4356:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4368:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4379:2:60",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4364:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4364:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4356:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4398:9:60"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4409:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4391:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4391:25:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4391:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4436:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4447:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4432:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4432:18:60"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4452:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4425:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4425:34:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4425:34:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4307:9:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4318:6:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4326:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4337:4:60",
                "type": ""
              }
            ],
            "src": "4217:248:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4644:166:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4661:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4672:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4654:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4654:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4654:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4695:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4706:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4691:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4691:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4711:2:60",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4684:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4684:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4684:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4734:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4745:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4730:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4730:18:60"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4750:18:60",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4723:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4723:46:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4723:46:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4778:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4790:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4801:2:60",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4786:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4786:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4778:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4621:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4635:4:60",
                "type": ""
              }
            ],
            "src": "4470:340:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4989:224:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5006:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5017:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4999:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4999:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5040:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5051:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5036:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5036:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5056:2:60",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5029:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5029:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5029:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5079:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5090:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5075:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5075:18:60"
                      },
                      {
                        "hexValue": "56657374696e673a2056657374696e6720686173206265656e20636c61696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5095:34:60",
                        "type": "",
                        "value": "Vesting: Vesting has been claime"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5068:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5068:62:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5068:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5150:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5161:2:60",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5146:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5146:18:60"
                      },
                      {
                        "hexValue": "6421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5166:4:60",
                        "type": "",
                        "value": "d!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5139:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5139:32:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5139:32:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5180:27:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5192:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5203:3:60",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5188:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5188:19:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5180:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4966:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4980:4:60",
                "type": ""
              }
            ],
            "src": "4815:398:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5365:147:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5382:3:60"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5395:2:60",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5399:6:60"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5391:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5391:15:60"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5412:26:60",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "5408:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5408:31:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5387:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5387:53:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5375:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:66:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5375:66:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5461:3:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5466:2:60",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5457:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5457:12:60"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5471:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5450:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5450:28:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5450:28:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5487:19:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5498:3:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5503:2:60",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5494:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5494:12:60"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5487:3:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5333:3:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5338:6:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5346:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5357:3:60",
                "type": ""
              }
            ],
            "src": "5218:294:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5691:233:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5708:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5719:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5701:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5701:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5701:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5742:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5753:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5738:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5738:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5758:2:60",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5731:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5731:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5731:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5781:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5792:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5777:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5777:18:60"
                      },
                      {
                        "hexValue": "56657374696e673a204164647265737320686173206e6f2056657374696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5797:34:60",
                        "type": "",
                        "value": "Vesting: Address has no Vesting "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5770:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5770:62:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5770:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5852:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5863:2:60",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5848:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5848:18:60"
                      },
                      {
                        "hexValue": "616c6c6f636174696f6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5868:13:60",
                        "type": "",
                        "value": "allocation!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5841:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5841:41:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5841:41:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5891:27:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5903:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5914:3:60",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5899:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:19:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5891:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5668:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5682:4:60",
                "type": ""
              }
            ],
            "src": "5517:407:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6103:229:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6120:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6131:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6113:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6113:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6113:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6154:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6165:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6150:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6150:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6170:2:60",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6143:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6143:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6143:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6193:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6204:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6189:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6189:18:60"
                      },
                      {
                        "hexValue": "56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6209:34:60",
                        "type": "",
                        "value": "Vesting: Invalid new merkle root"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6182:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6182:62:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6182:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6264:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6275:2:60",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6260:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6260:18:60"
                      },
                      {
                        "hexValue": "2076616c756521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6280:9:60",
                        "type": "",
                        "value": " value!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6253:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6253:37:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6253:37:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6299:27:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6311:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6322:3:60",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6307:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6307:19:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6299:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6080:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6094:4:60",
                "type": ""
              }
            ],
            "src": "5929:403:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6466:175:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6476:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6488:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6499:2:60",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6484:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6484:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6476:4:60"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6511:29:60",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6529:3:60",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6534:1:60",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6525:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6525:11:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6538:1:60",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6521:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:19:60"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6515:2:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6556:9:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6571:6:60"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6579:2:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6567:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6567:15:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6549:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:34:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:34:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6603:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6614:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6599:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6599:18:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6623:6:60"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6631:2:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6619:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6619:15:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6592:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6592:43:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6592:43:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6427:9:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6438:6:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6446:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6457:4:60",
                "type": ""
              }
            ],
            "src": "6337:304:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6820:166:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6837:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6848:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6830:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6830:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6830:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6871:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6882:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6867:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6867:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6887:2:60",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6860:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6860:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6860:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6910:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6921:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6906:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6906:18:60"
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6926:18:60",
                        "type": "",
                        "value": "Nothing to fund."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6899:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6899:46:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6899:46:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6954:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6966:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6977:2:60",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6962:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6962:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6954:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6797:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6811:4:60",
                "type": ""
              }
            ],
            "src": "6646:340:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7148:218:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7158:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7170:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7181:2:60",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7166:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7166:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7158:4:60"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7193:29:60",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7211:3:60",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7216:1:60",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7207:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7207:11:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7220:1:60",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7203:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7203:19:60"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7197:2:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7238:9:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7253:6:60"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7261:2:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7249:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7249:15:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7231:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7231:34:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7231:34:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7285:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7296:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7281:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7281:18:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7305:6:60"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7313:2:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7301:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7301:15:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7274:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7274:43:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7274:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7337:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7348:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7333:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7333:18:60"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7353:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7326:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7326:34:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7326:34:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7101:9:60",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7112:6:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7120:6:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7128:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7139:4:60",
                "type": ""
              }
            ],
            "src": "6991:375:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7528:162:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7538:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7550:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7561:2:60",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7546:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7546:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7538:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7580:9:60"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7591:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7573:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7573:25:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7573:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7618:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7629:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7614:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7614:18:60"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7634:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7607:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7607:34:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7607:34:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7661:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7672:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7657:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7657:18:60"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7677:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7650:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7650:34:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7650:34:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7481:9:60",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7492:6:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7500:6:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7508:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7519:4:60",
                "type": ""
              }
            ],
            "src": "7371:319:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7869:228:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7886:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7897:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7879:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7879:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7879:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7920:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7931:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7916:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7916:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7936:2:60",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7909:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7909:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7909:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7959:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7970:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7955:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7955:18:60"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7975:34:60",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7948:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7948:62:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7948:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8030:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8041:2:60",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8026:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8026:18:60"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8046:8:60",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8019:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8019:36:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8019:36:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8064:27:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8076:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8087:3:60",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8072:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8072:19:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8064:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7846:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7860:4:60",
                "type": ""
              }
            ],
            "src": "7695:402:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8150:80:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8177:22:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8179:16:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8179:18:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8179:18:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8166:1:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8173:1:60"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8169:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8169:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8163:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8163:13:60"
                  },
                  "nodeType": "YulIf",
                  "src": "8160:39:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8208:16:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8219:1:60"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8222:1:60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8215:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8215:9:60"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8208:3:60"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8133:1:60",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8136:1:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8142:3:60",
                "type": ""
              }
            ],
            "src": "8102:128:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8267:95:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8284:1:60",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8291:3:60",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8296:10:60",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8287:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8287:20:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8277:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8277:31:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8277:31:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8324:1:60",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8327:4:60",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8317:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8317:15:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8317:15:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8348:1:60",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8351:4:60",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8341:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8341:15:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8341:15:60"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "8235:127:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8414:88:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8445:22:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8447:16:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8447:18:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8447:18:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8430:5:60"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8441:1:60",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8437:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8437:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8427:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8427:17:60"
                  },
                  "nodeType": "YulIf",
                  "src": "8424:43:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8476:20:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8487:5:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8494:1:60",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8483:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8483:13:60"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8476:3:60"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8396:5:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8406:3:60",
                "type": ""
              }
            ],
            "src": "8367:135:60"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$2806__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"amount is grater than balanace\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Vesting: Vesting has been claime\")\n        mstore(add(headStart, 96), \"d!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Vesting: Address has no Vesting \")\n        mstore(add(headStart, 96), \"allocation!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Vesting: Invalid new merkle root\")\n        mstore(add(headStart, 96), \" value!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Nothing to fund.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
      "id": 60,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "607:4508:39:-:0;;;1470:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:3;719:10:27;921:18:3;:32::i;:::-;991:5:5;981:15;;-1:-1:-1;;;;981:15:5;;;1512:11:39;:26;;-1:-1:-1;;;;;;1512:26:39;-1:-1:-1;;;;;1512:26:39;;;;;;;;;;607:4508;;2279:187:3;2352:16;2371:6;;-1:-1:-1;;;;;2387:17:3;;;-1:-1:-1;;;;;;2387:17:3;;;;;;2419:40;;2371:6;;;;;;;2419:40;;2352:16;2419:40;2342:124;2279:187;:::o;14:304:60:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:60;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:60:o;:::-;607:4508:39;;;;;;",
  "deployedSourceMap": "607:4508:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1993:159;;;;;;:::i;:::-;;:::i;:::-;;;345:25:60;;;333:2;318:18;1993:159:39;;;;;;;;3361:426;;;;;;:::i;:::-;;:::i;:::-;;;546:14:60;;539:22;521:41;;509:2;494:18;3361:426:39;381:187:60;766:29:39;;;;;;1698:119;;;:::i;1098:84:5:-;1145:4;1168:7;-1:-1:-1;;;1168:7:5;;;;1098:84;;4292:821:39;;;;;;:::i;:::-;;:::i;1677:101:3:-;;;:::i;:::-;;3857:257:39;;;;;;:::i;:::-;;:::i;1036:94:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;1036:94;;;-1:-1:-1;;;;;1928:32:60;;;1910:51;;1898:2;1883:18;1036:94:3;1764:203:60;862:24:39;;;;;-1:-1:-1;;;;;862:24:39;;;2496:490;;;:::i;1927:198:3:-;;;;;;:::i;:::-;;:::i;1993:159:39:-;2095:7;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2125:20:39::1;::::0;;;:12:::1;:20;::::0;;;;;;1993:159::o;3361:426::-;3427:4;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;3461:11:39::1;::::0;:36:::1;::::0;-1:-1:-1;;;3461:36:39;;3491:4:::1;3461:36;::::0;::::1;1910:51:60::0;3443:15:39::1;::::0;-1:-1:-1;;;;;3461:11:39::1;::::0;:21:::1;::::0;1883:18:60;;3461:36:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3443:54;;3508:17;3538:14;;3528:7;:24;;;;:::i;:::-;3508:44;;3584:7;3571:9;:20;;3563:63;;;::::0;-1:-1:-1;;;3563:63:39;;3499:2:60;3563:63:39::1;::::0;::::1;3481:21:60::0;3538:2;3518:18;;;3511:30;3577:32;3557:18;;;3550:60;3627:18;;3563:63:39::1;3297:354:60::0;3563:63:39::1;3645:11;::::0;:41:::1;::::0;-1:-1:-1;;;3645:41:39;;3666:10:::1;3645:41;::::0;::::1;3830:51:60::0;3897:18;;;3890:34;;;-1:-1:-1;;;;;3645:11:39;;::::1;::::0;:20:::1;::::0;3803:18:60;;3645:41:39::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3637:50;;;::::0;::::1;;3715:10;3703:56;3727:7:::0;3736:22:::1;:9:::0;3727:7;3736:13:::1;:22::i;:::-;3703:56;::::0;;4391:25:60;;;4447:2;4432:18;;4425:34;;;;4364:18;3703:56:39::1;;;;;;;-1:-1:-1::0;3776:4:39::1;::::0;3361:426;-1:-1:-1;;;3361:426:39:o;1698:119::-;1774:11;;:36;;-1:-1:-1;;;1774:36:39;;1804:4;1774:36;;;1910:51:60;1748:7:39;;-1:-1:-1;;;;;1774:11:39;;:21;;1883:18:60;;1774:36:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1767:43;;1698:119;:::o;4292:821::-;4432:4;1168:7:5;;-1:-1:-1;;;1168:7:5;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:5;;4672:2:60;1403:38:5;;;4654:21:60;4711:2;4691:18;;;4684:30;-1:-1:-1;;;4730:18:60;;;4723:46;4786:18;;1403:38:5;4470:340:60;1403:38:5;4470:22:39::1;::::0;;;:14:::1;:22;::::0;;;;;;;4493:10:::1;4470:34:::0;;;;;;;;::::1;;4469:35;4448:116;;;::::0;-1:-1:-1;;;4448:116:39;;5017:2:60;4448:116:39::1;::::0;::::1;4999:21:60::0;5056:2;5036:18;;;5029:30;5095:34;5075:18;;;5068:62;-1:-1:-1;;;5146:18:60;;;5139:32;5188:19;;4448:116:39::1;4815:398:60::0;4448:116:39::1;4574:18;4595:20:::0;;;:12:::1;:20;::::0;;;;;;;;4650:37;;-1:-1:-1;;4667:10:39::1;5395:2:60::0;5391:15;5387:53;4650:37:39;;::::1;5375:66:60::0;;;;5457:12;;;5450:28;;;4595:20:39;4574:18;5494:12:60;;4650:37:39::1;;;;;;;;;;;;4640:48;;;;;;4625:63;;4698:16;4717:44;4736:6;;4717:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4744:10:39;;-1:-1:-1;4756:4:39;;-1:-1:-1;4717:18:39::1;::::0;-1:-1:-1;4717:44:39:i:1;:::-;4698:63;;4779:11;4771:67;;;::::0;-1:-1:-1;;;4771:67:39;;5719:2:60;4771:67:39::1;::::0;::::1;5701:21:60::0;5758:2;5738:18;;;5731:30;5797:34;5777:18;;;5770:62;-1:-1:-1;;;5848:18:60;;;5841:41;5899:19;;4771:67:39::1;5517:407:60::0;4771:67:39::1;4883:22;::::0;;;:14:::1;:22;::::0;;;;;;;4906:10:::1;4883:34:::0;;;;;;;:41;;-1:-1:-1;;4883:41:39::1;4920:4;4883:41:::0;;::::1;::::0;;;4951:14;:27:::1;::::0;4970:7;4951:18:::1;:27::i;:::-;4934:14;:44:::0;4997:11:::1;::::0;:41:::1;::::0;-1:-1:-1;;;4997:41:39;;5018:10:::1;4997:41;::::0;::::1;3830:51:60::0;3897:18;;;3890:34;;;-1:-1:-1;;;;;4997:11:39;;::::1;::::0;:20:::1;::::0;3803:18:60;;4997:41:39::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4989:50;;;::::0;::::1;;5054:30;::::0;345:25:60;;;5064:10:39::1;::::0;5054:30:::1;::::0;333:2:60;318:18;5054:30:39::1;;;;;;;-1:-1:-1::0;5102:4:39::1;::::0;4292:821;-1:-1:-1;;;;;;;4292:821:39:o;1677:101:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;1741:30:::1;1768:1;1741:18;:30::i;:::-;1677:101::o:0;3857:257:39:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;3967:22:39;3946:108:::1;;;::::0;-1:-1:-1;;;3946:108:39;;6131:2:60;3946:108:39::1;::::0;::::1;6113:21:60::0;6170:2;6150:18;;;6143:30;6209:34;6189:18;;;6182:62;-1:-1:-1;;;6260:18:60;;;6253:37;6307:19;;3946:108:39::1;5929:403:60::0;3946:108:39::1;4070:20;::::0;;;:12:::1;:20;::::0;;;;:37;3857:257::o;2496:490::-;2540:4;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;2614:11:39::1;::::0;:48:::1;::::0;-1:-1:-1;;;2614:48:39;;2636:10:::1;2614:48;::::0;::::1;6549:34:60::0;2656:4:39::1;6599:18:60::0;;;6592:43;2594:17:39::1;::::0;-1:-1:-1;;;;;2614:11:39::1;::::0;:21:::1;::::0;6484:18:60;;2614:48:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2594:68;;2692:1;2680:9;:13;2672:42;;;::::0;-1:-1:-1;;;2672:42:39;;6848:2:60;2672:42:39::1;::::0;::::1;6830:21:60::0;6887:2;6867:18;;;6860:30;-1:-1:-1;;;6906:18:60;;;6899:46;6962:18;;2672:42:39::1;6646:340:60::0;2672:42:39::1;2764:15;2782:19;:17;:19::i;:::-;2820:11;::::0;:62:::1;::::0;-1:-1:-1;;;2820:62:39;;2845:10:::1;2820:62;::::0;::::1;7231:34:60::0;2865:4:39::1;7281:18:60::0;;;7274:43;7333:18;;;7326:34;;;2764:37:39;;-1:-1:-1;;;;;;2820:11:39::1;::::0;:24:::1;::::0;7166:18:60;;2820:62:39::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2812:71;;;::::0;::::1;;2906:10;2899:59;2918:9:::0;2929:7;2938:19:::1;:17;:19::i;:::-;2899:59;::::0;;7573:25:60;;;7629:2;7614:18;;7607:34;;;;7657:18;;;7650:34;7561:2;7546:18;2899:59:39::1;;;;;;;2975:4;2968:11;;;;2496:490:::0;:::o;1927:198:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2015:22:3;::::1;2007:73;;;::::0;-1:-1:-1;;;2007:73:3;;7897:2:60;2007:73:3::1;::::0;::::1;7879:21:60::0;7936:2;7916:18;;;7909:30;7975:34;7955:18;;;7948:62;-1:-1:-1;;;8026:18:60;;;8019:36;8072:19;;2007:73:3::1;7695:402:60::0;2007:73:3::1;2090:28;2109:8;2090:18;:28::i;:::-;1927:198:::0;:::o;3108:96:37:-;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:37:o;862:184:31:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:31:o;2741:96:37:-;2799:7;2825:5;2829:1;2825;:5;:::i;2279:187:3:-;2352:16;2371:6;;-1:-1:-1;;;;;2387:17:3;;;-1:-1:-1;;;;;;2387:17:3;;;;;;2419:40;;2371:6;;;;;;;2419:40;;2352:16;2419:40;2342:124;2279:187;:::o;1398:662:31:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:31;;;;:::i;:::-;;;;1537:488;;;-1:-1:-1;2041:12:31;1398:662;-1:-1:-1;;;1398:662:31:o;14:180:60:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:60;;14:180;-1:-1:-1;14:180:60:o;755:751::-;859:6;867;875;883;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;988:9;975:23;965:33;;1049:2;1038:9;1034:18;1021:32;1072:18;1113:2;1105:6;1102:14;1099:34;;;1129:1;1126;1119:12;1099:34;1167:6;1156:9;1152:22;1142:32;;1212:7;1205:4;1201:2;1197:13;1193:27;1183:55;;1234:1;1231;1224:12;1183:55;1274:2;1261:16;1300:2;1292:6;1289:14;1286:34;;;1316:1;1313;1306:12;1286:34;1369:7;1364:2;1354:6;1351:1;1347:14;1343:2;1339:23;1335:32;1332:45;1329:65;;;1390:1;1387;1380:12;1329:65;755:751;;1421:2;1413:11;;;;;-1:-1:-1;1443:6:60;;1496:2;1481:18;1468:32;;-1:-1:-1;755:751:60;-1:-1:-1;;;755:751:60:o;1511:248::-;1579:6;1587;1640:2;1628:9;1619:7;1615:23;1611:32;1608:52;;;1656:1;1653;1646:12;1608:52;-1:-1:-1;;1679:23:60;;;1749:2;1734:18;;;1721:32;;-1:-1:-1;1511:248:60:o;2194:286::-;2253:6;2306:2;2294:9;2285:7;2281:23;2277:32;2274:52;;;2322:1;2319;2312:12;2274:52;2348:23;;-1:-1:-1;;;;;2400:31:60;;2390:42;;2380:70;;2446:1;2443;2436:12;2485:356;2687:2;2669:21;;;2706:18;;;2699:30;2765:34;2760:2;2745:18;;2738:62;2832:2;2817:18;;2485:356::o;2846:184::-;2916:6;2969:2;2957:9;2948:7;2944:23;2940:32;2937:52;;;2985:1;2982;2975:12;2937:52;-1:-1:-1;3008:16:60;;2846:184;-1:-1:-1;2846:184:60:o;3035:127::-;3096:10;3091:3;3087:20;3084:1;3077:31;3127:4;3124:1;3117:15;3151:4;3148:1;3141:15;3167:125;3207:4;3235:1;3232;3229:8;3226:34;;;3240:18;;:::i;:::-;-1:-1:-1;3277:9:60;;3167:125::o;3935:277::-;4002:6;4055:2;4043:9;4034:7;4030:23;4026:32;4023:52;;;4071:1;4068;4061:12;4023:52;4103:9;4097:16;4156:5;4149:13;4142:21;4135:5;4132:32;4122:60;;4178:1;4175;4168:12;8102:128;8142:3;8173:1;8169:6;8166:1;8163:13;8160:39;;;8179:18;;:::i;:::-;-1:-1:-1;8215:9:60;;8102:128::o;8235:127::-;8296:10;8291:3;8287:20;8284:1;8277:31;8327:4;8324:1;8317:15;8351:4;8348:1;8341:15;8367:135;8406:3;-1:-1:-1;;8427:17:60;;8424:43;;;8447:18;;:::i;:::-;-1:-1:-1;8494:1:60;8483:13;;8367:135::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\n\n/**\n * @title Vesting\n * @dev A token holder contract that can release its token balance gradually like a\n * typical vesting scheme, vesting period. Optionally revocable by the\n * creator.\n */\ncontract VestingBase is Ownable, Pausable {\n    using SafeMath for uint256;\n\n    ///@notice The sum total amount of tokens withdrawn from all allocations.\n    uint256 public totalWithdrawn;\n\n    ///@notice The ERC20 contract of the coin being vested.\n    ERC20 public vestingCoin;\n\n    mapping(uint256 => mapping(address => bool))  vestingClaimed;\n    mapping(uint256 => bytes32) private RootToRounds;\n   \n\n    ///Events;\n    event Funded(\n        address indexed _funder,\n        uint256 _amount,\n        uint256 _previousCap,\n        uint256 _newCap\n    );\n    event FundRemoved(\n        address indexed _address,\n        uint256 _amount,\n        uint256 _remainingInPool\n    );\n    event Withdrawn(address indexed _address, uint256 _amount);\n\n    ///@notice Constructs this contract\n    ///@param _vestingCoin The ERC20 contract of the coin being vested.\n\n    constructor(ERC20 _vestingCoin) {\n        vestingCoin = _vestingCoin;\n    }\n\n    ///@notice The Vesting Token balance of this smart contract.\n    ///@return Returns the closing balance of vesting coin held by this contract.\n    function getAvailableFunds() public view returns (uint256) {\n        return vestingCoin.balanceOf(address(this));\n    }\n\n    ///@notice Gets the markle tree of each vesting Rounds.\n    ///@param _round The round of which markleTree to be viewed.\n    ///@return Returns Total vested balance.\n    function getMerkleRoot(uint256 _round)\n        public\n        view\n        onlyOwner\n        returns (bytes32)\n    {\n        return RootToRounds[_round];\n    }\n\n    ///@notice Enables this vesting contract to receive the ERC20 (vesting coin).\n    ///Before calling this function please approve your desired amount of the coin\n    ///for this smart contract address.\n    ///Please note that this action is restricted to administrators only.\n    ///@return Returns true if the funding was successful.\n    function fund() external onlyOwner returns (bool) {\n        ///Check the funds available.\n        uint256 allowance = vestingCoin.allowance(msg.sender, address(this));\n        require(allowance > 0, \"Nothing to fund.\");\n\n        ///Get the current allocation.\n        uint256 current = getAvailableFunds();\n\n        require(vestingCoin.transferFrom(msg.sender, address(this), allowance));\n\n        emit Funded(msg.sender, allowance, current, getAvailableFunds());\n        return true;\n    }\n\n    ///@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n    ///Please note that this action is restricted to administrators only\n    ///and you may only withdraw amounts above the sum total allocation balances.\n    ///@param _amount The amount desired to withdraw.\n    ///@return Returns true if the withdrawal was successful.\n    function removeFunds(uint256 _amount) external onlyOwner returns (bool) {\n        uint256 balance = vestingCoin.balanceOf(address(this));\n\n        uint256 available = balance - totalWithdrawn;\n\n        require(available >= _amount, \"amount is grater than balanace\");\n\n        require(vestingCoin.transfer(msg.sender, _amount));\n\n        emit FundRemoved(msg.sender, _amount, available.sub(_amount));\n        return true;\n    }\n\n    ///@notice This action enables admin to set newMarkelRoot.\n\n    function setMerkleRoot(bytes32 _newMerkleRoot, uint _round) external onlyOwner {\n        require(\n            _newMerkleRoot != 0x00,\n            \"Vesting: Invalid new merkle root value!\"\n        );\n\n    \n        RootToRounds[_round] = _newMerkleRoot;\n    }\n\n    ///@notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n    ///@param _amount The amount in vesting coin desired to withdraw.\n    function withdraw(\n        uint256 _amount,\n        bytes32[] calldata _proof,\n        uint256 _round\n    ) external whenNotPaused returns (bool) {\n        require(\n            !vestingClaimed[_round][msg.sender],\n            \"Vesting: Vesting has been claimed!\"\n        );\n        bytes32 merkleRoot = RootToRounds[_round];\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender, _amount));\n        bool isValidLeaf = MerkleProof.verify(_proof, merkleRoot, leaf);\n        require(isValidLeaf, \"Vesting: Address has no Vesting allocation!\");\n\n        // Set address to claimed\n        vestingClaimed[_round][msg.sender] = true;\n        totalWithdrawn = totalWithdrawn.add(_amount);\n\n        require(vestingCoin.transfer(msg.sender, _amount));\n        emit Withdrawn(msg.sender, _amount);\n\n        return true;\n    }\n}",
  "sourcePath": "C:\\Users\\user\\Desktop\\alpsfinance-smart-contracts\\contracts\\Vesting\\VestingBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/Vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        5297
      ],
      "ERC20": [
        2806
      ],
      "IERC20": [
        2884
      ],
      "IERC20Metadata": [
        3590
      ],
      "MerkleProof": [
        6074
      ],
      "Ownable": [
        532
      ],
      "Pausable": [
        702
      ],
      "SafeMath": [
        7057
      ],
      "VestingBase": [
        7420
      ]
    },
    "id": 7421,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7092,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:39"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7093,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 2885,
        "src": "63:56:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7094,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 7058,
        "src": "120:57:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 7095,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 2807,
        "src": "178:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7096,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 703,
        "src": "234:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7097,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 533,
        "src": "290:52:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 7098,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 6075,
        "src": "343:68:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7100,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "631:7:39"
            },
            "id": 7101,
            "nodeType": "InheritanceSpecifier",
            "src": "631:7:39"
          },
          {
            "baseName": {
              "id": 7102,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 702,
              "src": "640:8:39"
            },
            "id": 7103,
            "nodeType": "InheritanceSpecifier",
            "src": "640:8:39"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7099,
          "nodeType": "StructuredDocumentation",
          "src": "414:192:39",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 7420,
        "linearizedBaseContracts": [
          7420,
          702,
          532,
          5297
        ],
        "name": "VestingBase",
        "nameLocation": "616:11:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7106,
            "libraryName": {
              "id": 7104,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "661:8:39"
            },
            "nodeType": "UsingForDirective",
            "src": "655:27:39",
            "typeName": {
              "id": 7105,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "674:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 7107,
              "nodeType": "StructuredDocumentation",
              "src": "688:73:39",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 7109,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "781:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "766:29:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "766:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7110,
              "nodeType": "StructuredDocumentation",
              "src": "802:55:39",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 7113,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "875:11:39",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "862:24:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2806",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 7112,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7111,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2806,
                "src": "862:5:39"
              },
              "referencedDeclaration": 2806,
              "src": "862:5:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2806",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7119,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "939:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "893:60:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 7118,
              "keyType": {
                "id": 7114,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "901:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "893:44:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 7117,
                "keyType": {
                  "id": 7115,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "912:24:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 7116,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "931:4:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7123,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "995:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "959:48:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 7122,
              "keyType": {
                "id": 7120,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "967:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "959:27:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 7121,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "978:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7124,
              "nodeType": "StructuredDocumentation",
              "src": "1018:10:39",
              "text": "Events;"
            },
            "id": 7134,
            "name": "Funded",
            "nameLocation": "1039:6:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7126,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_funder",
                  "nameLocation": "1071:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1055:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7128,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1096:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1088:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_previousCap",
                  "nameLocation": "1121:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1113:20:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newCap",
                  "nameLocation": "1151:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1143:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:119:39"
            },
            "src": "1033:132:39"
          },
          {
            "anonymous": false,
            "id": 7142,
            "name": "FundRemoved",
            "nameLocation": "1176:11:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7136,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1213:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7142,
                  "src": "1197:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1239:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7142,
                  "src": "1231:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_remainingInPool",
                  "nameLocation": "1264:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7142,
                  "src": "1256:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:99:39"
            },
            "src": "1170:117:39"
          },
          {
            "anonymous": false,
            "id": 7148,
            "name": "Withdrawn",
            "nameLocation": "1298:9:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7144,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1324:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7148,
                  "src": "1308:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1342:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7148,
                  "src": "1334:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1307:43:39"
            },
            "src": "1292:59:39"
          },
          {
            "body": {
              "id": 7159,
              "nodeType": "Block",
              "src": "1502:43:39",
              "statements": [
                {
                  "expression": {
                    "id": 7157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7155,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7113,
                      "src": "1512:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7156,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7152,
                      "src": "1526:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1512:26:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 7158,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:26:39"
                }
              ]
            },
            "documentation": {
              "id": 7149,
              "nodeType": "StructuredDocumentation",
              "src": "1357:108:39",
              "text": "@notice Constructs this contract\n@param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 7160,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7152,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1488:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7160,
                  "src": "1482:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2806",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7151,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7150,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2806,
                      "src": "1482:5:39"
                    },
                    "referencedDeclaration": 2806,
                    "src": "1482:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:20:39"
            },
            "returnParameters": {
              "id": 7154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:39"
            },
            "scope": 7420,
            "src": "1470:75:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7174,
              "nodeType": "Block",
              "src": "1757:60:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7170,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1804:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1796:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1796:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7166,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "1774:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "1774:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7165,
                  "id": 7173,
                  "nodeType": "Return",
                  "src": "1767:43:39"
                }
              ]
            },
            "documentation": {
              "id": 7161,
              "nodeType": "StructuredDocumentation",
              "src": "1551:142:39",
              "text": "@notice The Vesting Token balance of this smart contract.\n@return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 7175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1707:17:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1724:2:39"
            },
            "returnParameters": {
              "id": 7165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7175,
                  "src": "1748:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1748:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1747:9:39"
            },
            "scope": 7420,
            "src": "1698:119:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7189,
              "nodeType": "Block",
              "src": "2108:44:39",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7185,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7123,
                      "src": "2125:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7187,
                    "indexExpression": {
                      "id": 7186,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7178,
                      "src": "2138:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2125:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7184,
                  "id": 7188,
                  "nodeType": "Return",
                  "src": "2118:27:39"
                }
              ]
            },
            "documentation": {
              "id": 7176,
              "nodeType": "StructuredDocumentation",
              "src": "1823:165:39",
              "text": "@notice Gets the markle tree of each vesting Rounds.\n@param _round The round of which markleTree to be viewed.\n@return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 7190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7180,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2068:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2068:9:39"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "2002:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7178,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2024:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7190,
                  "src": "2016:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2016:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2015:16:39"
            },
            "returnParameters": {
              "id": 7184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7190,
                  "src": "2095:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7182,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2095:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:9:39"
            },
            "scope": 7420,
            "src": "1993:159:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7248,
              "nodeType": "Block",
              "src": "2546:440:39",
              "statements": [
                {
                  "assignments": [
                    7200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7200,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "2602:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7248,
                      "src": "2594:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2594:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check the funds available.",
                  "id": 7210,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2636:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2636:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2656:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2648:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2648:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2648:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7201,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "2614:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2360,
                      "src": "2614:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 7209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2614:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2594:68:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7212,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7200,
                          "src": "2680:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2692:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2680:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "id": 7215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2695:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        },
                        "value": "Nothing to fund."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        }
                      ],
                      "id": 7211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2672:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2672:42:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7217,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:42:39"
                },
                {
                  "assignments": [
                    7220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7220,
                      "mutability": "mutable",
                      "name": "current",
                      "nameLocation": "2772:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7248,
                      "src": "2764:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2764:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the current allocation.",
                  "id": 7223,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7221,
                      "name": "getAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7175,
                      "src": "2782:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:19:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2764:37:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7227,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2845:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2845:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 7231,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2865:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestingBase_$7420",
                                  "typeString": "contract VestingBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VestingBase_$7420",
                                  "typeString": "contract VestingBase"
                                }
                              ],
                              "id": 7230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2857:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7229,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2857:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2857:13:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7233,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7200,
                            "src": "2872:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7225,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "2820:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2418,
                          "src": "2820:24:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2820:62:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2812:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:71:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7236,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:71:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2906:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2906:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7240,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7200,
                        "src": "2918:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7241,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7220,
                        "src": "2929:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7242,
                          "name": "getAvailableFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7175,
                          "src": "2938:17:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 7243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2938:19:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7237,
                      "name": "Funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7134,
                      "src": "2899:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:59:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7245,
                  "nodeType": "EmitStatement",
                  "src": "2894:64:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2975:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7197,
                  "id": 7247,
                  "nodeType": "Return",
                  "src": "2968:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7191,
              "nodeType": "StructuredDocumentation",
              "src": "2158:333:39",
              "text": "@notice Enables this vesting contract to receive the ERC20 (vesting coin).\nBefore calling this function please approve your desired amount of the coin\nfor this smart contract address.\nPlease note that this action is restricted to administrators only.\n@return Returns true if the funding was successful."
            },
            "functionSelector": "b60d4288",
            "id": 7249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7193,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2521:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2521:9:39"
              }
            ],
            "name": "fund",
            "nameLocation": "2505:4:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2509:2:39"
            },
            "returnParameters": {
              "id": 7197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7249,
                  "src": "2540:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2539:6:39"
            },
            "scope": 7420,
            "src": "2496:490:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7303,
              "nodeType": "Block",
              "src": "3433:354:39",
              "statements": [
                {
                  "assignments": [
                    7260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7260,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3451:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7303,
                      "src": "3443:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3443:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7268,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7265,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3491:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3483:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3483:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3483:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7261,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "3461:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "3461:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3443:54:39"
                },
                {
                  "assignments": [
                    7270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7270,
                      "mutability": "mutable",
                      "name": "available",
                      "nameLocation": "3516:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7303,
                      "src": "3508:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7269,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3508:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7274,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7271,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7260,
                      "src": "3528:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 7272,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "3538:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3528:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3508:44:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7276,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7270,
                          "src": "3571:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7277,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7252,
                          "src": "3584:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3571:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 7279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3593:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 7275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3563:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:63:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7281,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:63:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7285,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3666:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3666:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7287,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7252,
                            "src": "3678:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7283,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "3645:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "3645:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3645:41:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3637:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3637:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7290,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:50:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7292,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3715:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3715:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7294,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7252,
                        "src": "3727:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7297,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7252,
                            "src": "3750:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7295,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7270,
                            "src": "3736:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6936,
                          "src": "3736:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3736:22:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7291,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7142,
                      "src": "3703:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 7299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3703:56:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7300,
                  "nodeType": "EmitStatement",
                  "src": "3698:61:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3776:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7258,
                  "id": 7302,
                  "nodeType": "Return",
                  "src": "3769:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7250,
              "nodeType": "StructuredDocumentation",
              "src": "2992:364:39",
              "text": "@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\nPlease note that this action is restricted to administrators only\nand you may only withdraw amounts above the sum total allocation balances.\n@param _amount The amount desired to withdraw.\n@return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 7304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7254,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "3408:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3408:9:39"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "3370:11:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7252,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3390:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7304,
                  "src": "3382:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3381:17:39"
            },
            "returnParameters": {
              "id": 7258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7304,
                  "src": "3427:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7256,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3426:6:39"
            },
            "scope": 7420,
            "src": "3361:426:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7327,
              "nodeType": "Block",
              "src": "3936:178:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7315,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7307,
                          "src": "3967:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 7316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3985:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "3967:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 7318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4003:41:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be",
                          "typeString": "literal_string \"Vesting: Invalid new merkle root value!\""
                        },
                        "value": "Vesting: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be",
                          "typeString": "literal_string \"Vesting: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 7314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3946:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:108:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7320,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:108:39"
                },
                {
                  "expression": {
                    "id": 7325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7321,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7123,
                        "src": "4070:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 7323,
                      "indexExpression": {
                        "id": 7322,
                        "name": "_round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7309,
                        "src": "4083:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4070:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7324,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7307,
                      "src": "4093:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4070:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7326,
                  "nodeType": "ExpressionStatement",
                  "src": "4070:37:39"
                }
              ]
            },
            "documentation": {
              "id": 7305,
              "nodeType": "StructuredDocumentation",
              "src": "3793:59:39",
              "text": "@notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7c382d0b",
            "id": 7328,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7312,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7311,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "3926:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3926:9:39"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "3866:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7307,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "3888:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7328,
                  "src": "3880:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7306,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3880:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7309,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "3909:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7328,
                  "src": "3904:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3904:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3879:37:39"
            },
            "returnParameters": {
              "id": 7313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3936:0:39"
            },
            "scope": 7420,
            "src": "3857:257:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7418,
              "nodeType": "Block",
              "src": "4438:675:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4469:35:39",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 7344,
                              "name": "vestingClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7119,
                              "src": "4470:14:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 7346,
                            "indexExpression": {
                              "id": 7345,
                              "name": "_round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7336,
                              "src": "4485:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4470:22:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 7349,
                          "indexExpression": {
                            "expression": {
                              "id": 7347,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4493:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4493:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4470:34:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 7351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4518:36:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737",
                          "typeString": "literal_string \"Vesting: Vesting has been claimed!\""
                        },
                        "value": "Vesting: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737",
                          "typeString": "literal_string \"Vesting: Vesting has been claimed!\""
                        }
                      ],
                      "id": 7343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4448:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:116:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7353,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:116:39"
                },
                {
                  "assignments": [
                    7355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7355,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "4582:10:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7418,
                      "src": "4574:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7354,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4574:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7359,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7356,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7123,
                      "src": "4595:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7358,
                    "indexExpression": {
                      "id": 7357,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7336,
                      "src": "4608:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4595:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4574:41:39"
                },
                {
                  "assignments": [
                    7361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7361,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "4633:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7418,
                      "src": "4625:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7360,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4625:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7370,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7365,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4667:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4667:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7367,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7331,
                            "src": "4679:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7363,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4650:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4650:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4650:37:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7362,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4640:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4640:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4625:63:39"
                },
                {
                  "assignments": [
                    7372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7372,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "4703:11:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7418,
                      "src": "4698:16:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7371,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4698:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7379,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7375,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7334,
                        "src": "4736:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 7376,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7355,
                        "src": "4744:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7377,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7361,
                        "src": "4756:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 7373,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6074,
                        "src": "4717:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$6074_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 7374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6005,
                      "src": "4717:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 7378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4717:44:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4698:63:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7381,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7372,
                        "src": "4779:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 7382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4792:45:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8",
                          "typeString": "literal_string \"Vesting: Address has no Vesting allocation!\""
                        },
                        "value": "Vesting: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8",
                          "typeString": "literal_string \"Vesting: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 7380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4771:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4771:67:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7384,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:67:39"
                },
                {
                  "expression": {
                    "id": 7392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 7385,
                          "name": "vestingClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7119,
                          "src": "4883:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 7389,
                        "indexExpression": {
                          "id": 7386,
                          "name": "_round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7336,
                          "src": "4898:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4883:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7390,
                      "indexExpression": {
                        "expression": {
                          "id": 7387,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4906:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4906:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4883:34:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4920:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4883:41:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7393,
                  "nodeType": "ExpressionStatement",
                  "src": "4883:41:39"
                },
                {
                  "expression": {
                    "id": 7399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7394,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "4934:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7397,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7331,
                          "src": "4970:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7395,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7109,
                          "src": "4951:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "4951:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4951:27:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4934:44:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7400,
                  "nodeType": "ExpressionStatement",
                  "src": "4934:44:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7404,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5018:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5018:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7406,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7331,
                            "src": "5030:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7402,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "4997:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "4997:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4997:41:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4989:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4989:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7409,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:50:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7411,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5064:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5064:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7413,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7331,
                        "src": "5076:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7410,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7148,
                      "src": "5054:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5054:30:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7415,
                  "nodeType": "EmitStatement",
                  "src": "5049:35:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5102:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7342,
                  "id": 7417,
                  "nodeType": "Return",
                  "src": "5095:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7329,
              "nodeType": "StructuredDocumentation",
              "src": "4120:167:39",
              "text": "@notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n@param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 7419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7338,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 658,
                  "src": "4409:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4409:13:39"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4301:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7331,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4327:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7419,
                  "src": "4319:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4319:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7334,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "4363:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7419,
                  "src": "4344:25:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7332,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4344:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 7333,
                    "nodeType": "ArrayTypeName",
                    "src": "4344:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7336,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "4387:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7419,
                  "src": "4379:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4379:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4309:90:39"
            },
            "returnParameters": {
              "id": 7342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7341,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7419,
                  "src": "4432:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7340,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4432:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4431:6:39"
            },
            "scope": 7420,
            "src": "4292:821:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7421,
        "src": "607:4508:39",
        "usedErrors": []
      }
    ],
    "src": "37:5078:39"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        5297
      ],
      "ERC20": [
        2806
      ],
      "IERC20": [
        2884
      ],
      "IERC20Metadata": [
        3590
      ],
      "MerkleProof": [
        6074
      ],
      "Ownable": [
        532
      ],
      "Pausable": [
        702
      ],
      "SafeMath": [
        7057
      ],
      "VestingBase": [
        7420
      ]
    },
    "id": 7421,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7092,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:39"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7093,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 2885,
        "src": "63:56:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7094,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 7058,
        "src": "120:57:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 7095,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 2807,
        "src": "178:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7096,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 703,
        "src": "234:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7097,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 533,
        "src": "290:52:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 7098,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 6075,
        "src": "343:68:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7100,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "631:7:39"
            },
            "id": 7101,
            "nodeType": "InheritanceSpecifier",
            "src": "631:7:39"
          },
          {
            "baseName": {
              "id": 7102,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 702,
              "src": "640:8:39"
            },
            "id": 7103,
            "nodeType": "InheritanceSpecifier",
            "src": "640:8:39"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7099,
          "nodeType": "StructuredDocumentation",
          "src": "414:192:39",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 7420,
        "linearizedBaseContracts": [
          7420,
          702,
          532,
          5297
        ],
        "name": "VestingBase",
        "nameLocation": "616:11:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7106,
            "libraryName": {
              "id": 7104,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "661:8:39"
            },
            "nodeType": "UsingForDirective",
            "src": "655:27:39",
            "typeName": {
              "id": 7105,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "674:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 7107,
              "nodeType": "StructuredDocumentation",
              "src": "688:73:39",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 7109,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "781:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "766:29:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "766:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7110,
              "nodeType": "StructuredDocumentation",
              "src": "802:55:39",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 7113,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "875:11:39",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "862:24:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2806",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 7112,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7111,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2806,
                "src": "862:5:39"
              },
              "referencedDeclaration": 2806,
              "src": "862:5:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2806",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7119,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "939:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "893:60:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 7118,
              "keyType": {
                "id": 7114,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "901:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "893:44:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 7117,
                "keyType": {
                  "id": 7115,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:7:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "912:24:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 7116,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "931:4:39",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7123,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "995:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "959:48:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 7122,
              "keyType": {
                "id": 7120,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "967:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "959:27:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 7121,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "978:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7124,
              "nodeType": "StructuredDocumentation",
              "src": "1018:10:39",
              "text": "Events;"
            },
            "id": 7134,
            "name": "Funded",
            "nameLocation": "1039:6:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7126,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_funder",
                  "nameLocation": "1071:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1055:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7128,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1096:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1088:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_previousCap",
                  "nameLocation": "1121:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1113:20:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newCap",
                  "nameLocation": "1151:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7134,
                  "src": "1143:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:119:39"
            },
            "src": "1033:132:39"
          },
          {
            "anonymous": false,
            "id": 7142,
            "name": "FundRemoved",
            "nameLocation": "1176:11:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7136,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1213:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7142,
                  "src": "1197:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1239:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7142,
                  "src": "1231:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_remainingInPool",
                  "nameLocation": "1264:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7142,
                  "src": "1256:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:99:39"
            },
            "src": "1170:117:39"
          },
          {
            "anonymous": false,
            "id": 7148,
            "name": "Withdrawn",
            "nameLocation": "1298:9:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7144,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1324:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7148,
                  "src": "1308:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1342:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7148,
                  "src": "1334:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1307:43:39"
            },
            "src": "1292:59:39"
          },
          {
            "body": {
              "id": 7159,
              "nodeType": "Block",
              "src": "1502:43:39",
              "statements": [
                {
                  "expression": {
                    "id": 7157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7155,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7113,
                      "src": "1512:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7156,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7152,
                      "src": "1526:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1512:26:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 7158,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:26:39"
                }
              ]
            },
            "documentation": {
              "id": 7149,
              "nodeType": "StructuredDocumentation",
              "src": "1357:108:39",
              "text": "@notice Constructs this contract\n@param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 7160,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7152,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1488:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7160,
                  "src": "1482:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2806",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7151,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7150,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2806,
                      "src": "1482:5:39"
                    },
                    "referencedDeclaration": 2806,
                    "src": "1482:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:20:39"
            },
            "returnParameters": {
              "id": 7154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1502:0:39"
            },
            "scope": 7420,
            "src": "1470:75:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7174,
              "nodeType": "Block",
              "src": "1757:60:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7170,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1804:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1796:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1796:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7166,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "1774:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "1774:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7165,
                  "id": 7173,
                  "nodeType": "Return",
                  "src": "1767:43:39"
                }
              ]
            },
            "documentation": {
              "id": 7161,
              "nodeType": "StructuredDocumentation",
              "src": "1551:142:39",
              "text": "@notice The Vesting Token balance of this smart contract.\n@return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 7175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1707:17:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1724:2:39"
            },
            "returnParameters": {
              "id": 7165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7175,
                  "src": "1748:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1748:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1747:9:39"
            },
            "scope": 7420,
            "src": "1698:119:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7189,
              "nodeType": "Block",
              "src": "2108:44:39",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7185,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7123,
                      "src": "2125:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7187,
                    "indexExpression": {
                      "id": 7186,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7178,
                      "src": "2138:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2125:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7184,
                  "id": 7188,
                  "nodeType": "Return",
                  "src": "2118:27:39"
                }
              ]
            },
            "documentation": {
              "id": 7176,
              "nodeType": "StructuredDocumentation",
              "src": "1823:165:39",
              "text": "@notice Gets the markle tree of each vesting Rounds.\n@param _round The round of which markleTree to be viewed.\n@return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 7190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7180,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2068:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2068:9:39"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "2002:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7178,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2024:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7190,
                  "src": "2016:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2016:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2015:16:39"
            },
            "returnParameters": {
              "id": 7184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7190,
                  "src": "2095:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7182,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2095:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:9:39"
            },
            "scope": 7420,
            "src": "1993:159:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7248,
              "nodeType": "Block",
              "src": "2546:440:39",
              "statements": [
                {
                  "assignments": [
                    7200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7200,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "2602:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7248,
                      "src": "2594:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2594:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check the funds available.",
                  "id": 7210,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2636:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2636:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2656:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2648:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2648:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2648:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7201,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "2614:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2360,
                      "src": "2614:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 7209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2614:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2594:68:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7212,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7200,
                          "src": "2680:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2692:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2680:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "id": 7215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2695:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        },
                        "value": "Nothing to fund."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        }
                      ],
                      "id": 7211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2672:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2672:42:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7217,
                  "nodeType": "ExpressionStatement",
                  "src": "2672:42:39"
                },
                {
                  "assignments": [
                    7220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7220,
                      "mutability": "mutable",
                      "name": "current",
                      "nameLocation": "2772:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7248,
                      "src": "2764:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2764:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the current allocation.",
                  "id": 7223,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7221,
                      "name": "getAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7175,
                      "src": "2782:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:19:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2764:37:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7227,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2845:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2845:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 7231,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2865:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestingBase_$7420",
                                  "typeString": "contract VestingBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VestingBase_$7420",
                                  "typeString": "contract VestingBase"
                                }
                              ],
                              "id": 7230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2857:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7229,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2857:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2857:13:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7233,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7200,
                            "src": "2872:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7225,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "2820:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2418,
                          "src": "2820:24:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2820:62:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2812:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:71:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7236,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:71:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2906:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2906:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7240,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7200,
                        "src": "2918:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7241,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7220,
                        "src": "2929:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7242,
                          "name": "getAvailableFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7175,
                          "src": "2938:17:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 7243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2938:19:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7237,
                      "name": "Funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7134,
                      "src": "2899:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:59:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7245,
                  "nodeType": "EmitStatement",
                  "src": "2894:64:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2975:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7197,
                  "id": 7247,
                  "nodeType": "Return",
                  "src": "2968:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7191,
              "nodeType": "StructuredDocumentation",
              "src": "2158:333:39",
              "text": "@notice Enables this vesting contract to receive the ERC20 (vesting coin).\nBefore calling this function please approve your desired amount of the coin\nfor this smart contract address.\nPlease note that this action is restricted to administrators only.\n@return Returns true if the funding was successful."
            },
            "functionSelector": "b60d4288",
            "id": 7249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7193,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2521:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2521:9:39"
              }
            ],
            "name": "fund",
            "nameLocation": "2505:4:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2509:2:39"
            },
            "returnParameters": {
              "id": 7197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7249,
                  "src": "2540:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2539:6:39"
            },
            "scope": 7420,
            "src": "2496:490:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7303,
              "nodeType": "Block",
              "src": "3433:354:39",
              "statements": [
                {
                  "assignments": [
                    7260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7260,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3451:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7303,
                      "src": "3443:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3443:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7268,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7265,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3491:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7420",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3483:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3483:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3483:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7261,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "3461:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "3461:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3443:54:39"
                },
                {
                  "assignments": [
                    7270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7270,
                      "mutability": "mutable",
                      "name": "available",
                      "nameLocation": "3516:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7303,
                      "src": "3508:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7269,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3508:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7274,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7271,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7260,
                      "src": "3528:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 7272,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "3538:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3528:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3508:44:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7276,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7270,
                          "src": "3571:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7277,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7252,
                          "src": "3584:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3571:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 7279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3593:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 7275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3563:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:63:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7281,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:63:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7285,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3666:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3666:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7287,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7252,
                            "src": "3678:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7283,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "3645:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "3645:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3645:41:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3637:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3637:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7290,
                  "nodeType": "ExpressionStatement",
                  "src": "3637:50:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7292,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3715:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3715:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7294,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7252,
                        "src": "3727:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7297,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7252,
                            "src": "3750:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7295,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7270,
                            "src": "3736:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6936,
                          "src": "3736:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3736:22:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7291,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7142,
                      "src": "3703:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 7299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3703:56:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7300,
                  "nodeType": "EmitStatement",
                  "src": "3698:61:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3776:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7258,
                  "id": 7302,
                  "nodeType": "Return",
                  "src": "3769:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7250,
              "nodeType": "StructuredDocumentation",
              "src": "2992:364:39",
              "text": "@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\nPlease note that this action is restricted to administrators only\nand you may only withdraw amounts above the sum total allocation balances.\n@param _amount The amount desired to withdraw.\n@return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 7304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7254,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "3408:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3408:9:39"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "3370:11:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7252,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3390:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7304,
                  "src": "3382:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3381:17:39"
            },
            "returnParameters": {
              "id": 7258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7304,
                  "src": "3427:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7256,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3426:6:39"
            },
            "scope": 7420,
            "src": "3361:426:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7327,
              "nodeType": "Block",
              "src": "3936:178:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7315,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7307,
                          "src": "3967:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 7316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3985:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "3967:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 7318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4003:41:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be",
                          "typeString": "literal_string \"Vesting: Invalid new merkle root value!\""
                        },
                        "value": "Vesting: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be",
                          "typeString": "literal_string \"Vesting: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 7314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3946:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:108:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7320,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:108:39"
                },
                {
                  "expression": {
                    "id": 7325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7321,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7123,
                        "src": "4070:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 7323,
                      "indexExpression": {
                        "id": 7322,
                        "name": "_round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7309,
                        "src": "4083:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4070:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7324,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7307,
                      "src": "4093:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4070:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7326,
                  "nodeType": "ExpressionStatement",
                  "src": "4070:37:39"
                }
              ]
            },
            "documentation": {
              "id": 7305,
              "nodeType": "StructuredDocumentation",
              "src": "3793:59:39",
              "text": "@notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7c382d0b",
            "id": 7328,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7312,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7311,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "3926:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3926:9:39"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "3866:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7307,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "3888:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7328,
                  "src": "3880:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7306,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3880:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7309,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "3909:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7328,
                  "src": "3904:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3904:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3879:37:39"
            },
            "returnParameters": {
              "id": 7313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3936:0:39"
            },
            "scope": 7420,
            "src": "3857:257:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7418,
              "nodeType": "Block",
              "src": "4438:675:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4469:35:39",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 7344,
                              "name": "vestingClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7119,
                              "src": "4470:14:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 7346,
                            "indexExpression": {
                              "id": 7345,
                              "name": "_round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7336,
                              "src": "4485:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4470:22:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 7349,
                          "indexExpression": {
                            "expression": {
                              "id": 7347,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4493:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4493:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4470:34:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 7351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4518:36:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737",
                          "typeString": "literal_string \"Vesting: Vesting has been claimed!\""
                        },
                        "value": "Vesting: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737",
                          "typeString": "literal_string \"Vesting: Vesting has been claimed!\""
                        }
                      ],
                      "id": 7343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4448:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:116:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7353,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:116:39"
                },
                {
                  "assignments": [
                    7355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7355,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "4582:10:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7418,
                      "src": "4574:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7354,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4574:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7359,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7356,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7123,
                      "src": "4595:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7358,
                    "indexExpression": {
                      "id": 7357,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7336,
                      "src": "4608:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4595:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4574:41:39"
                },
                {
                  "assignments": [
                    7361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7361,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "4633:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7418,
                      "src": "4625:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7360,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4625:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7370,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7365,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4667:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4667:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7367,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7331,
                            "src": "4679:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7363,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4650:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4650:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4650:37:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7362,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4640:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4640:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4625:63:39"
                },
                {
                  "assignments": [
                    7372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7372,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "4703:11:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7418,
                      "src": "4698:16:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7371,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4698:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7379,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7375,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7334,
                        "src": "4736:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 7376,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7355,
                        "src": "4744:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7377,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7361,
                        "src": "4756:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 7373,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6074,
                        "src": "4717:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$6074_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 7374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6005,
                      "src": "4717:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 7378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4717:44:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4698:63:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7381,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7372,
                        "src": "4779:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 7382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4792:45:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8",
                          "typeString": "literal_string \"Vesting: Address has no Vesting allocation!\""
                        },
                        "value": "Vesting: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8",
                          "typeString": "literal_string \"Vesting: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 7380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4771:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4771:67:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7384,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:67:39"
                },
                {
                  "expression": {
                    "id": 7392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 7385,
                          "name": "vestingClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7119,
                          "src": "4883:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 7389,
                        "indexExpression": {
                          "id": 7386,
                          "name": "_round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7336,
                          "src": "4898:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4883:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7390,
                      "indexExpression": {
                        "expression": {
                          "id": 7387,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4906:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4906:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4883:34:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4920:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4883:41:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7393,
                  "nodeType": "ExpressionStatement",
                  "src": "4883:41:39"
                },
                {
                  "expression": {
                    "id": 7399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7394,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "4934:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7397,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7331,
                          "src": "4970:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7395,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7109,
                          "src": "4951:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "4951:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4951:27:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4934:44:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7400,
                  "nodeType": "ExpressionStatement",
                  "src": "4934:44:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7404,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5018:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5018:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7406,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7331,
                            "src": "5030:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7402,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "4997:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "4997:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4997:41:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4989:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4989:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7409,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:50:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7411,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5064:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5064:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7413,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7331,
                        "src": "5076:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7410,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7148,
                      "src": "5054:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5054:30:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7415,
                  "nodeType": "EmitStatement",
                  "src": "5049:35:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5102:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7342,
                  "id": 7417,
                  "nodeType": "Return",
                  "src": "5095:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7329,
              "nodeType": "StructuredDocumentation",
              "src": "4120:167:39",
              "text": "@notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n@param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 7419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7338,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 658,
                  "src": "4409:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4409:13:39"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4301:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7331,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4327:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7419,
                  "src": "4319:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4319:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7334,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "4363:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7419,
                  "src": "4344:25:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7332,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4344:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 7333,
                    "nodeType": "ArrayTypeName",
                    "src": "4344:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7336,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "4387:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7419,
                  "src": "4379:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4379:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4309:90:39"
            },
            "returnParameters": {
              "id": 7342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7341,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7419,
                  "src": "4432:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7340,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4432:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4431:6:39"
            },
            "scope": 7420,
            "src": "4292:821:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7421,
        "src": "607:4508:39",
        "usedErrors": []
      }
    ],
    "src": "37:5078:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-04-03T08:37:35.175Z",
  "devdoc": {
    "details": "A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_vestingCoin": "The ERC20 contract of the coin being vested."
        }
      },
      "fund()": {
        "returns": {
          "_0": "Returns true if the funding was successful."
        }
      },
      "getAvailableFunds()": {
        "returns": {
          "_0": "Returns the closing balance of vesting coin held by this contract."
        }
      },
      "getMerkleRoot(uint256)": {
        "params": {
          "_round": "The round of which markleTree to be viewed."
        },
        "returns": {
          "_0": "Returns Total vested balance."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeFunds(uint256)": {
        "params": {
          "_amount": "The amount desired to withdraw."
        },
        "returns": {
          "_0": "Returns true if the withdrawal was successful."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "params": {
          "_amount": "The amount in vesting coin desired to withdraw."
        }
      }
    },
    "title": "Vesting",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Funded(address,uint256,uint256,uint256)": {
        "notice": "Events;"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructs this contract"
      },
      "fund()": {
        "notice": "Enables this vesting contract to receive the ERC20 (vesting coin). Before calling this function please approve your desired amount of the coin for this smart contract address. Please note that this action is restricted to administrators only."
      },
      "getAvailableFunds()": {
        "notice": "The Vesting Token balance of this smart contract."
      },
      "getMerkleRoot(uint256)": {
        "notice": "Gets the markle tree of each vesting Rounds."
      },
      "removeFunds(uint256)": {
        "notice": "Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances."
      },
      "setMerkleRoot(bytes32,uint256)": {
        "notice": "This action enables admin to set newMarkelRoot."
      },
      "totalWithdrawn()": {
        "notice": "The sum total amount of tokens withdrawn from all allocations."
      },
      "vestingCoin()": {
        "notice": "The ERC20 contract of the coin being vested."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "notice": "This action enables the beneficiaries to withdraw a desired amount from this contract."
      }
    },
    "version": 1
  }
}