{
  "contractName": "VestingBase",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_vestingCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "FundRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCoin",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "removeFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_newMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_vestingCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"FundRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAvailableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCoin\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vestingCoin\":\"The ERC20 contract of the coin being vested.\"}},\"getAvailableFunds()\":{\"returns\":{\"_0\":\"Returns the closing balance of vesting coin held by this contract.\"}},\"getMerkleRoot(uint256)\":{\"params\":{\"_round\":\"The round of which markleTree to be viewed.\"},\"returns\":{\"_0\":\"Returns Total vested balance.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeFunds(uint256)\":{\"params\":{\"_amount\":\"The amount desired to withdraw.\"},\"returns\":{\"_0\":\"Returns true if the withdrawal was successful.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"params\":{\"_amount\":\"The amount in vesting coin desired to withdraw.\"}}},\"title\":\"Vesting\",\"version\":1},\"userdoc\":{\"events\":{\"FundRemoved(address,uint256)\":{\"notice\":\"Events;\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs this contract\"},\"getAvailableFunds()\":{\"notice\":\"The Vesting Token balance of this smart contract.\"},\"getMerkleRoot(uint256)\":{\"notice\":\"Gets the markle tree of each vesting Rounds.\"},\"removeFunds(uint256)\":{\"notice\":\"Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances.\"},\"setMerkleRoot(bytes32,uint256)\":{\"notice\":\"This action enables admin to set newMarkelRoot.\"},\"totalWithdrawn()\":{\"notice\":\"The sum total amount of tokens withdrawn from all allocations.\"},\"vestingCoin()\":{\"notice\":\"The ERC20 contract of the coin being vested.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"notice\":\"This action enables the beneficiaries to withdraw a desired amount from this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vesting/VestingBase.sol\":\"VestingBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xea64fbaccbf9d8c235cf6838240ddcebb97f9fc383660289e9dff32e4fb85f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e8a1dd0eac2fa865dc9a052bee01eec31677d7bc01b5b5aa825d820f3f1b343\",\"dweb:/ipfs/QmR8WuNeoAvJhnL7msQfQwaZEkwVnNyNDUNBL3Y616ohYa\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/vesting/VestingBase.sol\":{\"keccak256\":\"0x0fb2d1a8da3516ce6a3c484ce2b1eac3379934d1ba5c12bc9be1be88e4577a0b\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9e1d8d5dde121403fd4385849961516af1879045ba57b764e338be54e057a34d\",\"dweb:/ipfs/QmQBLjyAibTNjA6Mv5yt4xTHWp6Hc1ySHvFimXzgforDAo\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610bed380380610bed83398101604081905261002f916100ba565b6100383361006a565b6000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b03929092169190911790556100ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b610af4806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636092dfcb116100715780636092dfcb1461011a578063715018a61461012d5780637c382d0b146101375780638da5cb5b1461014a578063a065b0bd1461016f578063f2fde38b1461018257600080fd5b80630aab8ba5146100ae5780632f384523146100d45780634b319713146100f75780635195bd29146101005780635c975abb14610108575b600080fd5b6100c16100bc366004610906565b610195565b6040519081526020015b60405180910390f35b6100e76100e2366004610906565b6101dc565b60405190151581526020016100cb565b6100c160015481565b6100c1610382565b600054600160a01b900460ff166100e7565b6100e761012836600461091f565b6103f4565b6101356106ac565b005b6101356101453660046109a4565b6106e2565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b600254610157906001600160a01b031681565b6101356101903660046109c6565b61077e565b600080546001600160a01b031633146101c95760405162461bcd60e51b81526004016101c0906109ef565b60405180910390fd5b5060009081526004602052604090205490565b600080546001600160a01b031633146102075760405162461bcd60e51b81526004016101c0906109ef565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610a24565b9050828110156102c65760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e616365000060448201526064016101c0565b60025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b9190610a3d565b61034457600080fd5b60405183815233907f9642d1a9c70ac2b6eaaefd51921acf997a74f91dce95ef59a462c00ca274bc809060200160405180910390a250600192915050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef9190610a24565b905090565b60008054600160a01b900460ff16156104425760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101c0565b600082815260036020908152604080832033845290915290205460ff16156104bb5760405162461bcd60e51b815260206004820152602660248201527f56657374696e67426173653a2056657374696e6720686173206265656e20636c60448201526561696d65642160d01b60648201526084016101c0565b60008281526004602090815260408083205490516bffffffffffffffffffffffff193360601b1692810192909252603482018890529190605401604051602081830303815290604052805190602001209050600061054f8787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506108199050565b9050806105b65760405162461bcd60e51b815260206004820152602f60248201527f56657374696e67426173653a204164647265737320686173206e6f205665737460448201526e696e6720616c6c6f636174696f6e2160881b60648201526084016101c0565b60008581526003602090815260408083203384529091529020805460ff19166001908117909155546105e8908961082f565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610a3d565b61066957600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146106d65760405162461bcd60e51b81526004016101c0906109ef565b6106e06000610842565b565b6000546001600160a01b0316331461070c5760405162461bcd60e51b81526004016101c0906109ef565b8161076d5760405162461bcd60e51b815260206004820152602b60248201527f56657374696e67426173653a20496e76616c6964206e6577206d65726b6c652060448201526a726f6f742076616c75652160a81b60648201526084016101c0565b600090815260046020526040902055565b6000546001600160a01b031633146107a85760405162461bcd60e51b81526004016101c0906109ef565b6001600160a01b03811661080d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c0565b61081681610842565b50565b6000826108268584610892565b14949350505050565b600061083b8284610a75565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b84518110156108fe5760008582815181106108b4576108b4610a8d565b602002602001015190508083116108da57600083815260208290526040902092506108eb565b600081815260208490526040902092505b50806108f681610aa3565b915050610897565b509392505050565b60006020828403121561091857600080fd5b5035919050565b6000806000806060858703121561093557600080fd5b84359350602085013567ffffffffffffffff8082111561095457600080fd5b818701915087601f83011261096857600080fd5b81358181111561097757600080fd5b8860208260051b850101111561098c57600080fd5b95986020929092019750949560400135945092505050565b600080604083850312156109b757600080fd5b50508035926020909101359150565b6000602082840312156109d857600080fd5b81356001600160a01b038116811461083b57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a3657600080fd5b5051919050565b600060208284031215610a4f57600080fd5b8151801515811461083b57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610a8857610a88610a5f565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ab757610ab7610a5f565b506001019056fea264697066735822122091ddded8569344523a2b7de8b57a9734272dded1bd2957855e3badd014f7390664736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80636092dfcb116100715780636092dfcb1461011a578063715018a61461012d5780637c382d0b146101375780638da5cb5b1461014a578063a065b0bd1461016f578063f2fde38b1461018257600080fd5b80630aab8ba5146100ae5780632f384523146100d45780634b319713146100f75780635195bd29146101005780635c975abb14610108575b600080fd5b6100c16100bc366004610906565b610195565b6040519081526020015b60405180910390f35b6100e76100e2366004610906565b6101dc565b60405190151581526020016100cb565b6100c160015481565b6100c1610382565b600054600160a01b900460ff166100e7565b6100e761012836600461091f565b6103f4565b6101356106ac565b005b6101356101453660046109a4565b6106e2565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b600254610157906001600160a01b031681565b6101356101903660046109c6565b61077e565b600080546001600160a01b031633146101c95760405162461bcd60e51b81526004016101c0906109ef565b60405180910390fd5b5060009081526004602052604090205490565b600080546001600160a01b031633146102075760405162461bcd60e51b81526004016101c0906109ef565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610a24565b9050828110156102c65760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e616365000060448201526064016101c0565b60025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b9190610a3d565b61034457600080fd5b60405183815233907f9642d1a9c70ac2b6eaaefd51921acf997a74f91dce95ef59a462c00ca274bc809060200160405180910390a250600192915050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef9190610a24565b905090565b60008054600160a01b900460ff16156104425760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101c0565b600082815260036020908152604080832033845290915290205460ff16156104bb5760405162461bcd60e51b815260206004820152602660248201527f56657374696e67426173653a2056657374696e6720686173206265656e20636c60448201526561696d65642160d01b60648201526084016101c0565b60008281526004602090815260408083205490516bffffffffffffffffffffffff193360601b1692810192909252603482018890529190605401604051602081830303815290604052805190602001209050600061054f8787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506108199050565b9050806105b65760405162461bcd60e51b815260206004820152602f60248201527f56657374696e67426173653a204164647265737320686173206e6f205665737460448201526e696e6720616c6c6f636174696f6e2160881b60648201526084016101c0565b60008581526003602090815260408083203384529091529020805460ff19166001908117909155546105e8908961082f565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610a3d565b61066957600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146106d65760405162461bcd60e51b81526004016101c0906109ef565b6106e06000610842565b565b6000546001600160a01b0316331461070c5760405162461bcd60e51b81526004016101c0906109ef565b8161076d5760405162461bcd60e51b815260206004820152602b60248201527f56657374696e67426173653a20496e76616c6964206e6577206d65726b6c652060448201526a726f6f742076616c75652160a81b60648201526084016101c0565b600090815260046020526040902055565b6000546001600160a01b031633146107a85760405162461bcd60e51b81526004016101c0906109ef565b6001600160a01b03811661080d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c0565b61081681610842565b50565b6000826108268584610892565b14949350505050565b600061083b8284610a75565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b84518110156108fe5760008582815181106108b4576108b4610a8d565b602002602001015190508083116108da57600083815260208290526040902092506108eb565b600081815260208490526040902092505b50806108f681610aa3565b915050610897565b509392505050565b60006020828403121561091857600080fd5b5035919050565b6000806000806060858703121561093557600080fd5b84359350602085013567ffffffffffffffff8082111561095457600080fd5b818701915087601f83011261096857600080fd5b81358181111561097757600080fd5b8860208260051b850101111561098c57600080fd5b95986020929092019750949560400135945092505050565b600080604083850312156109b757600080fd5b50508035926020909101359150565b6000602082840312156109d857600080fd5b81356001600160a01b038116811461083b57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a3657600080fd5b5051919050565b600060208284031215610a4f57600080fd5b8151801515811461083b57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610a8857610a88610a5f565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ab757610ab7610a5f565b506001019056fea264697066735822122091ddded8569344523a2b7de8b57a9734272dded1bd2957855e3badd014f7390664736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:320:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:209:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "155:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "157:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "157:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "157:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "130:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "139:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "126:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "151:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "122:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "122:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "119:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "193:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "184:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "272:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "281:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "274:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "274:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "274:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "231:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "242:5:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "257:3:54",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "262:1:54",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:3:54"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "253:11:54"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "266:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:19:54"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "238:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "238:31:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "228:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "228:42:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "221:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:50:54"
                  },
                  "nodeType": "YulIf",
                  "src": "218:70:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "297:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "307:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "297:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$2806_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "75:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "86:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "98:6:54",
                "type": ""
              }
            ],
            "src": "14:304:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$2806_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6775:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:54",
                "type": ""
              }
            ],
            "src": "14:180:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:76:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:54"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:25:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:25:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:54",
                "type": ""
              }
            ],
            "src": "199:177:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "476:92:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "486:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "498:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "494:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "486:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "528:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "553:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "546:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "546:14:54"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "539:6:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:22:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "521:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:41:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:41:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "445:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "456:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "467:4:54",
                "type": ""
              }
            ],
            "src": "381:187:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "674:76:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "684:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "696:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "692:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "692:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "684:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "726:9:54"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "737:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:25:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "719:25:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "643:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "654:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "665:4:54",
                "type": ""
              }
            ],
            "src": "573:177:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "894:612:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "940:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "952:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "942:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "942:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "942:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "915:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "924:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "907:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "904:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "965:33:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "988:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "975:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:23:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "965:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:46:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1038:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1049:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:32:54"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1011:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1062:28:54",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1072:18:54",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1066:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1117:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1126:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1129:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1119:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1119:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1119:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1105:6:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1113:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1102:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:14:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1099:34:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1142:32:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1156:9:54"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1167:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1152:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:22:54"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1146:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1222:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1231:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1234:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1224:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1224:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1224:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1201:2:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1205:4:54",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1197:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1197:13:54"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1212:7:54"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:27:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1186:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:35:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1183:55:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1247:30:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1274:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1261:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:16:54"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1251:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1304:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1313:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1316:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1306:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1306:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1292:6:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1300:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1289:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:14:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1286:34:54"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1378:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1390:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1380:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1380:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1380:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1343:2:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1351:1:54",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1354:6:54"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:14:54"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1339:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1339:23:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1364:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1335:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1335:32:54"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1369:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1332:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:45:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:65:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1403:21:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1417:2:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1421:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:11:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1403:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1433:16:54",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1443:6:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1433:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1458:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1485:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1481:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1481:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1468:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1458:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "836:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "847:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "859:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "867:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "875:6:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "883:6:54",
                "type": ""
              }
            ],
            "src": "755:751:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1598:161:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1644:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1653:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1656:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1646:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1646:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1646:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1619:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1628:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1615:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1615:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1611:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1608:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1669:33:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1692:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1679:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:23:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1669:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1711:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1738:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1749:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1734:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1734:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1721:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1721:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1556:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1567:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1579:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1587:6:54",
                "type": ""
              }
            ],
            "src": "1511:248:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:102:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1887:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1883:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1875:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1932:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1948:3:54",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1953:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1944:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1944:11:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1957:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1940:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1940:19:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1928:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1928:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:51:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1834:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1845:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1856:4:54",
                "type": ""
              }
            ],
            "src": "1764:203:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2087:102:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2097:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2109:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2120:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2097:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2139:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2154:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2170:3:54",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2175:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2166:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2166:11:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2179:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2162:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2162:19:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2132:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2132:51:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$2806__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2056:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2067:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2078:4:54",
                "type": ""
              }
            ],
            "src": "1972:217:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2264:216:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2310:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2319:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2322:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2312:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2312:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2312:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2285:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2294:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2281:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2281:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2306:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2277:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2274:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2335:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2361:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2348:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2339:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2434:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2443:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2446:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2436:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2436:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2436:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2393:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2404:5:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2419:3:54",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2424:1:54",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2415:3:54"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2415:11:54"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2428:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2411:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2411:19:54"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2400:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2400:31:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2390:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2390:42:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2383:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:50:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2380:70:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2469:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2459:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2230:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2241:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2253:6:54",
                "type": ""
              }
            ],
            "src": "2194:286:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2659:182:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2676:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2687:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2669:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2669:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2669:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2710:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2721:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2706:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2726:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2699:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2699:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2749:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2745:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2745:18:54"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2765:34:54",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2738:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2738:62:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2809:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2821:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2832:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2817:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2817:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2809:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2636:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2650:4:54",
                "type": ""
              }
            ],
            "src": "2485:356:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2927:103:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2973:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2982:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2985:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2975:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2975:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2975:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2948:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2957:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2944:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2944:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2969:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2940:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2940:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2937:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2998:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3014:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3008:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3008:16:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2998:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2893:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2904:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2916:6:54",
                "type": ""
              }
            ],
            "src": "2846:184:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3209:180:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3226:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3237:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3219:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3260:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3271:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3256:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3256:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3276:2:54",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3249:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3299:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3310:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3295:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3295:18:54"
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3315:32:54",
                        "type": "",
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3288:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:60:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3288:60:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3357:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3369:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3380:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3365:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3357:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3186:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3200:4:54",
                "type": ""
              }
            ],
            "src": "3035:354:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3523:145:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3533:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3545:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3556:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3541:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3533:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3575:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3590:6:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3606:3:54",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3611:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3602:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3602:11:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3615:1:54",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3598:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3598:19:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3586:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3586:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3568:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3568:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3568:51:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3639:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3650:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3635:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3635:18:54"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3655:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3628:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3628:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3628:34:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3484:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3495:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3503:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3514:4:54",
                "type": ""
              }
            ],
            "src": "3394:274:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3751:199:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3797:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3806:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3809:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3799:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3799:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3799:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3772:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3781:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3768:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3768:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3793:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3764:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3764:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "3761:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3822:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3841:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3835:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3835:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3826:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3904:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3913:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3916:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3906:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3906:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3906:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3873:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3894:5:54"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3887:6:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3887:13:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3880:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3880:21:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3870:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3870:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3863:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3863:40:54"
                  },
                  "nodeType": "YulIf",
                  "src": "3860:60:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3929:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3939:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3929:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3717:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3728:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3740:6:54",
                "type": ""
              }
            ],
            "src": "3673:277:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4129:166:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4146:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4157:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4139:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4139:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4139:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4180:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4191:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4176:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4176:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4196:2:54",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4169:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4169:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4169:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4219:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4230:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4215:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4215:18:54"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4235:18:54",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4208:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4208:46:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4208:46:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4263:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4275:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4286:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4271:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4263:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4106:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4120:4:54",
                "type": ""
              }
            ],
            "src": "3955:340:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4474:228:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4491:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4502:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4484:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4484:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4525:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4536:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4521:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4521:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4541:2:54",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4514:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4514:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4514:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4564:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4575:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4560:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4560:18:54"
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4580:34:54",
                        "type": "",
                        "value": "VestingBase: Vesting has been cl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4553:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4553:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4553:62:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4635:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4646:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4631:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4631:18:54"
                      },
                      {
                        "hexValue": "61696d656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4651:8:54",
                        "type": "",
                        "value": "aimed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4624:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4624:36:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4624:36:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4669:27:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4681:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4692:3:54",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4677:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:19:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4669:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4451:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4465:4:54",
                "type": ""
              }
            ],
            "src": "4300:402:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4854:147:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4871:3:54"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4884:2:54",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4888:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4880:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4880:15:54"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4901:26:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4897:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4897:31:54"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4876:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4876:53:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4864:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4864:66:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4864:66:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4950:3:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4955:2:54",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4946:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4946:12:54"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4960:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4939:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4939:28:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4939:28:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4976:19:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4987:3:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4992:2:54",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4983:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4983:12:54"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4976:3:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4822:3:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4827:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4835:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4846:3:54",
                "type": ""
              }
            ],
            "src": "4707:294:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5180:237:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5197:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5208:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5190:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5190:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5190:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5231:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5242:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5227:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5227:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5247:2:54",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5220:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5220:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5220:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5270:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5281:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5266:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5266:18:54"
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5286:34:54",
                        "type": "",
                        "value": "VestingBase: Address has no Vest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5259:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5259:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5259:62:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5341:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5352:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5337:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5337:18:54"
                      },
                      {
                        "hexValue": "696e6720616c6c6f636174696f6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5357:17:54",
                        "type": "",
                        "value": "ing allocation!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5330:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5330:45:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5330:45:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5384:27:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5396:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5407:3:54",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5392:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5392:19:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5384:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5157:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5171:4:54",
                "type": ""
              }
            ],
            "src": "5006:411:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5596:233:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5613:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5624:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5606:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5606:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5606:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5647:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5658:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5643:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5643:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5663:2:54",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5636:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5636:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5636:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5686:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5697:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5682:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5682:18:54"
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5702:34:54",
                        "type": "",
                        "value": "VestingBase: Invalid new merkle "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5675:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5675:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5675:62:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5757:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5768:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5753:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5753:18:54"
                      },
                      {
                        "hexValue": "726f6f742076616c756521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5773:13:54",
                        "type": "",
                        "value": "root value!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5746:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5746:41:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5746:41:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5796:27:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5808:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5819:3:54",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5804:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:19:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5796:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5573:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5587:4:54",
                "type": ""
              }
            ],
            "src": "5422:407:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6008:228:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6025:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6036:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6018:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6018:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6018:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6059:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6070:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6055:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6055:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6075:2:54",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6048:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6048:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6048:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6098:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6109:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6094:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6094:18:54"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6114:34:54",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6087:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6087:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6087:62:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6169:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6180:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6165:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6165:18:54"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6185:8:54",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6158:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6158:36:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6158:36:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6203:27:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6215:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6226:3:54",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6211:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6211:19:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6203:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5985:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5999:4:54",
                "type": ""
              }
            ],
            "src": "5834:402:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6273:95:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6290:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6297:3:54",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6302:10:54",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6293:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6293:20:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6283:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:31:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6283:31:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6330:1:54",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6333:4:54",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6323:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6323:15:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6323:15:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6354:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6357:4:54",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6347:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:15:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6347:15:54"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6241:127:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6421:80:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6448:22:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6450:16:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6450:18:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6450:18:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6437:1:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6444:1:54"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6440:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6440:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6434:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6434:13:54"
                  },
                  "nodeType": "YulIf",
                  "src": "6431:39:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6479:16:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6490:1:54"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6493:1:54"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6486:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:9:54"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6479:3:54"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6404:1:54",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6407:1:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6413:3:54",
                "type": ""
              }
            ],
            "src": "6373:128:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6538:95:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6555:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6562:3:54",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6567:10:54",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6558:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6558:20:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6548:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:31:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:31:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6595:1:54",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6598:4:54",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6588:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6588:15:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6588:15:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6619:1:54",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6622:4:54",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6612:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6612:15:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6612:15:54"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6506:127:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6685:88:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6716:22:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6718:16:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6718:18:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6718:18:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6701:5:54"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6712:1:54",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6708:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6708:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6698:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6698:17:54"
                  },
                  "nodeType": "YulIf",
                  "src": "6695:43:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6747:20:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6758:5:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6765:1:54",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6754:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6754:13:54"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6747:3:54"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6667:5:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6677:3:54",
                "type": ""
              }
            ],
            "src": "6638:135:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$2806__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"amount is grater than balanace\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"VestingBase: Vesting has been cl\")\n        mstore(add(headStart, 96), \"aimed!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"VestingBase: Address has no Vest\")\n        mstore(add(headStart, 96), \"ing allocation!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"VestingBase: Invalid new merkle \")\n        mstore(add(headStart, 96), \"root value!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "606:3266:53:-:0;;;1259:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:3;719:10:27;921:18:3;:32::i;:::-;991:5:5;981:15;;-1:-1:-1;;;;981:15:5;;;1297:11:53;:26;;-1:-1:-1;;;;;;1297:26:53;-1:-1:-1;;;;;1297:26:53;;;;;;;;;;606:3266;;2270:187:3;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:304:54:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:54;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:54:o;:::-;606:3266:53;;;;;;",
  "deployedSourceMap": "606:3266:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:135;;;;;;:::i;:::-;;:::i;:::-;;;345:25:54;;;333:2;318:18;1780:135:53;;;;;;;;2290:323;;;;;;:::i;:::-;;:::i;:::-;;;546:14:54;;539:22;521:41;;509:2;494:18;2290:323:53;381:187:54;760:29:53;;;;;;1487:113;;;:::i;1098:84:5:-;1145:4;1168:7;-1:-1:-1;;;1168:7:5;;;;1098:84;;3117:753:53;;;;;;:::i;:::-;;:::i;1668:101:3:-;;;:::i;:::-;;2690:243:53;;;;;;:::i;:::-;;:::i;1036:85:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;1036:85;;;-1:-1:-1;;;;;1928:32:54;;;1910:51;;1898:2;1883:18;1036:85:3;1764:203:54;853:24:53;;;;;-1:-1:-1;;;;;853:24:53;;;1918:198:3;;;;;;:::i;:::-;;:::i;1780:135:53:-;1866:7;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1890:20:53::1;::::0;;;:12:::1;:20;::::0;;;;;;1780:135::o;2290:323::-;2356:4;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;2386:11:53::1;::::0;:36:::1;::::0;-1:-1:-1;;;2386:36:53;;2416:4:::1;2386:36;::::0;::::1;1910:51:54::0;2368:15:53::1;::::0;-1:-1:-1;;;;;2386:11:53::1;::::0;:21:::1;::::0;1883:18:54;;2386:36:53::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2368:54;;2448:7;2437;:18;;2429:61;;;::::0;-1:-1:-1;;;2429:61:53;;3237:2:54;2429:61:53::1;::::0;::::1;3219:21:54::0;3276:2;3256:18;;;3249:30;3315:32;3295:18;;;3288:60;3365:18;;2429:61:53::1;3035:354:54::0;2429:61:53::1;2505:11;::::0;:41:::1;::::0;-1:-1:-1;;;2505:41:53;;2526:10:::1;2505:41;::::0;::::1;3568:51:54::0;3635:18;;;3628:34;;;-1:-1:-1;;;;;2505:11:53;;::::1;::::0;:20:::1;::::0;3541:18:54;;2505:41:53::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2497:50;;;::::0;::::1;;2559:32;::::0;345:25:54;;;2571:10:53::1;::::0;2559:32:::1;::::0;333:2:54;318:18;2559:32:53::1;;;;;;;-1:-1:-1::0;2604:4:53::1;::::0;2290:323;-1:-1:-1;;2290:323:53:o;1487:113::-;1559:11;;:36;;-1:-1:-1;;;1559:36:53;;1589:4;1559:36;;;1910:51:54;1537:7:53;;-1:-1:-1;;;;;1559:11:53;;:21;;1883:18:54;;1559:36:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1552:43;;1487:113;:::o;3117:753::-;3243:4;1168:7:5;;-1:-1:-1;;;1168:7:5;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:5;;4157:2:54;1403:38:5;;;4139:21:54;4196:2;4176:18;;;4169:30;-1:-1:-1;;;4215:18:54;;;4208:46;4271:18;;1403:38:5;3955:340:54;1403:38:5;3271:22:53::1;::::0;;;:14:::1;:22;::::0;;;;;;;3294:10:::1;3271:34:::0;;;;;;;;::::1;;3270:35;3255:104;;;::::0;-1:-1:-1;;;3255:104:53;;4502:2:54;3255:104:53::1;::::0;::::1;4484:21:54::0;4541:2;4521:18;;;4514:30;4580:34;4560:18;;;4553:62;-1:-1:-1;;;4631:18:54;;;4624:36;4677:19;;3255:104:53::1;4300:402:54::0;3255:104:53::1;3365:18;3386:20:::0;;;:12:::1;:20;::::0;;;;;;;;3437:37;;-1:-1:-1;;3454:10:53::1;4884:2:54::0;4880:15;4876:53;3437:37:53;;::::1;4864:66:54::0;;;;4946:12;;;4939:28;;;3386:20:53;3365:18;4983:12:54;;3437:37:53::1;;;;;;;;;;;;3427:48;;;;;;3412:63;;3481:16;3500:44;3519:6;;3500:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;3527:10:53;;-1:-1:-1;3539:4:53;;-1:-1:-1;3500:18:53::1;::::0;-1:-1:-1;3500:44:53:i:1;:::-;3481:63;;3558:11;3550:71;;;::::0;-1:-1:-1;;;3550:71:53;;5208:2:54;3550:71:53::1;::::0;::::1;5190:21:54::0;5247:2;5227:18;;;5220:30;5286:34;5266:18;;;5259:62;-1:-1:-1;;;5337:18:54;;;5330:45;5392:19;;3550:71:53::1;5006:411:54::0;3550:71:53::1;3658:22;::::0;;;:14:::1;:22;::::0;;;;;;;3681:10:::1;3658:34:::0;;;;;;;:41;;-1:-1:-1;;3658:41:53::1;3695:4;3658:41:::0;;::::1;::::0;;;3722:14;:27:::1;::::0;3741:7;3722:18:::1;:27::i;:::-;3705:14;:44:::0;3764:11:::1;::::0;:41:::1;::::0;-1:-1:-1;;;3764:41:53;;3785:10:::1;3764:41;::::0;::::1;3568:51:54::0;3635:18;;;3628:34;;;-1:-1:-1;;;;;3764:11:53;;::::1;::::0;:20:::1;::::0;3541:18:54;;3764:41:53::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3756:50;;;::::0;::::1;;3817:30;::::0;345:25:54;;;3827:10:53::1;::::0;3817:30:::1;::::0;333:2:54;318:18;3817:30:53::1;;;;;;;-1:-1:-1::0;3861:4:53::1;::::0;3117:753;-1:-1:-1;;;;;;;3117:753:53:o;1668:101:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2690:243:53:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;2803:22:53;2788:96:::1;;;::::0;-1:-1:-1;;;2788:96:53;;5624:2:54;2788:96:53::1;::::0;::::1;5606:21:54::0;5663:2;5643:18;;;5636:30;5702:34;5682:18;;;5675:62;-1:-1:-1;;;5753:18:54;;;5746:41;5804:19;;2788:96:53::1;5422:407:54::0;2788:96:53::1;2891:20;::::0;;;:12:::1;:20;::::0;;;;:37;2690:243::o;1918:198:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:3;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:3;;6036:2:54;1998:73:3::1;::::0;::::1;6018:21:54::0;6075:2;6055:18;;;6048:30;6114:34;6094:18;;;6087:62;-1:-1:-1;;;6165:18:54;;;6158:36;6211:19;;1998:73:3::1;5834:402:54::0;1998:73:3::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;862:184:31:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:31:o;2741:96:37:-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:37:o;2270:187:3:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1398:662:31:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:31;;;;:::i;:::-;;;;1537:488;;;-1:-1:-1;2041:12:31;1398:662;-1:-1:-1;;;1398:662:31:o;14:180:54:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:54;;14:180;-1:-1:-1;14:180:54:o;755:751::-;859:6;867;875;883;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;988:9;975:23;965:33;;1049:2;1038:9;1034:18;1021:32;1072:18;1113:2;1105:6;1102:14;1099:34;;;1129:1;1126;1119:12;1099:34;1167:6;1156:9;1152:22;1142:32;;1212:7;1205:4;1201:2;1197:13;1193:27;1183:55;;1234:1;1231;1224:12;1183:55;1274:2;1261:16;1300:2;1292:6;1289:14;1286:34;;;1316:1;1313;1306:12;1286:34;1369:7;1364:2;1354:6;1351:1;1347:14;1343:2;1339:23;1335:32;1332:45;1329:65;;;1390:1;1387;1380:12;1329:65;755:751;;1421:2;1413:11;;;;;-1:-1:-1;1443:6:54;;1496:2;1481:18;1468:32;;-1:-1:-1;755:751:54;-1:-1:-1;;;755:751:54:o;1511:248::-;1579:6;1587;1640:2;1628:9;1619:7;1615:23;1611:32;1608:52;;;1656:1;1653;1646:12;1608:52;-1:-1:-1;;1679:23:54;;;1749:2;1734:18;;;1721:32;;-1:-1:-1;1511:248:54:o;2194:286::-;2253:6;2306:2;2294:9;2285:7;2281:23;2277:32;2274:52;;;2322:1;2319;2312:12;2274:52;2348:23;;-1:-1:-1;;;;;2400:31:54;;2390:42;;2380:70;;2446:1;2443;2436:12;2485:356;2687:2;2669:21;;;2706:18;;;2699:30;2765:34;2760:2;2745:18;;2738:62;2832:2;2817:18;;2485:356::o;2846:184::-;2916:6;2969:2;2957:9;2948:7;2944:23;2940:32;2937:52;;;2985:1;2982;2975:12;2937:52;-1:-1:-1;3008:16:54;;2846:184;-1:-1:-1;2846:184:54:o;3673:277::-;3740:6;3793:2;3781:9;3772:7;3768:23;3764:32;3761:52;;;3809:1;3806;3799:12;3761:52;3841:9;3835:16;3894:5;3887:13;3880:21;3873:5;3870:32;3860:60;;3916:1;3913;3906:12;6241:127;6302:10;6297:3;6293:20;6290:1;6283:31;6333:4;6330:1;6323:15;6357:4;6354:1;6347:15;6373:128;6413:3;6444:1;6440:6;6437:1;6434:13;6431:39;;;6450:18;;:::i;:::-;-1:-1:-1;6486:9:54;;6373:128::o;6506:127::-;6567:10;6562:3;6558:20;6555:1;6548:31;6598:4;6595:1;6588:15;6622:4;6619:1;6612:15;6638:135;6677:3;-1:-1:-1;;6698:17:54;;6695:43;;;6718:18;;:::i;:::-;-1:-1:-1;6765:1:54;6754:13;;6638:135::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.11;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\n/**\n * @title Vesting\n * @dev A token holder contract that can release its token balance gradually like a\n * typical vesting scheme, vesting period. Optionally revocable by the\n * creator.\n */\ncontract VestingBase is Ownable, Pausable {\n  using SafeMath for uint256;\n\n  /// @notice The sum total amount of tokens withdrawn from all allocations.\n  uint256 public totalWithdrawn;\n\n  /// @notice The ERC20 contract of the coin being vested.\n  ERC20 public vestingCoin;\n\n  mapping(uint256 => mapping(address => bool)) vestingClaimed;\n  mapping(uint256 => bytes32) private RootToRounds;\n\n  /// Events;\n  event FundRemoved(address indexed _address, uint256 _amount);\n  event Withdrawn(address indexed _address, uint256 _amount);\n\n  /**\n   * @notice Constructs this contract\n   * @param _vestingCoin The ERC20 contract of the coin being vested.\n   */\n  constructor(ERC20 _vestingCoin) {\n    vestingCoin = _vestingCoin;\n  }\n\n  /**\n   * @notice The Vesting Token balance of this smart contract.\n   * @return Returns the closing balance of vesting coin held by this contract.\n   */\n  function getAvailableFunds() public view returns (uint256) {\n    return vestingCoin.balanceOf(address(this));\n  }\n\n  /**\n   * @notice Gets the markle tree of each vesting Rounds.\n   * @param _round The round of which markleTree to be viewed.\n   * @return Returns Total vested balance.\n   */\n  function getMerkleRoot(uint256 _round)\n    public\n    view\n    onlyOwner\n    returns (bytes32)\n  {\n    return RootToRounds[_round];\n  }\n\n  /**\n   * @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n   * Please note that this action is restricted to administrators only\n   * and you may only withdraw amounts above the sum total allocation balances.\n   * @param _amount The amount desired to withdraw.\n   * @return Returns true if the withdrawal was successful.\n   */\n  function removeFunds(uint256 _amount) external onlyOwner returns (bool) {\n    uint256 balance = vestingCoin.balanceOf(address(this));\n\n    require(balance >= _amount, 'amount is grater than balanace');\n\n    require(vestingCoin.transfer(msg.sender, _amount));\n\n    emit FundRemoved(msg.sender, _amount);\n    return true;\n  }\n\n  /**\n   * @notice This action enables admin to set newMarkelRoot.\n   */\n  function setMerkleRoot(bytes32 _newMerkleRoot, uint256 _round)\n    external\n    onlyOwner\n  {\n    require(\n      _newMerkleRoot != 0x00,\n      'VestingBase: Invalid new merkle root value!'\n    );\n\n    RootToRounds[_round] = _newMerkleRoot;\n  }\n\n  /**\n   * @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n   * @param _amount The amount in vesting coin desired to withdraw.\n   */\n  function withdraw(\n    uint256 _amount,\n    bytes32[] calldata _proof,\n    uint256 _round\n  ) external whenNotPaused returns (bool) {\n    require(\n      !vestingClaimed[_round][msg.sender],\n      'VestingBase: Vesting has been claimed!'\n    );\n    bytes32 merkleRoot = RootToRounds[_round];\n    bytes32 leaf = keccak256(abi.encodePacked(msg.sender, _amount));\n    bool isValidLeaf = MerkleProof.verify(_proof, merkleRoot, leaf);\n    require(isValidLeaf, 'VestingBase: Address has no Vesting allocation!');\n\n    // Set address to claimed\n    vestingClaimed[_round][msg.sender] = true;\n    totalWithdrawn = totalWithdrawn.add(_amount);\n\n    require(vestingCoin.transfer(msg.sender, _amount));\n    emit Withdrawn(msg.sender, _amount);\n\n    return true;\n  }\n}\n",
  "sourcePath": "/Users/yosephks/Documents/GitHub/alpsfinance-smart-contracts/contracts/vesting/VestingBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        5297
      ],
      "ERC20": [
        2806
      ],
      "IERC20": [
        2884
      ],
      "IERC20Metadata": [
        3590
      ],
      "MerkleProof": [
        6074
      ],
      "Ownable": [
        532
      ],
      "Pausable": [
        702
      ],
      "SafeMath": [
        7057
      ],
      "VestingBase": [
        10195
      ]
    },
    "id": 10196,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9948,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:53"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 9949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 2885,
        "src": "63:56:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 9950,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 7058,
        "src": "120:57:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 9951,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 2807,
        "src": "178:55:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 9952,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 703,
        "src": "234:55:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 533,
        "src": "290:52:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 9954,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 6075,
        "src": "343:68:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9956,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "630:7:53"
            },
            "id": 9957,
            "nodeType": "InheritanceSpecifier",
            "src": "630:7:53"
          },
          {
            "baseName": {
              "id": 9958,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 702,
              "src": "639:8:53"
            },
            "id": 9959,
            "nodeType": "InheritanceSpecifier",
            "src": "639:8:53"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9955,
          "nodeType": "StructuredDocumentation",
          "src": "413:192:53",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 10195,
        "linearizedBaseContracts": [
          10195,
          702,
          532,
          5297
        ],
        "name": "VestingBase",
        "nameLocation": "615:11:53",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9962,
            "libraryName": {
              "id": 9960,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "658:8:53"
            },
            "nodeType": "UsingForDirective",
            "src": "652:27:53",
            "typeName": {
              "id": 9961,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "671:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 9963,
              "nodeType": "StructuredDocumentation",
              "src": "683:74:53",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 9965,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "775:14:53",
            "nodeType": "VariableDeclaration",
            "scope": 10195,
            "src": "760:29:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9964,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "760:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9966,
              "nodeType": "StructuredDocumentation",
              "src": "794:56:53",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 9969,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "866:11:53",
            "nodeType": "VariableDeclaration",
            "scope": 10195,
            "src": "853:24:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2806",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 9968,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9967,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2806,
                "src": "853:5:53"
              },
              "referencedDeclaration": 2806,
              "src": "853:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2806",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9975,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "927:14:53",
            "nodeType": "VariableDeclaration",
            "scope": 10195,
            "src": "882:59:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 9974,
              "keyType": {
                "id": 9970,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "882:44:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 9973,
                "keyType": {
                  "id": 9971,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:7:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "901:24:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 9972,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:4:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9979,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "981:12:53",
            "nodeType": "VariableDeclaration",
            "scope": 10195,
            "src": "945:48:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 9978,
              "keyType": {
                "id": 9976,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "953:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "945:27:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 9977,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "964:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9980,
              "nodeType": "StructuredDocumentation",
              "src": "998:11:53",
              "text": "Events;"
            },
            "id": 9986,
            "name": "FundRemoved",
            "nameLocation": "1018:11:53",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9982,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1046:8:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 9986,
                  "src": "1030:24:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9984,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1064:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 9986,
                  "src": "1056:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1029:43:53"
            },
            "src": "1012:61:53"
          },
          {
            "anonymous": false,
            "id": 9992,
            "name": "Withdrawn",
            "nameLocation": "1082:9:53",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9988,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1108:8:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 9992,
                  "src": "1092:24:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9990,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1126:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 9992,
                  "src": "1118:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:43:53"
            },
            "src": "1076:59:53"
          },
          {
            "body": {
              "id": 10003,
              "nodeType": "Block",
              "src": "1291:37:53",
              "statements": [
                {
                  "expression": {
                    "id": 10001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9999,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9969,
                      "src": "1297:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10000,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9996,
                      "src": "1311:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1297:26:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 10002,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:26:53"
                }
              ]
            },
            "documentation": {
              "id": 9993,
              "nodeType": "StructuredDocumentation",
              "src": "1139:117:53",
              "text": " @notice Constructs this contract\n @param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 10004,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9996,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1277:12:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10004,
                  "src": "1271:18:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2806",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 9995,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9994,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2806,
                      "src": "1271:5:53"
                    },
                    "referencedDeclaration": 2806,
                    "src": "1271:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1270:20:53"
            },
            "returnParameters": {
              "id": 9998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:0:53"
            },
            "scope": 10195,
            "src": "1259:69:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10018,
              "nodeType": "Block",
              "src": "1546:54:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10014,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1589:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$10195",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$10195",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 10013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1581:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10012,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1581:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1581:13:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10010,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9969,
                        "src": "1559:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "1559:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1559:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10009,
                  "id": 10017,
                  "nodeType": "Return",
                  "src": "1552:43:53"
                }
              ]
            },
            "documentation": {
              "id": 10005,
              "nodeType": "StructuredDocumentation",
              "src": "1332:152:53",
              "text": " @notice The Vesting Token balance of this smart contract.\n @return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 10019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1496:17:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1513:2:53"
            },
            "returnParameters": {
              "id": 10009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10019,
                  "src": "1537:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:9:53"
            },
            "scope": 10195,
            "src": "1487:113:53",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10033,
              "nodeType": "Block",
              "src": "1877:38:53",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 10029,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9979,
                      "src": "1890:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 10031,
                    "indexExpression": {
                      "id": 10030,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10022,
                      "src": "1903:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1890:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 10028,
                  "id": 10032,
                  "nodeType": "Return",
                  "src": "1883:27:53"
                }
              ]
            },
            "documentation": {
              "id": 10020,
              "nodeType": "StructuredDocumentation",
              "src": "1604:173:53",
              "text": " @notice Gets the markle tree of each vesting Rounds.\n @param _round The round of which markleTree to be viewed.\n @return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 10034,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10025,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10024,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "1843:9:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "1843:9:53"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "1789:13:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10022,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1811:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10034,
                  "src": "1803:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:16:53"
            },
            "returnParameters": {
              "id": 10028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10034,
                  "src": "1866:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10026,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1866:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1865:9:53"
            },
            "scope": 10195,
            "src": "1780:135:53",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10078,
              "nodeType": "Block",
              "src": "2362:251:53",
              "statements": [
                {
                  "assignments": [
                    10045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10045,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2376:7:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 10078,
                      "src": "2368:15:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10044,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2368:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10053,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10050,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2416:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$10195",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$10195",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 10049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2408:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10048,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2408:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2408:13:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10046,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9969,
                        "src": "2386:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "2386:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2386:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2368:54:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10055,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10045,
                          "src": "2437:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10056,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10037,
                          "src": "2448:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2437:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 10058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2457:32:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 10054,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2429:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2429:61:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10060,
                  "nodeType": "ExpressionStatement",
                  "src": "2429:61:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10064,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2526:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2526:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10066,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10037,
                            "src": "2538:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10062,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9969,
                            "src": "2505:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "2505:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2505:41:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2497:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:50:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10069,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:50:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10071,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2571:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2571:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10073,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10037,
                        "src": "2583:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10070,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9986,
                      "src": "2559:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:32:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10075,
                  "nodeType": "EmitStatement",
                  "src": "2554:37:53"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2604:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10043,
                  "id": 10077,
                  "nodeType": "Return",
                  "src": "2597:11:53"
                }
              ]
            },
            "documentation": {
              "id": 10035,
              "nodeType": "StructuredDocumentation",
              "src": "1919:368:53",
              "text": " @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n Please note that this action is restricted to administrators only\n and you may only withdraw amounts above the sum total allocation balances.\n @param _amount The amount desired to withdraw.\n @return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 10079,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10040,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10039,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2337:9:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "2337:9:53"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "2299:11:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10037,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2319:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "2311:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2310:17:53"
            },
            "returnParameters": {
              "id": 10043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "2356:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10041,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2356:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2355:6:53"
            },
            "scope": 10195,
            "src": "2290:323:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10102,
              "nodeType": "Block",
              "src": "2782:151:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 10092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10090,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10082,
                          "src": "2803:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 10091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2821:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "2803:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:45:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        },
                        "value": "VestingBase: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 10089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2788:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:96:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10095,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:96:53"
                },
                {
                  "expression": {
                    "id": 10100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10096,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9979,
                        "src": "2891:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 10098,
                      "indexExpression": {
                        "id": 10097,
                        "name": "_round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10084,
                        "src": "2904:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2891:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10099,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10082,
                      "src": "2914:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2891:37:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10101,
                  "nodeType": "ExpressionStatement",
                  "src": "2891:37:53"
                }
              ]
            },
            "documentation": {
              "id": 10080,
              "nodeType": "StructuredDocumentation",
              "src": "2617:70:53",
              "text": " @notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7c382d0b",
            "id": 10103,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10087,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10086,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2770:9:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "2770:9:53"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "2699:13:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10082,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "2721:14:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10103,
                  "src": "2713:22:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10081,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10084,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2745:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10103,
                  "src": "2737:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2712:40:53"
            },
            "returnParameters": {
              "id": 10088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2782:0:53"
            },
            "scope": 10195,
            "src": "2690:243:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10193,
              "nodeType": "Block",
              "src": "3249:621:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3270:35:53",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 10119,
                              "name": "vestingClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9975,
                              "src": "3271:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 10121,
                            "indexExpression": {
                              "id": 10120,
                              "name": "_round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10111,
                              "src": "3286:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3271:22:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 10124,
                          "indexExpression": {
                            "expression": {
                              "id": 10122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3294:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3294:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3271:34:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 10126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3313:40:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        },
                        "value": "VestingBase: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        }
                      ],
                      "id": 10118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3255:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3255:104:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10128,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:104:53"
                },
                {
                  "assignments": [
                    10130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10130,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "3373:10:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 10193,
                      "src": "3365:18:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10129,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3365:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10134,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10131,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9979,
                      "src": "3386:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 10133,
                    "indexExpression": {
                      "id": 10132,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10111,
                      "src": "3399:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3386:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3365:41:53"
                },
                {
                  "assignments": [
                    10136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10136,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3420:4:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 10193,
                      "src": "3412:12:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10135,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3412:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10145,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10140,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3454:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3454:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10142,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10106,
                            "src": "3466:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10138,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3437:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3437:16:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3437:37:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10137,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3427:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 10144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3427:48:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3412:63:53"
                },
                {
                  "assignments": [
                    10147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10147,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "3486:11:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 10193,
                      "src": "3481:16:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10146,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3481:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10150,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "3519:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 10151,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10130,
                        "src": "3527:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10152,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10136,
                        "src": "3539:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 10148,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6074,
                        "src": "3500:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$6074_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 10149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6005,
                      "src": "3500:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 10153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3481:63:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10156,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10147,
                        "src": "3558:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3571:49:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        },
                        "value": "VestingBase: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 10155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3550:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3550:71:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10159,
                  "nodeType": "ExpressionStatement",
                  "src": "3550:71:53"
                },
                {
                  "expression": {
                    "id": 10167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10160,
                          "name": "vestingClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9975,
                          "src": "3658:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 10164,
                        "indexExpression": {
                          "id": 10161,
                          "name": "_round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10111,
                          "src": "3673:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3658:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10165,
                      "indexExpression": {
                        "expression": {
                          "id": 10162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3681:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3681:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3658:34:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3695:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3658:41:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10168,
                  "nodeType": "ExpressionStatement",
                  "src": "3658:41:53"
                },
                {
                  "expression": {
                    "id": 10174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10169,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9965,
                      "src": "3705:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10172,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10106,
                          "src": "3741:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10170,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9965,
                          "src": "3722:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "3722:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3722:27:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3705:44:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10175,
                  "nodeType": "ExpressionStatement",
                  "src": "3705:44:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10179,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3785:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3785:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10181,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10106,
                            "src": "3797:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10177,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9969,
                            "src": "3764:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "3764:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3764:41:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3756:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3756:50:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10184,
                  "nodeType": "ExpressionStatement",
                  "src": "3756:50:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3827:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3827:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10188,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "3839:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10185,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9992,
                      "src": "3817:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:30:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10190,
                  "nodeType": "EmitStatement",
                  "src": "3812:35:53"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3861:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10117,
                  "id": 10192,
                  "nodeType": "Return",
                  "src": "3854:11:53"
                }
              ]
            },
            "documentation": {
              "id": 10104,
              "nodeType": "StructuredDocumentation",
              "src": "2937:177:53",
              "text": " @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n @param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 10194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10114,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10113,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 658,
                  "src": "3220:13:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "3220:13:53"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3126:8:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10106,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3148:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10194,
                  "src": "3140:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10109,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "3180:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10194,
                  "src": "3161:25:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10107,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3161:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 10108,
                    "nodeType": "ArrayTypeName",
                    "src": "3161:9:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10111,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "3200:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10194,
                  "src": "3192:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:76:53"
            },
            "returnParameters": {
              "id": 10117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10194,
                  "src": "3243:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10115,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3242:6:53"
            },
            "scope": 10195,
            "src": "3117:753:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10196,
        "src": "606:3266:53",
        "usedErrors": []
      }
    ],
    "src": "37:3836:53"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        5297
      ],
      "ERC20": [
        2806
      ],
      "IERC20": [
        2884
      ],
      "IERC20Metadata": [
        3590
      ],
      "MerkleProof": [
        6074
      ],
      "Ownable": [
        532
      ],
      "Pausable": [
        702
      ],
      "SafeMath": [
        7057
      ],
      "VestingBase": [
        10195
      ]
    },
    "id": 10196,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9948,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:53"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 9949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 2885,
        "src": "63:56:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 9950,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 7058,
        "src": "120:57:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 9951,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 2807,
        "src": "178:55:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 9952,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 703,
        "src": "234:55:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 533,
        "src": "290:52:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 9954,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10196,
        "sourceUnit": 6075,
        "src": "343:68:53",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9956,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "630:7:53"
            },
            "id": 9957,
            "nodeType": "InheritanceSpecifier",
            "src": "630:7:53"
          },
          {
            "baseName": {
              "id": 9958,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 702,
              "src": "639:8:53"
            },
            "id": 9959,
            "nodeType": "InheritanceSpecifier",
            "src": "639:8:53"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9955,
          "nodeType": "StructuredDocumentation",
          "src": "413:192:53",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 10195,
        "linearizedBaseContracts": [
          10195,
          702,
          532,
          5297
        ],
        "name": "VestingBase",
        "nameLocation": "615:11:53",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9962,
            "libraryName": {
              "id": 9960,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "658:8:53"
            },
            "nodeType": "UsingForDirective",
            "src": "652:27:53",
            "typeName": {
              "id": 9961,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "671:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 9963,
              "nodeType": "StructuredDocumentation",
              "src": "683:74:53",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 9965,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "775:14:53",
            "nodeType": "VariableDeclaration",
            "scope": 10195,
            "src": "760:29:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9964,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "760:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9966,
              "nodeType": "StructuredDocumentation",
              "src": "794:56:53",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 9969,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "866:11:53",
            "nodeType": "VariableDeclaration",
            "scope": 10195,
            "src": "853:24:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2806",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 9968,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9967,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2806,
                "src": "853:5:53"
              },
              "referencedDeclaration": 2806,
              "src": "853:5:53",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2806",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9975,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "927:14:53",
            "nodeType": "VariableDeclaration",
            "scope": 10195,
            "src": "882:59:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 9974,
              "keyType": {
                "id": 9970,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "882:44:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 9973,
                "keyType": {
                  "id": 9971,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:7:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "901:24:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 9972,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:4:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9979,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "981:12:53",
            "nodeType": "VariableDeclaration",
            "scope": 10195,
            "src": "945:48:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 9978,
              "keyType": {
                "id": 9976,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "953:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "945:27:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 9977,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "964:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9980,
              "nodeType": "StructuredDocumentation",
              "src": "998:11:53",
              "text": "Events;"
            },
            "id": 9986,
            "name": "FundRemoved",
            "nameLocation": "1018:11:53",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9982,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1046:8:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 9986,
                  "src": "1030:24:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9984,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1064:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 9986,
                  "src": "1056:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1029:43:53"
            },
            "src": "1012:61:53"
          },
          {
            "anonymous": false,
            "id": 9992,
            "name": "Withdrawn",
            "nameLocation": "1082:9:53",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9988,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1108:8:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 9992,
                  "src": "1092:24:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9990,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1126:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 9992,
                  "src": "1118:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:43:53"
            },
            "src": "1076:59:53"
          },
          {
            "body": {
              "id": 10003,
              "nodeType": "Block",
              "src": "1291:37:53",
              "statements": [
                {
                  "expression": {
                    "id": 10001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9999,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9969,
                      "src": "1297:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10000,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9996,
                      "src": "1311:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1297:26:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 10002,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:26:53"
                }
              ]
            },
            "documentation": {
              "id": 9993,
              "nodeType": "StructuredDocumentation",
              "src": "1139:117:53",
              "text": " @notice Constructs this contract\n @param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 10004,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9996,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1277:12:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10004,
                  "src": "1271:18:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2806",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 9995,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9994,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2806,
                      "src": "1271:5:53"
                    },
                    "referencedDeclaration": 2806,
                    "src": "1271:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1270:20:53"
            },
            "returnParameters": {
              "id": 9998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:0:53"
            },
            "scope": 10195,
            "src": "1259:69:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10018,
              "nodeType": "Block",
              "src": "1546:54:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10014,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1589:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$10195",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$10195",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 10013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1581:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10012,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1581:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1581:13:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10010,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9969,
                        "src": "1559:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "1559:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1559:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10009,
                  "id": 10017,
                  "nodeType": "Return",
                  "src": "1552:43:53"
                }
              ]
            },
            "documentation": {
              "id": 10005,
              "nodeType": "StructuredDocumentation",
              "src": "1332:152:53",
              "text": " @notice The Vesting Token balance of this smart contract.\n @return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 10019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1496:17:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1513:2:53"
            },
            "returnParameters": {
              "id": 10009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10019,
                  "src": "1537:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:9:53"
            },
            "scope": 10195,
            "src": "1487:113:53",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10033,
              "nodeType": "Block",
              "src": "1877:38:53",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 10029,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9979,
                      "src": "1890:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 10031,
                    "indexExpression": {
                      "id": 10030,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10022,
                      "src": "1903:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1890:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 10028,
                  "id": 10032,
                  "nodeType": "Return",
                  "src": "1883:27:53"
                }
              ]
            },
            "documentation": {
              "id": 10020,
              "nodeType": "StructuredDocumentation",
              "src": "1604:173:53",
              "text": " @notice Gets the markle tree of each vesting Rounds.\n @param _round The round of which markleTree to be viewed.\n @return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 10034,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10025,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10024,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "1843:9:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "1843:9:53"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "1789:13:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10022,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1811:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10034,
                  "src": "1803:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:16:53"
            },
            "returnParameters": {
              "id": 10028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10034,
                  "src": "1866:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10026,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1866:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1865:9:53"
            },
            "scope": 10195,
            "src": "1780:135:53",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10078,
              "nodeType": "Block",
              "src": "2362:251:53",
              "statements": [
                {
                  "assignments": [
                    10045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10045,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2376:7:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 10078,
                      "src": "2368:15:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10044,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2368:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10053,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10050,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2416:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$10195",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$10195",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 10049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2408:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10048,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2408:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2408:13:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10046,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9969,
                        "src": "2386:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 10047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "2386:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 10052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2386:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2368:54:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10055,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10045,
                          "src": "2437:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10056,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10037,
                          "src": "2448:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2437:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 10058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2457:32:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 10054,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2429:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2429:61:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10060,
                  "nodeType": "ExpressionStatement",
                  "src": "2429:61:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10064,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2526:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2526:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10066,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10037,
                            "src": "2538:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10062,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9969,
                            "src": "2505:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "2505:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2505:41:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2497:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:50:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10069,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:50:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10071,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2571:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2571:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10073,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10037,
                        "src": "2583:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10070,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9986,
                      "src": "2559:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:32:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10075,
                  "nodeType": "EmitStatement",
                  "src": "2554:37:53"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2604:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10043,
                  "id": 10077,
                  "nodeType": "Return",
                  "src": "2597:11:53"
                }
              ]
            },
            "documentation": {
              "id": 10035,
              "nodeType": "StructuredDocumentation",
              "src": "1919:368:53",
              "text": " @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n Please note that this action is restricted to administrators only\n and you may only withdraw amounts above the sum total allocation balances.\n @param _amount The amount desired to withdraw.\n @return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 10079,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10040,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10039,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2337:9:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "2337:9:53"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "2299:11:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10037,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2319:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "2311:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2310:17:53"
            },
            "returnParameters": {
              "id": 10043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10079,
                  "src": "2356:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10041,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2356:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2355:6:53"
            },
            "scope": 10195,
            "src": "2290:323:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10102,
              "nodeType": "Block",
              "src": "2782:151:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 10092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10090,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10082,
                          "src": "2803:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 10091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2821:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "2803:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:45:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        },
                        "value": "VestingBase: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 10089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2788:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:96:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10095,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:96:53"
                },
                {
                  "expression": {
                    "id": 10100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10096,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9979,
                        "src": "2891:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 10098,
                      "indexExpression": {
                        "id": 10097,
                        "name": "_round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10084,
                        "src": "2904:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2891:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10099,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10082,
                      "src": "2914:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2891:37:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10101,
                  "nodeType": "ExpressionStatement",
                  "src": "2891:37:53"
                }
              ]
            },
            "documentation": {
              "id": 10080,
              "nodeType": "StructuredDocumentation",
              "src": "2617:70:53",
              "text": " @notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7c382d0b",
            "id": 10103,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10087,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10086,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2770:9:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "2770:9:53"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "2699:13:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10082,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "2721:14:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10103,
                  "src": "2713:22:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10081,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10084,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2745:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10103,
                  "src": "2737:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2712:40:53"
            },
            "returnParameters": {
              "id": 10088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2782:0:53"
            },
            "scope": 10195,
            "src": "2690:243:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10193,
              "nodeType": "Block",
              "src": "3249:621:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3270:35:53",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 10119,
                              "name": "vestingClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9975,
                              "src": "3271:14:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 10121,
                            "indexExpression": {
                              "id": 10120,
                              "name": "_round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10111,
                              "src": "3286:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3271:22:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 10124,
                          "indexExpression": {
                            "expression": {
                              "id": 10122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3294:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3294:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3271:34:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 10126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3313:40:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        },
                        "value": "VestingBase: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        }
                      ],
                      "id": 10118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3255:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3255:104:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10128,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:104:53"
                },
                {
                  "assignments": [
                    10130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10130,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "3373:10:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 10193,
                      "src": "3365:18:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10129,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3365:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10134,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10131,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9979,
                      "src": "3386:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 10133,
                    "indexExpression": {
                      "id": 10132,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10111,
                      "src": "3399:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3386:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3365:41:53"
                },
                {
                  "assignments": [
                    10136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10136,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3420:4:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 10193,
                      "src": "3412:12:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10135,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3412:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10145,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10140,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3454:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3454:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10142,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10106,
                            "src": "3466:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10138,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3437:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3437:16:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3437:37:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10137,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3427:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 10144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3427:48:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3412:63:53"
                },
                {
                  "assignments": [
                    10147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10147,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "3486:11:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 10193,
                      "src": "3481:16:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10146,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3481:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10150,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "3519:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 10151,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10130,
                        "src": "3527:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10152,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10136,
                        "src": "3539:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 10148,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6074,
                        "src": "3500:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$6074_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 10149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6005,
                      "src": "3500:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 10153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:44:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3481:63:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10156,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10147,
                        "src": "3558:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3571:49:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        },
                        "value": "VestingBase: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 10155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3550:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3550:71:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10159,
                  "nodeType": "ExpressionStatement",
                  "src": "3550:71:53"
                },
                {
                  "expression": {
                    "id": 10167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10160,
                          "name": "vestingClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9975,
                          "src": "3658:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 10164,
                        "indexExpression": {
                          "id": 10161,
                          "name": "_round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10111,
                          "src": "3673:6:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3658:22:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10165,
                      "indexExpression": {
                        "expression": {
                          "id": 10162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3681:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3681:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3658:34:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3695:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3658:41:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10168,
                  "nodeType": "ExpressionStatement",
                  "src": "3658:41:53"
                },
                {
                  "expression": {
                    "id": 10174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10169,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9965,
                      "src": "3705:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10172,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10106,
                          "src": "3741:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 10170,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9965,
                          "src": "3722:14:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "3722:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3722:27:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3705:44:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10175,
                  "nodeType": "ExpressionStatement",
                  "src": "3705:44:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10179,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3785:3:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3785:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10181,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10106,
                            "src": "3797:7:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10177,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9969,
                            "src": "3764:11:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 10178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "3764:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3764:41:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3756:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3756:50:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10184,
                  "nodeType": "ExpressionStatement",
                  "src": "3756:50:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3827:3:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3827:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10188,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10106,
                        "src": "3839:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10185,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9992,
                      "src": "3817:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:30:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10190,
                  "nodeType": "EmitStatement",
                  "src": "3812:35:53"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 10191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3861:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10117,
                  "id": 10192,
                  "nodeType": "Return",
                  "src": "3854:11:53"
                }
              ]
            },
            "documentation": {
              "id": 10104,
              "nodeType": "StructuredDocumentation",
              "src": "2937:177:53",
              "text": " @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n @param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 10194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10114,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10113,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 658,
                  "src": "3220:13:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "3220:13:53"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3126:8:53",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10106,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3148:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10194,
                  "src": "3140:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10109,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "3180:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10194,
                  "src": "3161:25:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10107,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3161:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 10108,
                    "nodeType": "ArrayTypeName",
                    "src": "3161:9:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10111,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "3200:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 10194,
                  "src": "3192:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:76:53"
            },
            "returnParameters": {
              "id": 10117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10194,
                  "src": "3243:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10115,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3242:6:53"
            },
            "scope": 10195,
            "src": "3117:753:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10196,
        "src": "606:3266:53",
        "usedErrors": []
      }
    ],
    "src": "37:3836:53"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-15T10:54:28.207Z",
  "devdoc": {
    "details": "A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_vestingCoin": "The ERC20 contract of the coin being vested."
        }
      },
      "getAvailableFunds()": {
        "returns": {
          "_0": "Returns the closing balance of vesting coin held by this contract."
        }
      },
      "getMerkleRoot(uint256)": {
        "params": {
          "_round": "The round of which markleTree to be viewed."
        },
        "returns": {
          "_0": "Returns Total vested balance."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeFunds(uint256)": {
        "params": {
          "_amount": "The amount desired to withdraw."
        },
        "returns": {
          "_0": "Returns true if the withdrawal was successful."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "params": {
          "_amount": "The amount in vesting coin desired to withdraw."
        }
      }
    },
    "title": "Vesting",
    "version": 1
  },
  "userdoc": {
    "events": {
      "FundRemoved(address,uint256)": {
        "notice": "Events;"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructs this contract"
      },
      "getAvailableFunds()": {
        "notice": "The Vesting Token balance of this smart contract."
      },
      "getMerkleRoot(uint256)": {
        "notice": "Gets the markle tree of each vesting Rounds."
      },
      "removeFunds(uint256)": {
        "notice": "Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances."
      },
      "setMerkleRoot(bytes32,uint256)": {
        "notice": "This action enables admin to set newMarkelRoot."
      },
      "totalWithdrawn()": {
        "notice": "The sum total amount of tokens withdrawn from all allocations."
      },
      "vestingCoin()": {
        "notice": "The ERC20 contract of the coin being vested."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "notice": "This action enables the beneficiaries to withdraw a desired amount from this contract."
      }
    },
    "version": 1
  }
}