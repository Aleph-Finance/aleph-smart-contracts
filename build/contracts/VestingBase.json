{
  "contractName": "VestingBase",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_vestingCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_remainingInPool",
          "type": "uint256"
        }
      ],
      "name": "FundRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_previousCap",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newCap",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Rounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestingClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCoin",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "removeFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_newMerkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_vestingCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_remainingInPool\",\"type\":\"uint256\"}],\"name\":\"FundRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previousCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newCap\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Rounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newMerkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCoin\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vestingCoin\":\"The ERC20 contract of the coin being vested.\"}},\"fund()\":{\"returns\":{\"_0\":\"Returns true if the funding was successful.\"}},\"getAvailableFunds()\":{\"returns\":{\"_0\":\"Returns the closing balance of vesting coin held by this contract.\"}},\"getMerkleRoot(uint256)\":{\"params\":{\"_round\":\"The round of which markleTree to be viewed.\"},\"returns\":{\"_0\":\"Returns Total vested balance.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeFunds(uint256)\":{\"params\":{\"_amount\":\"The amount desired to withdraw.\"},\"returns\":{\"_0\":\"Returns true if the withdrawal was successful.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"params\":{\"_amount\":\"The amount in vesting coin desired to withdraw.\"}}},\"title\":\"Vesting\",\"version\":1},\"userdoc\":{\"events\":{\"Funded(address,uint256,uint256,uint256)\":{\"notice\":\"Events;\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs this contract\"},\"fund()\":{\"notice\":\"Enables this vesting contract to receive the ERC20 (vesting coin). Before calling this function please approve your desired amount of the coin for this smart contract address. Please note that this action is restricted to administrators only.\"},\"getAvailableFunds()\":{\"notice\":\"The Vesting Token balance of this smart contract.\"},\"getMerkleRoot(uint256)\":{\"notice\":\"Gets the markle tree of each vesting Rounds.\"},\"removeFunds(uint256)\":{\"notice\":\"Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances.\"},\"setMerkleRoot(bytes32)\":{\"notice\":\"This action enables admin to set newMarkelRoot.\"},\"totalWithdrawn()\":{\"notice\":\"The sum total amount of tokens withdrawn from all allocations.\"},\"vestingCoin()\":{\"notice\":\"The ERC20 contract of the coin being vested.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"notice\":\"This action enables the beneficiaries to withdraw a desired amount from this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Vesting/VestingBase.sol\":\"VestingBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xb45e104b4d8ecd7f3ad94bdebd7a76bfa258f5bc91444bb4858f75616cfad140\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06abef552fe0601522ef089d68e2f79ed8d15fe0c06dd4f35d7e6e5a1e247363\",\"dweb:/ipfs/QmaT69xxfRukB41W5gWBRDEA5Y96etSExwvqV6qn75g3mg\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xea64fbaccbf9d8c235cf6838240ddcebb97f9fc383660289e9dff32e4fb85f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e8a1dd0eac2fa865dc9a052bee01eec31677d7bc01b5b5aa825d820f3f1b343\",\"dweb:/ipfs/QmR8WuNeoAvJhnL7msQfQwaZEkwVnNyNDUNBL3Y616ohYa\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/Vesting/VestingBase.sol\":{\"keccak256\":\"0x57ffe72f1a0c3ecbf282ed39c241d7601531a213537894314d8f1f71a7e0ba9d\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b6e75a836eba9a1374bc1a8a7f5806faf1a9297e3c4eb3bd82631953add6d8e0\",\"dweb:/ipfs/QmNiEYyX83L9NCnWjNH8FfoiTfWUz41Ahi2zvNyVQ9p8Tp\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060035534801561001557600080fd5b50604051610e43380380610e43833981016040819052610034916100bf565b61003d3361006f565b6000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b03929092169190911790556100ef565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d157600080fd5b81516001600160a01b03811681146100e857600080fd5b9392505050565b610d45806100fe6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a065b0bd11610066578063a065b0bd146101b9578063aa880dc4146101cc578063b60d4288146101ef578063f2fde38b146101f757600080fd5b8063715018a6146101775780637cb64759146101815780638da5cb5b1461019457600080fd5b80634b319713116100c85780634b319713146101415780635195bd291461014a5780635c975abb146101525780636092dfcb1461016457600080fd5b806302438b2d146100ef5780630aab8ba51461010b5780632f3845231461011e575b600080fd5b6100f860035481565b6040519081526020015b60405180910390f35b6100f8610119366004610b62565b61020a565b61013161012c366004610b62565b610251565b6040519015158152602001610102565b6100f860015481565b6100f861041a565b600054600160a01b900460ff16610131565b610131610172366004610b7b565b61048c565b61017f610728565b005b61017f61018f366004610b62565b61075e565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610102565b6002546101a1906001600160a01b031681565b6101316101da366004610c00565b60046020526000908152604090205460ff1681565b610131610809565b61017f610205366004610c00565b6109ce565b600080546001600160a01b0316331461023e5760405162461bcd60e51b815260040161023590610c29565b60405180910390fd5b5060009081526005602052604090205490565b600080546001600160a01b0316331461027c5760405162461bcd60e51b815260040161023590610c29565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e99190610c5e565b90506000600154826102fb9190610c8d565b90508381101561034d5760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e61636500006044820152606401610235565b60025460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c29190610ca4565b6103cb57600080fd5b337f2d2c22b12ce2c4142ec672b74a307ec23572019efd8c9a930a8fc19f0fcd6c86856103f88482610a69565b6040805192835260208301919091520160405180910390a25060019392505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610c5e565b905090565b60008054600160a01b900460ff16156104da5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610235565b3360009081526004602052604090205460ff16156105455760405162461bcd60e51b815260206004820152602260248201527f56657374696e673a2056657374696e6720686173206265656e20636c61696d65604482015261642160f01b6064820152608401610235565b60008281526005602090815260408083205490516bffffffffffffffffffffffff193360601b169281019290925260348201889052919060540160405160208183030381529060405280519060200120905060006105d9878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250879250869150610a7c9050565b90508061063c5760405162461bcd60e51b815260206004820152602b60248201527f56657374696e673a204164647265737320686173206e6f2056657374696e672060448201526a616c6c6f636174696f6e2160a81b6064820152608401610235565b336000908152600460205260409020805460ff19166001908117909155546106649089610a92565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610ca4565b6106e557600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146107525760405162461bcd60e51b815260040161023590610c29565b61075c6000610a9e565b565b6000546001600160a01b031633146107885760405162461bcd60e51b815260040161023590610c29565b806107e55760405162461bcd60e51b815260206004820152602760248201527f56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f746044820152662076616c75652160c81b6064820152608401610235565b6003546107f3906001610cc6565b6003819055600090815260056020526040902055565b600080546001600160a01b031633146108345760405162461bcd60e51b815260040161023590610c29565b600254604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a79190610c5e565b9050600081116108ec5760405162461bcd60e51b815260206004820152601060248201526f2737ba3434b733903a3790333ab7321760811b6044820152606401610235565b60006108f661041a565b6002546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd906064016020604051808303816000875af115801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190610ca4565b61097b57600080fd5b337f26b27e83d0b82c44eb17d6f11776a8c600332d2ed7d9febfe585848bcfadf52d83836109a761041a565b6040805193845260208401929092529082015260600160405180910390a260019250505090565b6000546001600160a01b031633146109f85760405162461bcd60e51b815260040161023590610c29565b6001600160a01b038116610a5d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610235565b610a6681610a9e565b50565b6000610a758284610c8d565b9392505050565b600082610a898584610aee565b14949350505050565b6000610a758284610cc6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b8451811015610b5a576000858281518110610b1057610b10610cde565b60200260200101519050808311610b365760008381526020829052604090209250610b47565b600081815260208490526040902092505b5080610b5281610cf4565b915050610af3565b509392505050565b600060208284031215610b7457600080fd5b5035919050565b60008060008060608587031215610b9157600080fd5b84359350602085013567ffffffffffffffff80821115610bb057600080fd5b818701915087601f830112610bc457600080fd5b813581811115610bd357600080fd5b8860208260051b8501011115610be857600080fd5b95986020929092019750949560400135945092505050565b600060208284031215610c1257600080fd5b81356001600160a01b0381168114610a7557600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610c7057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610c9f57610c9f610c77565b500390565b600060208284031215610cb657600080fd5b81518015158114610a7557600080fd5b60008219821115610cd957610cd9610c77565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610d0857610d08610c77565b506001019056fea26469706673582212203d36462d44cd471b873e335c8164324f45bae233016676ab0843a865eeed915a64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a065b0bd11610066578063a065b0bd146101b9578063aa880dc4146101cc578063b60d4288146101ef578063f2fde38b146101f757600080fd5b8063715018a6146101775780637cb64759146101815780638da5cb5b1461019457600080fd5b80634b319713116100c85780634b319713146101415780635195bd291461014a5780635c975abb146101525780636092dfcb1461016457600080fd5b806302438b2d146100ef5780630aab8ba51461010b5780632f3845231461011e575b600080fd5b6100f860035481565b6040519081526020015b60405180910390f35b6100f8610119366004610b62565b61020a565b61013161012c366004610b62565b610251565b6040519015158152602001610102565b6100f860015481565b6100f861041a565b600054600160a01b900460ff16610131565b610131610172366004610b7b565b61048c565b61017f610728565b005b61017f61018f366004610b62565b61075e565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610102565b6002546101a1906001600160a01b031681565b6101316101da366004610c00565b60046020526000908152604090205460ff1681565b610131610809565b61017f610205366004610c00565b6109ce565b600080546001600160a01b0316331461023e5760405162461bcd60e51b815260040161023590610c29565b60405180910390fd5b5060009081526005602052604090205490565b600080546001600160a01b0316331461027c5760405162461bcd60e51b815260040161023590610c29565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e99190610c5e565b90506000600154826102fb9190610c8d565b90508381101561034d5760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e61636500006044820152606401610235565b60025460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c29190610ca4565b6103cb57600080fd5b337f2d2c22b12ce2c4142ec672b74a307ec23572019efd8c9a930a8fc19f0fcd6c86856103f88482610a69565b6040805192835260208301919091520160405180910390a25060019392505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610c5e565b905090565b60008054600160a01b900460ff16156104da5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610235565b3360009081526004602052604090205460ff16156105455760405162461bcd60e51b815260206004820152602260248201527f56657374696e673a2056657374696e6720686173206265656e20636c61696d65604482015261642160f01b6064820152608401610235565b60008281526005602090815260408083205490516bffffffffffffffffffffffff193360601b169281019290925260348201889052919060540160405160208183030381529060405280519060200120905060006105d9878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250879250869150610a7c9050565b90508061063c5760405162461bcd60e51b815260206004820152602b60248201527f56657374696e673a204164647265737320686173206e6f2056657374696e672060448201526a616c6c6f636174696f6e2160a81b6064820152608401610235565b336000908152600460205260409020805460ff19166001908117909155546106649089610a92565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610ca4565b6106e557600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146107525760405162461bcd60e51b815260040161023590610c29565b61075c6000610a9e565b565b6000546001600160a01b031633146107885760405162461bcd60e51b815260040161023590610c29565b806107e55760405162461bcd60e51b815260206004820152602760248201527f56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f746044820152662076616c75652160c81b6064820152608401610235565b6003546107f3906001610cc6565b6003819055600090815260056020526040902055565b600080546001600160a01b031633146108345760405162461bcd60e51b815260040161023590610c29565b600254604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a79190610c5e565b9050600081116108ec5760405162461bcd60e51b815260206004820152601060248201526f2737ba3434b733903a3790333ab7321760811b6044820152606401610235565b60006108f661041a565b6002546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd906064016020604051808303816000875af115801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190610ca4565b61097b57600080fd5b337f26b27e83d0b82c44eb17d6f11776a8c600332d2ed7d9febfe585848bcfadf52d83836109a761041a565b6040805193845260208401929092529082015260600160405180910390a260019250505090565b6000546001600160a01b031633146109f85760405162461bcd60e51b815260040161023590610c29565b6001600160a01b038116610a5d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610235565b610a6681610a9e565b50565b6000610a758284610c8d565b9392505050565b600082610a898584610aee565b14949350505050565b6000610a758284610cc6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b8451811015610b5a576000858281518110610b1057610b10610cde565b60200260200101519050808311610b365760008381526020829052604090209250610b47565b600081815260208490526040902092505b5080610b5281610cf4565b915050610af3565b509392505050565b600060208284031215610b7457600080fd5b5035919050565b60008060008060608587031215610b9157600080fd5b84359350602085013567ffffffffffffffff80821115610bb057600080fd5b818701915087601f830112610bc457600080fd5b813581811115610bd357600080fd5b8860208260051b8501011115610be857600080fd5b95986020929092019750949560400135945092505050565b600060208284031215610c1257600080fd5b81356001600160a01b0381168114610a7557600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610c7057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610c9f57610c9f610c77565b500390565b600060208284031215610cb657600080fd5b81518015158114610a7557600080fd5b60008219821115610cd957610cd9610c77565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610d0857610d08610c77565b506001019056fea26469706673582212203d36462d44cd471b873e335c8164324f45bae233016676ab0843a865eeed915a64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:320:73",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:73",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:209:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "155:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "157:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "157:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "157:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "130:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "139:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "126:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "151:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "122:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "122:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "119:52:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "193:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:16:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "184:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "272:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "281:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "274:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "274:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "274:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "231:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "242:5:73"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "257:3:73",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "262:1:73",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:3:73"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "253:11:73"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "266:1:73",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:19:73"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "238:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "238:31:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "228:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "228:42:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "221:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:50:73"
                  },
                  "nodeType": "YulIf",
                  "src": "218:70:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "297:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "307:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "297:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$2806_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "75:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "86:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "98:6:73",
                "type": ""
              }
            ],
            "src": "14:304:73"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$2806_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 73,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8436:73",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:73",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:73",
                "type": ""
              }
            ],
            "src": "14:177:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "266:110:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "312:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "321:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "324:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "314:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "314:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "314:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "287:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "296:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "283:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "283:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "308:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "279:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "279:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "276:52:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "337:33:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "360:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "347:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "347:23:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "337:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "232:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "243:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "255:6:73",
                "type": ""
              }
            ],
            "src": "196:180:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:76:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "504:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "515:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "500:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "492:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "534:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "545:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "527:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "527:25:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "451:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "462:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "473:4:73",
                "type": ""
              }
            ],
            "src": "381:177:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "658:92:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "668:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "680:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "691:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "676:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "676:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "668:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "710:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "735:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "728:6:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "728:14:73"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "721:6:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "721:22:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "703:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "703:41:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "703:41:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "627:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "638:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "649:4:73",
                "type": ""
              }
            ],
            "src": "563:187:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "894:612:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "940:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "952:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "942:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "942:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "942:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "915:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "924:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "907:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "904:52:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "965:33:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "988:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "975:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:23:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "965:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:46:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1038:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1049:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:32:73"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1011:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1062:28:73",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1072:18:73",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1066:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1117:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1126:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1129:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1119:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1119:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1119:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1105:6:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1113:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1102:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:14:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1099:34:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1142:32:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1156:9:73"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1167:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1152:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:22:73"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1146:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1222:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1231:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1234:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1224:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1224:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1224:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1201:2:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1205:4:73",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1197:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1197:13:73"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1212:7:73"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:27:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1186:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:35:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1183:55:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1247:30:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1274:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1261:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:16:73"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1251:6:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1304:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1313:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1316:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1306:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1306:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1292:6:73"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1300:2:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1289:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:14:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1286:34:73"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1378:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1390:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1380:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1380:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1380:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1343:2:73"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1351:1:73",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1354:6:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:14:73"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1339:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1339:23:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1364:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1335:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1335:32:73"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1369:7:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1332:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:45:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:65:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1403:21:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1417:2:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1421:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:11:73"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1403:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1433:16:73",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1443:6:73"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1433:6:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1458:42:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1485:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1481:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1481:18:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1468:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:32:73"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1458:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "836:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "847:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "859:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "867:6:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "875:6:73",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "883:6:73",
                "type": ""
              }
            ],
            "src": "755:751:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1581:110:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1627:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1636:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1639:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1629:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1629:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1629:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1602:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1611:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1598:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1598:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1623:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1594:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1594:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "1591:52:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1652:33:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1675:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1662:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1662:23:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1652:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1547:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1558:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1570:6:73",
                "type": ""
              }
            ],
            "src": "1511:180:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1797:102:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1807:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1819:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1830:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1815:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1807:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1849:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1864:6:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1880:3:73",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1885:1:73",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1876:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1876:11:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1889:1:73",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1872:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1872:19:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1860:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1860:32:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:51:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1842:51:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1766:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1777:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1788:4:73",
                "type": ""
              }
            ],
            "src": "1696:203:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2019:102:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2029:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2041:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2052:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2037:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2029:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2071:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2086:6:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2102:3:73",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2107:1:73",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2098:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2098:11:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2111:1:73",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2094:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2094:19:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2082:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2082:32:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2064:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2064:51:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2064:51:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$2806__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1988:9:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1999:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2010:4:73",
                "type": ""
              }
            ],
            "src": "1904:217:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2196:216:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2242:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2251:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2254:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2244:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2244:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2244:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2217:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2226:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2213:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2213:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2238:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2209:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2209:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2206:52:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2267:36:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2293:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2280:12:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:23:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2271:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2366:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2375:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2378:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2368:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2368:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2368:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2325:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2336:5:73"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2351:3:73",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2356:1:73",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2347:3:73"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2347:11:73"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2360:1:73",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2343:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2343:19:73"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2332:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2332:31:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2322:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2322:42:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2315:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:50:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2312:70:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2391:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2401:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2391:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2162:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2173:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2185:6:73",
                "type": ""
              }
            ],
            "src": "2126:286:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2591:182:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2608:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2619:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2601:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2601:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2601:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2642:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2653:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2638:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2638:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2658:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2631:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2631:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2631:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2681:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2692:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2677:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2677:18:73"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2697:34:73",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2670:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2670:62:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2670:62:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2741:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2753:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2764:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2749:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2749:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2741:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2568:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2582:4:73",
                "type": ""
              }
            ],
            "src": "2417:356:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2859:103:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2905:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2914:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2917:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2907:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2907:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2907:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2880:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2889:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2876:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2876:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2901:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2872:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2872:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "2869:52:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2930:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2946:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2940:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2940:16:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2930:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2825:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2836:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2848:6:73",
                "type": ""
              }
            ],
            "src": "2778:184:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2999:95:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3016:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3023:3:73",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3028:10:73",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3019:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3019:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3009:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:31:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3009:31:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3056:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3059:4:73",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3049:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3049:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3049:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3080:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3083:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3073:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3073:15:73"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2967:127:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3148:76:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3170:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3172:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3172:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3172:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3164:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3167:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3161:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3161:8:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3158:34:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3201:17:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3213:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3216:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3209:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3209:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3201:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3130:1:73",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3133:1:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3139:4:73",
                "type": ""
              }
            ],
            "src": "3099:125:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3403:180:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3420:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3431:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3413:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3413:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3413:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3454:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3465:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3450:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3450:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3470:2:73",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3443:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3443:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3443:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3493:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3504:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3489:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3489:18:73"
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3509:32:73",
                        "type": "",
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3482:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3482:60:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3482:60:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3551:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3563:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3574:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3559:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3559:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3551:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3380:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3394:4:73",
                "type": ""
              }
            ],
            "src": "3229:354:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3717:145:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3727:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3739:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3750:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3735:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3735:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3727:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3769:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3784:6:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3800:3:73",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3805:1:73",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3796:3:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3796:11:73"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3809:1:73",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3792:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3792:19:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3780:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3780:32:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3762:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3762:51:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3762:51:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3833:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3844:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3829:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3829:18:73"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3849:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3822:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3822:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3822:34:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3678:9:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3689:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3697:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3708:4:73",
                "type": ""
              }
            ],
            "src": "3588:274:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3945:199:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3991:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4000:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4003:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3993:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3993:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3993:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3966:7:73"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3975:9:73"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3962:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3962:23:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3987:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3958:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:32:73"
                  },
                  "nodeType": "YulIf",
                  "src": "3955:52:73"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4016:29:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4035:9:73"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4029:5:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4029:16:73"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4020:5:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4098:16:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4107:1:73",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4110:1:73",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4100:6:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4100:12:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4100:12:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4067:5:73"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4088:5:73"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4081:6:73"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4081:13:73"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4074:6:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4074:21:73"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4064:2:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4064:32:73"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4057:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4057:40:73"
                  },
                  "nodeType": "YulIf",
                  "src": "4054:60:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4123:15:73",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4133:5:73"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4123:6:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3911:9:73",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3922:7:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3934:6:73",
                "type": ""
              }
            ],
            "src": "3867:277:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4278:119:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4288:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4300:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4311:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4296:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4296:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4288:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4330:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4341:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4323:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4323:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4323:25:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4368:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4379:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4364:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4364:18:73"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4384:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4357:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4357:34:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4239:9:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4250:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4258:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4269:4:73",
                "type": ""
              }
            ],
            "src": "4149:248:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4576:166:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4593:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4604:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4586:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4586:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4586:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4627:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4638:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4623:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4623:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4643:2:73",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4616:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4616:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4616:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4666:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4677:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4662:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4662:18:73"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4682:18:73",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4655:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4655:46:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4655:46:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4710:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4722:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4733:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4718:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4718:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4710:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4553:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4567:4:73",
                "type": ""
              }
            ],
            "src": "4402:340:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4921:224:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4938:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4949:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4931:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4931:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4931:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4972:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4983:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4968:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4968:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4988:2:73",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4961:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4961:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4961:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5011:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5022:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5007:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5007:18:73"
                      },
                      {
                        "hexValue": "56657374696e673a2056657374696e6720686173206265656e20636c61696d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5027:34:73",
                        "type": "",
                        "value": "Vesting: Vesting has been claime"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5000:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5000:62:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5000:62:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5082:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5093:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5078:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5078:18:73"
                      },
                      {
                        "hexValue": "6421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5098:4:73",
                        "type": "",
                        "value": "d!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5071:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5071:32:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5071:32:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5112:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5124:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5135:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5120:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5120:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5112:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4898:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4912:4:73",
                "type": ""
              }
            ],
            "src": "4747:398:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5297:147:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5314:3:73"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5327:2:73",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5331:6:73"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5323:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5323:15:73"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5344:26:73",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "5340:3:73"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5340:31:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5319:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5319:53:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5307:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5307:66:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5307:66:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5393:3:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5398:2:73",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5389:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5389:12:73"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5403:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5382:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5382:28:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5382:28:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5419:19:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5430:3:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5435:2:73",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5426:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5426:12:73"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5419:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5265:3:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5270:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5278:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5289:3:73",
                "type": ""
              }
            ],
            "src": "5150:294:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5623:233:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5640:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5651:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5633:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5633:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5633:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5674:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5685:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5670:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5670:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5690:2:73",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5663:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5663:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5663:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5713:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5724:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5709:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5709:18:73"
                      },
                      {
                        "hexValue": "56657374696e673a204164647265737320686173206e6f2056657374696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5729:34:73",
                        "type": "",
                        "value": "Vesting: Address has no Vesting "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5702:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5702:62:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5702:62:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5784:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5795:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5780:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5780:18:73"
                      },
                      {
                        "hexValue": "616c6c6f636174696f6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5800:13:73",
                        "type": "",
                        "value": "allocation!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5773:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5773:41:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5773:41:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5823:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5835:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5846:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5831:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5831:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5823:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5600:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5614:4:73",
                "type": ""
              }
            ],
            "src": "5449:407:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6035:229:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6052:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6063:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6045:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6045:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6045:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6086:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6097:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6082:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6082:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6102:2:73",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6075:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6075:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6075:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6125:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6136:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6121:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6121:18:73"
                      },
                      {
                        "hexValue": "56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6141:34:73",
                        "type": "",
                        "value": "Vesting: Invalid new merkle root"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6114:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6114:62:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6114:62:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6196:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6207:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6192:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6192:18:73"
                      },
                      {
                        "hexValue": "2076616c756521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6212:9:73",
                        "type": "",
                        "value": " value!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6185:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6185:37:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6185:37:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6231:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6243:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6254:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6239:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6239:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6231:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6012:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6026:4:73",
                "type": ""
              }
            ],
            "src": "5861:403:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6317:80:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6344:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6346:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6346:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6346:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6333:1:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6340:1:73"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6336:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6336:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6330:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6330:13:73"
                  },
                  "nodeType": "YulIf",
                  "src": "6327:39:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6375:16:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6386:1:73"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6389:1:73"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6382:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6382:9:73"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6375:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6300:1:73",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6303:1:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6309:3:73",
                "type": ""
              }
            ],
            "src": "6269:128:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6531:175:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6541:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6553:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6564:2:73",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6549:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6541:4:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6576:29:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6594:3:73",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6599:1:73",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6590:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6590:11:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6603:1:73",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6586:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6586:19:73"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6580:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6621:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6636:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6644:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6632:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6632:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6614:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6614:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6614:34:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6668:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6679:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6664:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6664:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6688:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6696:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6684:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6684:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6657:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6657:43:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6657:43:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6492:9:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6503:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6511:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6522:4:73",
                "type": ""
              }
            ],
            "src": "6402:304:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6885:166:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6902:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6913:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6895:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6895:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6895:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6936:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6947:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6932:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6932:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6952:2:73",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6925:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6925:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6975:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6986:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6971:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6971:18:73"
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6991:18:73",
                        "type": "",
                        "value": "Nothing to fund."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6964:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6964:46:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6964:46:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7019:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7031:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7042:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7027:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7027:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7019:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6862:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6876:4:73",
                "type": ""
              }
            ],
            "src": "6711:340:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7213:218:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7223:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7235:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7246:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7231:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7231:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7223:4:73"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7258:29:73",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7276:3:73",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7281:1:73",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7272:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7272:11:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7285:1:73",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7268:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7268:19:73"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7262:2:73",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7303:9:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7318:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7326:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7314:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7314:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7296:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7296:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7296:34:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7350:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7361:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7346:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7346:18:73"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7370:6:73"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7378:2:73"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7366:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7366:15:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7339:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7339:43:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7339:43:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7402:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7413:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7398:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7398:18:73"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7418:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7391:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7391:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7391:34:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7166:9:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7177:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7185:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7193:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7204:4:73",
                "type": ""
              }
            ],
            "src": "7056:375:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7593:162:73",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7603:26:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7615:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7626:2:73",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7611:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7611:18:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7603:4:73"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7645:9:73"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7656:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7638:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7638:25:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7638:25:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7683:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7694:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7679:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7679:18:73"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7699:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7672:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7672:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7672:34:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7726:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7737:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7722:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7722:18:73"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7742:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7715:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7715:34:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7715:34:73"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7546:9:73",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7557:6:73",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7565:6:73",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7573:6:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7584:4:73",
                "type": ""
              }
            ],
            "src": "7436:319:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7934:228:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7951:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7962:2:73",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7944:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7944:21:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7944:21:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7985:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7996:2:73",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7981:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7981:18:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8001:2:73",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7974:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7974:30:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7974:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8024:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8035:2:73",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8020:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8020:18:73"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8040:34:73",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8013:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8013:62:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8013:62:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8095:9:73"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8106:2:73",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8091:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8091:18:73"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8111:8:73",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8084:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8084:36:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8084:36:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8129:27:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8141:9:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8152:3:73",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8137:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8137:19:73"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8129:4:73"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7911:9:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7925:4:73",
                "type": ""
              }
            ],
            "src": "7760:402:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8199:95:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8216:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8223:3:73",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8228:10:73",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8219:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8219:20:73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8209:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8209:31:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8209:31:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8256:1:73",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8259:4:73",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8249:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8249:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8249:15:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8280:1:73",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8283:4:73",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8273:6:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8273:15:73"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8273:15:73"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "8167:127:73"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8346:88:73",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8377:22:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8379:16:73"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8379:18:73"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8379:18:73"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8362:5:73"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8373:1:73",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8369:3:73"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8369:6:73"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8359:2:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8359:17:73"
                  },
                  "nodeType": "YulIf",
                  "src": "8356:43:73"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8408:20:73",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8419:5:73"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8426:1:73",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8415:3:73"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8415:13:73"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8408:3:73"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8328:5:73",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8338:3:73",
                "type": ""
              }
            ],
            "src": "8299:135:73"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$2806__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"amount is grater than balanace\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Vesting: Vesting has been claime\")\n        mstore(add(headStart, 96), \"d!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Vesting: Address has no Vesting \")\n        mstore(add(headStart, 96), \"allocation!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Vesting: Invalid new merkle root\")\n        mstore(add(headStart, 96), \" value!\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Nothing to fund.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
      "id": 73,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "607:4517:39:-:0;;;917:1;893:25;;1484:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:3;719:10:27;921:18:3;:32::i;:::-;991:5:5;981:15;;-1:-1:-1;;;;981:15:5;;;1526:11:39;:26;;-1:-1:-1;;;;;;1526:26:39;-1:-1:-1;;;;;1526:26:39;;;;;;;;;;607:4517;;2279:187:3;2352:16;2371:6;;-1:-1:-1;;;;;2387:17:3;;;-1:-1:-1;;;;;;2387:17:3;;;;;;2419:40;;2371:6;;;;;;;2419:40;;2352:16;2419:40;2342:124;2279:187;:::o;14:304:73:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:73;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:73:o;:::-;607:4517:39;;;;;;",
  "deployedSourceMap": "607:4517:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;893:25;;;;;;;;;160::73;;;148:2;133:18;893:25:39;;;;;;;;2007:159;;;;;;:::i;:::-;;:::i;3375:426::-;;;;;;:::i;:::-;;:::i;:::-;;;728:14:73;;721:22;703:41;;691:2;676:18;3375:426:39;563:187:73;766:29:39;;;;;;1712:119;;;:::i;1098:84:5:-;1145:4;1168:7;-1:-1:-1;;;1168:7:5;;;;1098:84;;4317:805:39;;;;;;:::i;:::-;;:::i;1677:101:3:-;;;:::i;:::-;;3871:268:39;;;;;;:::i;:::-;;:::i;1036:94:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;1036:94;;;-1:-1:-1;;;;;1860:32:73;;;1842:51;;1830:2;1815:18;1036:94:3;1696:203:73;862:24:39;;;;;-1:-1:-1;;;;;862:24:39;;;925:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2510:490;;;:::i;1927:198:3:-;;;;;;:::i;:::-;;:::i;2007:159:39:-;2109:7;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2139:20:39::1;::::0;;;:12:::1;:20;::::0;;;;;;2007:159::o;3375:426::-;3441:4;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;3475:11:39::1;::::0;:36:::1;::::0;-1:-1:-1;;;3475:36:39;;3505:4:::1;3475:36;::::0;::::1;1842:51:73::0;3457:15:39::1;::::0;-1:-1:-1;;;;;3475:11:39::1;::::0;:21:::1;::::0;1815:18:73;;3475:36:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3457:54;;3522:17;3552:14;;3542:7;:24;;;;:::i;:::-;3522:44;;3598:7;3585:9;:20;;3577:63;;;::::0;-1:-1:-1;;;3577:63:39;;3431:2:73;3577:63:39::1;::::0;::::1;3413:21:73::0;3470:2;3450:18;;;3443:30;3509:32;3489:18;;;3482:60;3559:18;;3577:63:39::1;3229:354:73::0;3577:63:39::1;3659:11;::::0;:41:::1;::::0;-1:-1:-1;;;3659:41:39;;3680:10:::1;3659:41;::::0;::::1;3762:51:73::0;3829:18;;;3822:34;;;-1:-1:-1;;;;;3659:11:39;;::::1;::::0;:20:::1;::::0;3735:18:73;;3659:41:39::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3651:50;;;::::0;::::1;;3729:10;3717:56;3741:7:::0;3750:22:::1;:9:::0;3741:7;3750:13:::1;:22::i;:::-;3717:56;::::0;;4323:25:73;;;4379:2;4364:18;;4357:34;;;;4296:18;3717:56:39::1;;;;;;;-1:-1:-1::0;3790:4:39::1;::::0;3375:426;-1:-1:-1;;;3375:426:39:o;1712:119::-;1788:11;;:36;;-1:-1:-1;;;1788:36:39;;1818:4;1788:36;;;1842:51:73;1762:7:39;;-1:-1:-1;;;;;1788:11:39;;:21;;1815:18:73;;1788:36:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1781:43;;1712:119;:::o;4317:805::-;4457:4;1168:7:5;;-1:-1:-1;;;1168:7:5;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:5;;4604:2:73;1403:38:5;;;4586:21:73;4643:2;4623:18;;;4616:30;-1:-1:-1;;;4662:18:73;;;4655:46;4718:18;;1403:38:5;4402:340:73;1403:38:5;4510:10:39::1;4495:26;::::0;;;:14:::1;:26;::::0;;;;;::::1;;4494:27;4473:108;;;::::0;-1:-1:-1;;;4473:108:39;;4949:2:73;4473:108:39::1;::::0;::::1;4931:21:73::0;4988:2;4968:18;;;4961:30;5027:34;5007:18;;;5000:62;-1:-1:-1;;;5078:18:73;;;5071:32;5120:19;;4473:108:39::1;4747:398:73::0;4473:108:39::1;4591:18;4612:20:::0;;;:12:::1;:20;::::0;;;;;;;;4667:37;;-1:-1:-1;;4684:10:39::1;5327:2:73::0;5323:15;5319:53;4667:37:39;;::::1;5307:66:73::0;;;;5389:12;;;5382:28;;;4612:20:39;4591:18;5426:12:73;;4667:37:39::1;;;;;;;;;;;;4657:48;;;;;;4642:63;;4715:16;4734:44;4753:6;;4734:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4761:10:39;;-1:-1:-1;4773:4:39;;-1:-1:-1;4734:18:39::1;::::0;-1:-1:-1;4734:44:39:i:1;:::-;4715:63;;4796:11;4788:67;;;::::0;-1:-1:-1;;;4788:67:39;;5651:2:73;4788:67:39::1;::::0;::::1;5633:21:73::0;5690:2;5670:18;;;5663:30;5729:34;5709:18;;;5702:62;-1:-1:-1;;;5780:18:73;;;5773:41;5831:19;;4788:67:39::1;5449:407:73::0;4788:67:39::1;4915:10;4900:26;::::0;;;:14:::1;:26;::::0;;;;:33;;-1:-1:-1;;4900:33:39::1;4929:4;4900:33:::0;;::::1;::::0;;;4960:14;:27:::1;::::0;4979:7;4960:18:::1;:27::i;:::-;4943:14;:44:::0;5006:11:::1;::::0;:41:::1;::::0;-1:-1:-1;;;5006:41:39;;5027:10:::1;5006:41;::::0;::::1;3762:51:73::0;3829:18;;;3822:34;;;-1:-1:-1;;;;;5006:11:39;;::::1;::::0;:20:::1;::::0;3735:18:73;;5006:41:39::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4998:50;;;::::0;::::1;;5063:30;::::0;160:25:73;;;5073:10:39::1;::::0;5063:30:::1;::::0;148:2:73;133:18;5063:30:39::1;;;;;;;-1:-1:-1::0;5111:4:39::1;::::0;4317:805;-1:-1:-1;;;;;;;4317:805:39:o;1677:101:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;1741:30:::1;1768:1;1741:18;:30::i;:::-;1677:101::o:0;3871:268:39:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;3968:22:39;3947:108:::1;;;::::0;-1:-1:-1;;;3947:108:39;;6063:2:73;3947:108:39::1;::::0;::::1;6045:21:73::0;6102:2;6082:18;;;6075:30;6141:34;6121:18;;;6114:62;-1:-1:-1;;;6192:18:73;;;6185:37;6239:19;;3947:108:39::1;5861:403:73::0;3947:108:39::1;4075:6;::::0;:10:::1;::::0;4084:1:::1;4075:10;:::i;:::-;4066:6;:19:::0;;;4095:20:::1;::::0;;;:12:::1;:20;::::0;;;;:37;3871:268::o;2510:490::-;2554:4;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;2628:11:39::1;::::0;:48:::1;::::0;-1:-1:-1;;;2628:48:39;;2650:10:::1;2628:48;::::0;::::1;6614:34:73::0;2670:4:39::1;6664:18:73::0;;;6657:43;2608:17:39::1;::::0;-1:-1:-1;;;;;2628:11:39::1;::::0;:21:::1;::::0;6549:18:73;;2628:48:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2608:68;;2706:1;2694:9;:13;2686:42;;;::::0;-1:-1:-1;;;2686:42:39;;6913:2:73;2686:42:39::1;::::0;::::1;6895:21:73::0;6952:2;6932:18;;;6925:30;-1:-1:-1;;;6971:18:73;;;6964:46;7027:18;;2686:42:39::1;6711:340:73::0;2686:42:39::1;2778:15;2796:19;:17;:19::i;:::-;2834:11;::::0;:62:::1;::::0;-1:-1:-1;;;2834:62:39;;2859:10:::1;2834:62;::::0;::::1;7296:34:73::0;2879:4:39::1;7346:18:73::0;;;7339:43;7398:18;;;7391:34;;;2778:37:39;;-1:-1:-1;;;;;;2834:11:39::1;::::0;:24:::1;::::0;7231:18:73;;2834:62:39::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2826:71;;;::::0;::::1;;2920:10;2913:59;2932:9:::0;2943:7;2952:19:::1;:17;:19::i;:::-;2913:59;::::0;;7638:25:73;;;7694:2;7679:18;;7672:34;;;;7722:18;;;7715:34;7626:2;7611:18;2913:59:39::1;;;;;;;2989:4;2982:11;;;;2510:490:::0;:::o;1927:198:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:27;1257:23:3;1249:68;;;;-1:-1:-1;;;1249:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2015:22:3;::::1;2007:73;;;::::0;-1:-1:-1;;;2007:73:3;;7962:2:73;2007:73:3::1;::::0;::::1;7944:21:73::0;8001:2;7981:18;;;7974:30;8040:34;8020:18;;;8013:62;-1:-1:-1;;;8091:18:73;;;8084:36;8137:19;;2007:73:3::1;7760:402:73::0;2007:73:3::1;2090:28;2109:8;2090:18;:28::i;:::-;1927:198:::0;:::o;3108:96:37:-;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:37:o;862:184:31:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:31:o;2741:96:37:-;2799:7;2825:5;2829:1;2825;:5;:::i;2279:187:3:-;2352:16;2371:6;;-1:-1:-1;;;;;2387:17:3;;;-1:-1:-1;;;;;;2387:17:3;;;;;;2419:40;;2371:6;;;;;;;2419:40;;2352:16;2419:40;2342:124;2279:187;:::o;1398:662:31:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:31;;;;:::i;:::-;;;;1537:488;;;-1:-1:-1;2041:12:31;1398:662;-1:-1:-1;;;1398:662:31:o;196:180:73:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:73;;196:180;-1:-1:-1;196:180:73:o;755:751::-;859:6;867;875;883;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;988:9;975:23;965:33;;1049:2;1038:9;1034:18;1021:32;1072:18;1113:2;1105:6;1102:14;1099:34;;;1129:1;1126;1119:12;1099:34;1167:6;1156:9;1152:22;1142:32;;1212:7;1205:4;1201:2;1197:13;1193:27;1183:55;;1234:1;1231;1224:12;1183:55;1274:2;1261:16;1300:2;1292:6;1289:14;1286:34;;;1316:1;1313;1306:12;1286:34;1369:7;1364:2;1354:6;1351:1;1347:14;1343:2;1339:23;1335:32;1332:45;1329:65;;;1390:1;1387;1380:12;1329:65;755:751;;1421:2;1413:11;;;;;-1:-1:-1;1443:6:73;;1496:2;1481:18;1468:32;;-1:-1:-1;755:751:73;-1:-1:-1;;;755:751:73:o;2126:286::-;2185:6;2238:2;2226:9;2217:7;2213:23;2209:32;2206:52;;;2254:1;2251;2244:12;2206:52;2280:23;;-1:-1:-1;;;;;2332:31:73;;2322:42;;2312:70;;2378:1;2375;2368:12;2417:356;2619:2;2601:21;;;2638:18;;;2631:30;2697:34;2692:2;2677:18;;2670:62;2764:2;2749:18;;2417:356::o;2778:184::-;2848:6;2901:2;2889:9;2880:7;2876:23;2872:32;2869:52;;;2917:1;2914;2907:12;2869:52;-1:-1:-1;2940:16:73;;2778:184;-1:-1:-1;2778:184:73:o;2967:127::-;3028:10;3023:3;3019:20;3016:1;3009:31;3059:4;3056:1;3049:15;3083:4;3080:1;3073:15;3099:125;3139:4;3167:1;3164;3161:8;3158:34;;;3172:18;;:::i;:::-;-1:-1:-1;3209:9:73;;3099:125::o;3867:277::-;3934:6;3987:2;3975:9;3966:7;3962:23;3958:32;3955:52;;;4003:1;4000;3993:12;3955:52;4035:9;4029:16;4088:5;4081:13;4074:21;4067:5;4064:32;4054:60;;4110:1;4107;4100:12;6269:128;6309:3;6340:1;6336:6;6333:1;6330:13;6327:39;;;6346:18;;:::i;:::-;-1:-1:-1;6382:9:73;;6269:128::o;8167:127::-;8228:10;8223:3;8219:20;8216:1;8209:31;8259:4;8256:1;8249:15;8283:4;8280:1;8273:15;8299:135;8338:3;-1:-1:-1;;8359:17:73;;8356:43;;;8379:18;;:::i;:::-;-1:-1:-1;8426:1:73;8415:13;;8299:135::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\n\n/**\n * @title Vesting\n * @dev A token holder contract that can release its token balance gradually like a\n * typical vesting scheme, vesting period. Optionally revocable by the\n * creator.\n */\ncontract VestingBase is Ownable, Pausable {\n    using SafeMath for uint256;\n\n    ///@notice The sum total amount of tokens withdrawn from all allocations.\n    uint256 public totalWithdrawn;\n\n    ///@notice The ERC20 contract of the coin being vested.\n    ERC20 public vestingCoin;\n\n    uint256 public Rounds = 0;\n\n    mapping(address => bool) public vestingClaimed;\n    mapping(uint256 => bytes32) private RootToRounds;\n\n    ///Events;\n    event Funded(\n        address indexed _funder,\n        uint256 _amount,\n        uint256 _previousCap,\n        uint256 _newCap\n    );\n    event FundRemoved(\n        address indexed _address,\n        uint256 _amount,\n        uint256 _remainingInPool\n    );\n    event Withdrawn(address indexed _address, uint256 _amount);\n\n    ///@notice Constructs this contract\n    ///@param _vestingCoin The ERC20 contract of the coin being vested.\n\n    constructor(ERC20 _vestingCoin) {\n        vestingCoin = _vestingCoin;\n    }\n\n    ///@notice The Vesting Token balance of this smart contract.\n    ///@return Returns the closing balance of vesting coin held by this contract.\n    function getAvailableFunds() public view returns (uint256) {\n        return vestingCoin.balanceOf(address(this));\n    }\n\n    ///@notice Gets the markle tree of each vesting Rounds.\n    ///@param _round The round of which markleTree to be viewed.\n    ///@return Returns Total vested balance.\n    function getMerkleRoot(uint256 _round)\n        public\n        view\n        onlyOwner\n        returns (bytes32)\n    {\n        return RootToRounds[_round];\n    }\n\n    ///@notice Enables this vesting contract to receive the ERC20 (vesting coin).\n    ///Before calling this function please approve your desired amount of the coin\n    ///for this smart contract address.\n    ///Please note that this action is restricted to administrators only.\n    ///@return Returns true if the funding was successful.\n    function fund() external onlyOwner returns (bool) {\n        ///Check the funds available.\n        uint256 allowance = vestingCoin.allowance(msg.sender, address(this));\n        require(allowance > 0, \"Nothing to fund.\");\n\n        ///Get the current allocation.\n        uint256 current = getAvailableFunds();\n\n        require(vestingCoin.transferFrom(msg.sender, address(this), allowance));\n\n        emit Funded(msg.sender, allowance, current, getAvailableFunds());\n        return true;\n    }\n\n    ///@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n    ///Please note that this action is restricted to administrators only\n    ///and you may only withdraw amounts above the sum total allocation balances.\n    ///@param _amount The amount desired to withdraw.\n    ///@return Returns true if the withdrawal was successful.\n    function removeFunds(uint256 _amount) external onlyOwner returns (bool) {\n        uint256 balance = vestingCoin.balanceOf(address(this));\n\n        uint256 available = balance - totalWithdrawn;\n\n        require(available >= _amount, \"amount is grater than balanace\");\n\n        require(vestingCoin.transfer(msg.sender, _amount));\n\n        emit FundRemoved(msg.sender, _amount, available.sub(_amount));\n        return true;\n    }\n\n    ///@notice This action enables admin to set newMarkelRoot.\n\n    function setMerkleRoot(bytes32 _newMerkleRoot) external onlyOwner {\n        require(\n            _newMerkleRoot != 0x00,\n            \"Vesting: Invalid new merkle root value!\"\n        );\n\n        Rounds = Rounds + 1;\n        RootToRounds[Rounds] = _newMerkleRoot;\n    }\n\n    ///@notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n    ///@param _amount The amount in vesting coin desired to withdraw.\n    function withdraw(\n        uint256 _amount,\n        bytes32[] calldata _proof,\n        uint256 _round\n    ) external whenNotPaused returns (bool) {\n        require(\n            !vestingClaimed[msg.sender],\n            \"Vesting: Vesting has been claimed!\"\n        );\n        bytes32 merkleRoot = RootToRounds[_round];\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender, _amount));\n        bool isValidLeaf = MerkleProof.verify(_proof, merkleRoot, leaf);\n        require(isValidLeaf, \"Vesting: Address has no Vesting allocation!\");\n\n        // Set address to claimed\n        vestingClaimed[msg.sender] = true;\n        totalWithdrawn = totalWithdrawn.add(_amount);\n\n        require(vestingCoin.transfer(msg.sender, _amount));\n        emit Withdrawn(msg.sender, _amount);\n\n        return true;\n    }\n}",
  "sourcePath": "C:\\Users\\user\\Desktop\\alpsfinance-smart-contracts\\contracts\\Vesting\\VestingBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/Vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        5297
      ],
      "ERC20": [
        2806
      ],
      "IERC20": [
        2884
      ],
      "IERC20Metadata": [
        3590
      ],
      "MerkleProof": [
        6074
      ],
      "Ownable": [
        532
      ],
      "Pausable": [
        702
      ],
      "SafeMath": [
        7057
      ],
      "VestingBase": [
        7421
      ]
    },
    "id": 7422,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7092,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:39"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7093,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 2885,
        "src": "63:56:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7094,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 7058,
        "src": "120:57:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 7095,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 2807,
        "src": "178:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7096,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 703,
        "src": "234:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7097,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 533,
        "src": "290:52:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 7098,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 6075,
        "src": "343:68:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7100,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "631:7:39"
            },
            "id": 7101,
            "nodeType": "InheritanceSpecifier",
            "src": "631:7:39"
          },
          {
            "baseName": {
              "id": 7102,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 702,
              "src": "640:8:39"
            },
            "id": 7103,
            "nodeType": "InheritanceSpecifier",
            "src": "640:8:39"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7099,
          "nodeType": "StructuredDocumentation",
          "src": "414:192:39",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 7421,
        "linearizedBaseContracts": [
          7421,
          702,
          532,
          5297
        ],
        "name": "VestingBase",
        "nameLocation": "616:11:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7106,
            "libraryName": {
              "id": 7104,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "661:8:39"
            },
            "nodeType": "UsingForDirective",
            "src": "655:27:39",
            "typeName": {
              "id": 7105,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "674:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 7107,
              "nodeType": "StructuredDocumentation",
              "src": "688:73:39",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 7109,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "781:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "766:29:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "766:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7110,
              "nodeType": "StructuredDocumentation",
              "src": "802:55:39",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 7113,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "875:11:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "862:24:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2806",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 7112,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7111,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2806,
                "src": "862:5:39"
              },
              "referencedDeclaration": 2806,
              "src": "862:5:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2806",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "02438b2d",
            "id": 7116,
            "mutability": "mutable",
            "name": "Rounds",
            "nameLocation": "908:6:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "893:25:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "893:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 7115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "917:1:39",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa880dc4",
            "id": 7120,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "957:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "925:46:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7119,
              "keyType": {
                "id": 7117,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "933:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "925:24:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7118,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "944:4:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7124,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "1013:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "977:48:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 7123,
              "keyType": {
                "id": 7121,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "977:27:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 7122,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "996:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7125,
              "nodeType": "StructuredDocumentation",
              "src": "1032:10:39",
              "text": "Events;"
            },
            "id": 7135,
            "name": "Funded",
            "nameLocation": "1053:6:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7127,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_funder",
                  "nameLocation": "1085:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "1069:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1110:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "1102:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_previousCap",
                  "nameLocation": "1135:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "1127:20:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newCap",
                  "nameLocation": "1165:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "1157:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1059:119:39"
            },
            "src": "1047:132:39"
          },
          {
            "anonymous": false,
            "id": 7143,
            "name": "FundRemoved",
            "nameLocation": "1190:11:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7137,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1227:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7143,
                  "src": "1211:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1253:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7143,
                  "src": "1245:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_remainingInPool",
                  "nameLocation": "1278:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7143,
                  "src": "1270:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1201:99:39"
            },
            "src": "1184:117:39"
          },
          {
            "anonymous": false,
            "id": 7149,
            "name": "Withdrawn",
            "nameLocation": "1312:9:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7145,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1338:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7149,
                  "src": "1322:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1356:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7149,
                  "src": "1348:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1321:43:39"
            },
            "src": "1306:59:39"
          },
          {
            "body": {
              "id": 7160,
              "nodeType": "Block",
              "src": "1516:43:39",
              "statements": [
                {
                  "expression": {
                    "id": 7158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7156,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7113,
                      "src": "1526:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7157,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7153,
                      "src": "1540:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1526:26:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 7159,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:26:39"
                }
              ]
            },
            "documentation": {
              "id": 7150,
              "nodeType": "StructuredDocumentation",
              "src": "1371:108:39",
              "text": "@notice Constructs this contract\n@param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 7161,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7153,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1502:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7161,
                  "src": "1496:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2806",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7152,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7151,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2806,
                      "src": "1496:5:39"
                    },
                    "referencedDeclaration": 2806,
                    "src": "1496:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1495:20:39"
            },
            "returnParameters": {
              "id": 7155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1516:0:39"
            },
            "scope": 7421,
            "src": "1484:75:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7175,
              "nodeType": "Block",
              "src": "1771:60:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7171,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1818:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1810:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1810:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1810:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7167,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "1788:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "1788:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7166,
                  "id": 7174,
                  "nodeType": "Return",
                  "src": "1781:43:39"
                }
              ]
            },
            "documentation": {
              "id": 7162,
              "nodeType": "StructuredDocumentation",
              "src": "1565:142:39",
              "text": "@notice The Vesting Token balance of this smart contract.\n@return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 7176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1721:17:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1738:2:39"
            },
            "returnParameters": {
              "id": 7166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7176,
                  "src": "1762:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:9:39"
            },
            "scope": 7421,
            "src": "1712:119:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7190,
              "nodeType": "Block",
              "src": "2122:44:39",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7186,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7124,
                      "src": "2139:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7188,
                    "indexExpression": {
                      "id": 7187,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7179,
                      "src": "2152:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2139:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7185,
                  "id": 7189,
                  "nodeType": "Return",
                  "src": "2132:27:39"
                }
              ]
            },
            "documentation": {
              "id": 7177,
              "nodeType": "StructuredDocumentation",
              "src": "1837:165:39",
              "text": "@notice Gets the markle tree of each vesting Rounds.\n@param _round The round of which markleTree to be viewed.\n@return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 7191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2082:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2082:9:39"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "2016:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7179,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2038:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7191,
                  "src": "2030:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:16:39"
            },
            "returnParameters": {
              "id": 7185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7191,
                  "src": "2109:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7183,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2108:9:39"
            },
            "scope": 7421,
            "src": "2007:159:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7249,
              "nodeType": "Block",
              "src": "2560:440:39",
              "statements": [
                {
                  "assignments": [
                    7201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7201,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "2616:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7249,
                      "src": "2608:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2608:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check the funds available.",
                  "id": 7211,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2650:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2650:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2670:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2662:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2662:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2662:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7202,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "2628:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2360,
                      "src": "2628:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 7210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2628:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2608:68:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7213,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7201,
                          "src": "2694:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2706:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2694:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2709:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        },
                        "value": "Nothing to fund."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        }
                      ],
                      "id": 7212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2686:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2686:42:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7218,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:42:39"
                },
                {
                  "assignments": [
                    7221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7221,
                      "mutability": "mutable",
                      "name": "current",
                      "nameLocation": "2786:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7249,
                      "src": "2778:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2778:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the current allocation.",
                  "id": 7224,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7222,
                      "name": "getAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7176,
                      "src": "2796:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2796:19:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2778:37:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7228,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2859:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2859:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 7232,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2879:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestingBase_$7421",
                                  "typeString": "contract VestingBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VestingBase_$7421",
                                  "typeString": "contract VestingBase"
                                }
                              ],
                              "id": 7231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2871:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7230,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2871:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2871:13:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7234,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7201,
                            "src": "2886:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7226,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "2834:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2418,
                          "src": "2834:24:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2834:62:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2826:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2826:71:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7237,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:71:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2920:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2920:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7241,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7201,
                        "src": "2932:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7242,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7221,
                        "src": "2943:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7243,
                          "name": "getAvailableFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7176,
                          "src": "2952:17:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 7244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2952:19:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7238,
                      "name": "Funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7135,
                      "src": "2913:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:59:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7246,
                  "nodeType": "EmitStatement",
                  "src": "2908:64:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2989:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7198,
                  "id": 7248,
                  "nodeType": "Return",
                  "src": "2982:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7192,
              "nodeType": "StructuredDocumentation",
              "src": "2172:333:39",
              "text": "@notice Enables this vesting contract to receive the ERC20 (vesting coin).\nBefore calling this function please approve your desired amount of the coin\nfor this smart contract address.\nPlease note that this action is restricted to administrators only.\n@return Returns true if the funding was successful."
            },
            "functionSelector": "b60d4288",
            "id": 7250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7195,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7194,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2535:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2535:9:39"
              }
            ],
            "name": "fund",
            "nameLocation": "2519:4:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2523:2:39"
            },
            "returnParameters": {
              "id": 7198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7250,
                  "src": "2554:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2553:6:39"
            },
            "scope": 7421,
            "src": "2510:490:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7304,
              "nodeType": "Block",
              "src": "3447:354:39",
              "statements": [
                {
                  "assignments": [
                    7261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7261,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3465:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7304,
                      "src": "3457:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3457:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7269,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7266,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3505:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3497:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3497:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3497:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7262,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "3475:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "3475:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3457:54:39"
                },
                {
                  "assignments": [
                    7271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7271,
                      "mutability": "mutable",
                      "name": "available",
                      "nameLocation": "3530:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7304,
                      "src": "3522:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3522:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7275,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7272,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7261,
                      "src": "3542:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 7273,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "3552:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3542:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3522:44:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7277,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7271,
                          "src": "3585:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7278,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7253,
                          "src": "3598:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3585:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 7280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3607:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 7276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3577:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:63:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7282,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:63:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7286,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3680:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3680:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7288,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7253,
                            "src": "3692:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7284,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "3659:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "3659:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3659:41:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3651:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3651:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7291,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:50:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3729:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3729:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7295,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7253,
                        "src": "3741:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7298,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7253,
                            "src": "3764:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7296,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7271,
                            "src": "3750:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6936,
                          "src": "3750:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3750:22:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7292,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7143,
                      "src": "3717:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 7300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:56:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7301,
                  "nodeType": "EmitStatement",
                  "src": "3712:61:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3790:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7259,
                  "id": 7303,
                  "nodeType": "Return",
                  "src": "3783:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7251,
              "nodeType": "StructuredDocumentation",
              "src": "3006:364:39",
              "text": "@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\nPlease note that this action is restricted to administrators only\nand you may only withdraw amounts above the sum total allocation balances.\n@param _amount The amount desired to withdraw.\n@return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 7305,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7256,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7255,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "3422:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3422:9:39"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "3384:11:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7253,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3404:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7305,
                  "src": "3396:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3395:17:39"
            },
            "returnParameters": {
              "id": 7259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7258,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7305,
                  "src": "3441:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3441:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3440:6:39"
            },
            "scope": 7421,
            "src": "3375:426:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7332,
              "nodeType": "Block",
              "src": "3937:202:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7314,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7308,
                          "src": "3968:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 7315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3986:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "3968:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 7317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4004:41:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be",
                          "typeString": "literal_string \"Vesting: Invalid new merkle root value!\""
                        },
                        "value": "Vesting: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be",
                          "typeString": "literal_string \"Vesting: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 7313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3947:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3947:108:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7319,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:108:39"
                },
                {
                  "expression": {
                    "id": 7324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7320,
                      "name": "Rounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7116,
                      "src": "4066:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7321,
                        "name": "Rounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7116,
                        "src": "4075:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 7322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4084:1:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4075:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4066:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7325,
                  "nodeType": "ExpressionStatement",
                  "src": "4066:19:39"
                },
                {
                  "expression": {
                    "id": 7330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7326,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7124,
                        "src": "4095:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 7328,
                      "indexExpression": {
                        "id": 7327,
                        "name": "Rounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7116,
                        "src": "4108:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4095:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7329,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7308,
                      "src": "4118:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4095:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7331,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:37:39"
                }
              ]
            },
            "documentation": {
              "id": 7306,
              "nodeType": "StructuredDocumentation",
              "src": "3807:59:39",
              "text": "@notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7cb64759",
            "id": 7333,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7310,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "3927:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3927:9:39"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "3880:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7308,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "3902:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7333,
                  "src": "3894:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7307,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3893:24:39"
            },
            "returnParameters": {
              "id": 7312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3937:0:39"
            },
            "scope": 7421,
            "src": "3871:268:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7419,
              "nodeType": "Block",
              "src": "4463:659:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4494:27:39",
                        "subExpression": {
                          "baseExpression": {
                            "id": 7349,
                            "name": "vestingClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7120,
                            "src": "4495:14:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 7352,
                          "indexExpression": {
                            "expression": {
                              "id": 7350,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4510:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4510:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4495:26:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 7354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4535:36:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737",
                          "typeString": "literal_string \"Vesting: Vesting has been claimed!\""
                        },
                        "value": "Vesting: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737",
                          "typeString": "literal_string \"Vesting: Vesting has been claimed!\""
                        }
                      ],
                      "id": 7348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4473:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4473:108:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7356,
                  "nodeType": "ExpressionStatement",
                  "src": "4473:108:39"
                },
                {
                  "assignments": [
                    7358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7358,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "4599:10:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7419,
                      "src": "4591:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7357,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4591:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7362,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7359,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7124,
                      "src": "4612:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7361,
                    "indexExpression": {
                      "id": 7360,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7341,
                      "src": "4625:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4612:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4591:41:39"
                },
                {
                  "assignments": [
                    7364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7364,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "4650:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7419,
                      "src": "4642:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7363,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4642:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7373,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7368,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4684:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4684:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7370,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7336,
                            "src": "4696:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7366,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4667:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4667:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4667:37:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7365,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4657:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4657:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4642:63:39"
                },
                {
                  "assignments": [
                    7375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7375,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "4720:11:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7419,
                      "src": "4715:16:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7374,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4715:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7382,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7378,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7339,
                        "src": "4753:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 7379,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7358,
                        "src": "4761:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7380,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7364,
                        "src": "4773:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 7376,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6074,
                        "src": "4734:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$6074_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 7377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6005,
                      "src": "4734:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 7381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4734:44:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4715:63:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7384,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7375,
                        "src": "4796:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 7385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4809:45:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8",
                          "typeString": "literal_string \"Vesting: Address has no Vesting allocation!\""
                        },
                        "value": "Vesting: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8",
                          "typeString": "literal_string \"Vesting: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 7383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4788:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:67:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7387,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:67:39"
                },
                {
                  "expression": {
                    "id": 7393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7388,
                        "name": "vestingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7120,
                        "src": "4900:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7391,
                      "indexExpression": {
                        "expression": {
                          "id": 7389,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4915:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4915:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4900:26:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4929:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4900:33:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7394,
                  "nodeType": "ExpressionStatement",
                  "src": "4900:33:39"
                },
                {
                  "expression": {
                    "id": 7400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7395,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "4943:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7398,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7336,
                          "src": "4979:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7396,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7109,
                          "src": "4960:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "4960:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4960:27:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4943:44:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7401,
                  "nodeType": "ExpressionStatement",
                  "src": "4943:44:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7405,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5027:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5027:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7407,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7336,
                            "src": "5039:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7403,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "5006:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "5006:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5006:41:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4998:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4998:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7410,
                  "nodeType": "ExpressionStatement",
                  "src": "4998:50:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5073:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5073:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7414,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7336,
                        "src": "5085:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7411,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7149,
                      "src": "5063:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5063:30:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7416,
                  "nodeType": "EmitStatement",
                  "src": "5058:35:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5111:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7347,
                  "id": 7418,
                  "nodeType": "Return",
                  "src": "5104:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7334,
              "nodeType": "StructuredDocumentation",
              "src": "4145:167:39",
              "text": "@notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n@param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 7420,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7343,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 658,
                  "src": "4434:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4434:13:39"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4326:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7336,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4352:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "4344:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4344:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7339,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "4388:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "4369:25:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7337,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4369:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 7338,
                    "nodeType": "ArrayTypeName",
                    "src": "4369:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7341,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "4412:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "4404:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4404:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4334:90:39"
            },
            "returnParameters": {
              "id": 7347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "4457:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7345,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4457:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4456:6:39"
            },
            "scope": 7421,
            "src": "4317:805:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7422,
        "src": "607:4517:39",
        "usedErrors": []
      }
    ],
    "src": "37:5087:39"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        5297
      ],
      "ERC20": [
        2806
      ],
      "IERC20": [
        2884
      ],
      "IERC20Metadata": [
        3590
      ],
      "MerkleProof": [
        6074
      ],
      "Ownable": [
        532
      ],
      "Pausable": [
        702
      ],
      "SafeMath": [
        7057
      ],
      "VestingBase": [
        7421
      ]
    },
    "id": 7422,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7092,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:39"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7093,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 2885,
        "src": "63:56:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 7094,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 7058,
        "src": "120:57:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 7095,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 2807,
        "src": "178:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 7096,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 703,
        "src": "234:55:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7097,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 533,
        "src": "290:52:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 7098,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7422,
        "sourceUnit": 6075,
        "src": "343:68:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7100,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "631:7:39"
            },
            "id": 7101,
            "nodeType": "InheritanceSpecifier",
            "src": "631:7:39"
          },
          {
            "baseName": {
              "id": 7102,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 702,
              "src": "640:8:39"
            },
            "id": 7103,
            "nodeType": "InheritanceSpecifier",
            "src": "640:8:39"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7099,
          "nodeType": "StructuredDocumentation",
          "src": "414:192:39",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 7421,
        "linearizedBaseContracts": [
          7421,
          702,
          532,
          5297
        ],
        "name": "VestingBase",
        "nameLocation": "616:11:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7106,
            "libraryName": {
              "id": 7104,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7057,
              "src": "661:8:39"
            },
            "nodeType": "UsingForDirective",
            "src": "655:27:39",
            "typeName": {
              "id": 7105,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "674:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 7107,
              "nodeType": "StructuredDocumentation",
              "src": "688:73:39",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 7109,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "781:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "766:29:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "766:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 7110,
              "nodeType": "StructuredDocumentation",
              "src": "802:55:39",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 7113,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "875:11:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "862:24:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2806",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 7112,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7111,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2806,
                "src": "862:5:39"
              },
              "referencedDeclaration": 2806,
              "src": "862:5:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2806",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "02438b2d",
            "id": 7116,
            "mutability": "mutable",
            "name": "Rounds",
            "nameLocation": "908:6:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "893:25:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "893:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 7115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "917:1:39",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa880dc4",
            "id": 7120,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "957:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "925:46:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7119,
              "keyType": {
                "id": 7117,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "933:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "925:24:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7118,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "944:4:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7124,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "1013:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 7421,
            "src": "977:48:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 7123,
              "keyType": {
                "id": 7121,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "977:27:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 7122,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "996:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7125,
              "nodeType": "StructuredDocumentation",
              "src": "1032:10:39",
              "text": "Events;"
            },
            "id": 7135,
            "name": "Funded",
            "nameLocation": "1053:6:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7127,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_funder",
                  "nameLocation": "1085:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "1069:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1110:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "1102:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_previousCap",
                  "nameLocation": "1135:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "1127:20:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newCap",
                  "nameLocation": "1165:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "1157:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1059:119:39"
            },
            "src": "1047:132:39"
          },
          {
            "anonymous": false,
            "id": 7143,
            "name": "FundRemoved",
            "nameLocation": "1190:11:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7137,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1227:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7143,
                  "src": "1211:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1253:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7143,
                  "src": "1245:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_remainingInPool",
                  "nameLocation": "1278:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7143,
                  "src": "1270:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1201:99:39"
            },
            "src": "1184:117:39"
          },
          {
            "anonymous": false,
            "id": 7149,
            "name": "Withdrawn",
            "nameLocation": "1312:9:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7145,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1338:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7149,
                  "src": "1322:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7147,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1356:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7149,
                  "src": "1348:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1321:43:39"
            },
            "src": "1306:59:39"
          },
          {
            "body": {
              "id": 7160,
              "nodeType": "Block",
              "src": "1516:43:39",
              "statements": [
                {
                  "expression": {
                    "id": 7158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7156,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7113,
                      "src": "1526:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7157,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7153,
                      "src": "1540:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2806",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1526:26:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 7159,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:26:39"
                }
              ]
            },
            "documentation": {
              "id": 7150,
              "nodeType": "StructuredDocumentation",
              "src": "1371:108:39",
              "text": "@notice Constructs this contract\n@param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 7161,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7153,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1502:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7161,
                  "src": "1496:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2806",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7152,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7151,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2806,
                      "src": "1496:5:39"
                    },
                    "referencedDeclaration": 2806,
                    "src": "1496:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2806",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1495:20:39"
            },
            "returnParameters": {
              "id": 7155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1516:0:39"
            },
            "scope": 7421,
            "src": "1484:75:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7175,
              "nodeType": "Block",
              "src": "1771:60:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7171,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1818:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1810:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1810:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1810:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7167,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "1788:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "1788:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7166,
                  "id": 7174,
                  "nodeType": "Return",
                  "src": "1781:43:39"
                }
              ]
            },
            "documentation": {
              "id": 7162,
              "nodeType": "StructuredDocumentation",
              "src": "1565:142:39",
              "text": "@notice The Vesting Token balance of this smart contract.\n@return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 7176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1721:17:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1738:2:39"
            },
            "returnParameters": {
              "id": 7166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7176,
                  "src": "1762:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:9:39"
            },
            "scope": 7421,
            "src": "1712:119:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7190,
              "nodeType": "Block",
              "src": "2122:44:39",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7186,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7124,
                      "src": "2139:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7188,
                    "indexExpression": {
                      "id": 7187,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7179,
                      "src": "2152:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2139:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7185,
                  "id": 7189,
                  "nodeType": "Return",
                  "src": "2132:27:39"
                }
              ]
            },
            "documentation": {
              "id": 7177,
              "nodeType": "StructuredDocumentation",
              "src": "1837:165:39",
              "text": "@notice Gets the markle tree of each vesting Rounds.\n@param _round The round of which markleTree to be viewed.\n@return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 7191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7181,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2082:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2082:9:39"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "2016:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7179,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2038:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7191,
                  "src": "2030:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:16:39"
            },
            "returnParameters": {
              "id": 7185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7191,
                  "src": "2109:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7183,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2108:9:39"
            },
            "scope": 7421,
            "src": "2007:159:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7249,
              "nodeType": "Block",
              "src": "2560:440:39",
              "statements": [
                {
                  "assignments": [
                    7201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7201,
                      "mutability": "mutable",
                      "name": "allowance",
                      "nameLocation": "2616:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7249,
                      "src": "2608:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2608:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Check the funds available.",
                  "id": 7211,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2650:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2650:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2670:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2662:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2662:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2662:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7202,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "2628:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2360,
                      "src": "2628:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 7210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2628:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2608:68:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7213,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7201,
                          "src": "2694:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 7214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2706:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2694:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f2066756e642e",
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2709:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        },
                        "value": "Nothing to fund."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d3223f42e9b24aea739762ed28dd1e6da49998afe505c5bab73455b23a3bb0f",
                          "typeString": "literal_string \"Nothing to fund.\""
                        }
                      ],
                      "id": 7212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2686:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2686:42:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7218,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:42:39"
                },
                {
                  "assignments": [
                    7221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7221,
                      "mutability": "mutable",
                      "name": "current",
                      "nameLocation": "2786:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7249,
                      "src": "2778:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2778:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get the current allocation.",
                  "id": 7224,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7222,
                      "name": "getAvailableFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7176,
                      "src": "2796:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 7223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2796:19:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2778:37:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7228,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2859:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2859:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 7232,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2879:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestingBase_$7421",
                                  "typeString": "contract VestingBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VestingBase_$7421",
                                  "typeString": "contract VestingBase"
                                }
                              ],
                              "id": 7231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2871:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7230,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2871:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2871:13:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7234,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7201,
                            "src": "2886:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7226,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "2834:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2418,
                          "src": "2834:24:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2834:62:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2826:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2826:71:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7237,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:71:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2920:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2920:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7241,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7201,
                        "src": "2932:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 7242,
                        "name": "current",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7221,
                        "src": "2943:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7243,
                          "name": "getAvailableFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7176,
                          "src": "2952:17:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 7244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2952:19:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7238,
                      "name": "Funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7135,
                      "src": "2913:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 7245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:59:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7246,
                  "nodeType": "EmitStatement",
                  "src": "2908:64:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2989:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7198,
                  "id": 7248,
                  "nodeType": "Return",
                  "src": "2982:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7192,
              "nodeType": "StructuredDocumentation",
              "src": "2172:333:39",
              "text": "@notice Enables this vesting contract to receive the ERC20 (vesting coin).\nBefore calling this function please approve your desired amount of the coin\nfor this smart contract address.\nPlease note that this action is restricted to administrators only.\n@return Returns true if the funding was successful."
            },
            "functionSelector": "b60d4288",
            "id": 7250,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7195,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7194,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2535:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2535:9:39"
              }
            ],
            "name": "fund",
            "nameLocation": "2519:4:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2523:2:39"
            },
            "returnParameters": {
              "id": 7198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7250,
                  "src": "2554:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2553:6:39"
            },
            "scope": 7421,
            "src": "2510:490:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7304,
              "nodeType": "Block",
              "src": "3447:354:39",
              "statements": [
                {
                  "assignments": [
                    7261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7261,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3465:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7304,
                      "src": "3457:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3457:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7269,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7266,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3505:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$7421",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 7265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3497:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3497:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3497:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7262,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7113,
                        "src": "3475:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "3475:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3457:54:39"
                },
                {
                  "assignments": [
                    7271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7271,
                      "mutability": "mutable",
                      "name": "available",
                      "nameLocation": "3530:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7304,
                      "src": "3522:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3522:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7275,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7272,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7261,
                      "src": "3542:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 7273,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "3552:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3542:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3522:44:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7277,
                          "name": "available",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7271,
                          "src": "3585:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7278,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7253,
                          "src": "3598:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3585:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 7280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3607:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 7276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3577:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:63:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7282,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:63:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7286,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3680:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3680:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7288,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7253,
                            "src": "3692:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7284,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "3659:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "3659:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3659:41:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3651:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3651:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7291,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:50:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3729:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3729:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7295,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7253,
                        "src": "3741:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7298,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7253,
                            "src": "3764:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7296,
                            "name": "available",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7271,
                            "src": "3750:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6936,
                          "src": "3750:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3750:22:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7292,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7143,
                      "src": "3717:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 7300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:56:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7301,
                  "nodeType": "EmitStatement",
                  "src": "3712:61:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3790:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7259,
                  "id": 7303,
                  "nodeType": "Return",
                  "src": "3783:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7251,
              "nodeType": "StructuredDocumentation",
              "src": "3006:364:39",
              "text": "@notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\nPlease note that this action is restricted to administrators only\nand you may only withdraw amounts above the sum total allocation balances.\n@param _amount The amount desired to withdraw.\n@return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 7305,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7256,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7255,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "3422:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3422:9:39"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "3384:11:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7253,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3404:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7305,
                  "src": "3396:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3395:17:39"
            },
            "returnParameters": {
              "id": 7259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7258,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7305,
                  "src": "3441:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3441:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3440:6:39"
            },
            "scope": 7421,
            "src": "3375:426:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7332,
              "nodeType": "Block",
              "src": "3937:202:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7314,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7308,
                          "src": "3968:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 7315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3986:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "3968:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 7317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4004:41:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be",
                          "typeString": "literal_string \"Vesting: Invalid new merkle root value!\""
                        },
                        "value": "Vesting: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c39264b5551c52c18921332cde0191a5e8690737c4856dab3a5c5f1fa36004be",
                          "typeString": "literal_string \"Vesting: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 7313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3947:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3947:108:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7319,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:108:39"
                },
                {
                  "expression": {
                    "id": 7324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7320,
                      "name": "Rounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7116,
                      "src": "4066:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7321,
                        "name": "Rounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7116,
                        "src": "4075:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 7322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4084:1:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4075:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4066:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7325,
                  "nodeType": "ExpressionStatement",
                  "src": "4066:19:39"
                },
                {
                  "expression": {
                    "id": 7330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7326,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7124,
                        "src": "4095:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 7328,
                      "indexExpression": {
                        "id": 7327,
                        "name": "Rounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7116,
                        "src": "4108:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4095:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7329,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7308,
                      "src": "4118:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4095:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7331,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:37:39"
                }
              ]
            },
            "documentation": {
              "id": 7306,
              "nodeType": "StructuredDocumentation",
              "src": "3807:59:39",
              "text": "@notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7cb64759",
            "id": 7333,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7310,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "3927:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3927:9:39"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "3880:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7308,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "3902:14:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7333,
                  "src": "3894:22:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7307,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3893:24:39"
            },
            "returnParameters": {
              "id": 7312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3937:0:39"
            },
            "scope": 7421,
            "src": "3871:268:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7419,
              "nodeType": "Block",
              "src": "4463:659:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4494:27:39",
                        "subExpression": {
                          "baseExpression": {
                            "id": 7349,
                            "name": "vestingClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7120,
                            "src": "4495:14:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 7352,
                          "indexExpression": {
                            "expression": {
                              "id": 7350,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4510:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4510:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4495:26:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 7354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4535:36:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737",
                          "typeString": "literal_string \"Vesting: Vesting has been claimed!\""
                        },
                        "value": "Vesting: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_997d4fca0dbb5917c035b45d694e7f15cb274f399f03d880816db8b605eea737",
                          "typeString": "literal_string \"Vesting: Vesting has been claimed!\""
                        }
                      ],
                      "id": 7348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4473:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4473:108:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7356,
                  "nodeType": "ExpressionStatement",
                  "src": "4473:108:39"
                },
                {
                  "assignments": [
                    7358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7358,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "4599:10:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7419,
                      "src": "4591:18:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7357,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4591:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7362,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7359,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7124,
                      "src": "4612:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 7361,
                    "indexExpression": {
                      "id": 7360,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7341,
                      "src": "4625:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4612:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4591:41:39"
                },
                {
                  "assignments": [
                    7364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7364,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "4650:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7419,
                      "src": "4642:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7363,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4642:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7373,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7368,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4684:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4684:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7370,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7336,
                            "src": "4696:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7366,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4667:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4667:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4667:37:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7365,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4657:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4657:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4642:63:39"
                },
                {
                  "assignments": [
                    7375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7375,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "4720:11:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 7419,
                      "src": "4715:16:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7374,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4715:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7382,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7378,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7339,
                        "src": "4753:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 7379,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7358,
                        "src": "4761:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7380,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7364,
                        "src": "4773:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 7376,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6074,
                        "src": "4734:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$6074_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 7377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6005,
                      "src": "4734:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 7381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4734:44:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4715:63:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7384,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7375,
                        "src": "4796:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e673a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 7385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4809:45:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8",
                          "typeString": "literal_string \"Vesting: Address has no Vesting allocation!\""
                        },
                        "value": "Vesting: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ff667867c5fb3ca64e3b14d9a87f807b54904ad7956f3b6d901002154d7fbd8",
                          "typeString": "literal_string \"Vesting: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 7383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4788:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4788:67:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7387,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:67:39"
                },
                {
                  "expression": {
                    "id": 7393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7388,
                        "name": "vestingClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7120,
                        "src": "4900:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7391,
                      "indexExpression": {
                        "expression": {
                          "id": 7389,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4915:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4915:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4900:26:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4929:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4900:33:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7394,
                  "nodeType": "ExpressionStatement",
                  "src": "4900:33:39"
                },
                {
                  "expression": {
                    "id": 7400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7395,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7109,
                      "src": "4943:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7398,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7336,
                          "src": "4979:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 7396,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7109,
                          "src": "4960:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6921,
                        "src": "4960:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4960:27:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4943:44:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7401,
                  "nodeType": "ExpressionStatement",
                  "src": "4943:44:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7405,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5027:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5027:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7407,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7336,
                            "src": "5039:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 7403,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7113,
                            "src": "5006:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2806",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 7404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2342,
                          "src": "5006:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 7408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5006:41:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4998:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4998:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7410,
                  "nodeType": "ExpressionStatement",
                  "src": "4998:50:39"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5073:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5073:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7414,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7336,
                        "src": "5085:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7411,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7149,
                      "src": "5063:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5063:30:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7416,
                  "nodeType": "EmitStatement",
                  "src": "5058:35:39"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5111:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7347,
                  "id": 7418,
                  "nodeType": "Return",
                  "src": "5104:11:39"
                }
              ]
            },
            "documentation": {
              "id": 7334,
              "nodeType": "StructuredDocumentation",
              "src": "4145:167:39",
              "text": "@notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n@param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 7420,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7343,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 658,
                  "src": "4434:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4434:13:39"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4326:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7336,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4352:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "4344:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4344:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7339,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "4388:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "4369:25:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7337,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4369:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 7338,
                    "nodeType": "ArrayTypeName",
                    "src": "4369:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7341,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "4412:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "4404:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4404:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4334:90:39"
            },
            "returnParameters": {
              "id": 7347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7420,
                  "src": "4457:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7345,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4457:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4456:6:39"
            },
            "scope": 7421,
            "src": "4317:805:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7422,
        "src": "607:4517:39",
        "usedErrors": []
      }
    ],
    "src": "37:5087:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-04-02T13:44:00.079Z",
  "devdoc": {
    "details": "A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_vestingCoin": "The ERC20 contract of the coin being vested."
        }
      },
      "fund()": {
        "returns": {
          "_0": "Returns true if the funding was successful."
        }
      },
      "getAvailableFunds()": {
        "returns": {
          "_0": "Returns the closing balance of vesting coin held by this contract."
        }
      },
      "getMerkleRoot(uint256)": {
        "params": {
          "_round": "The round of which markleTree to be viewed."
        },
        "returns": {
          "_0": "Returns Total vested balance."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeFunds(uint256)": {
        "params": {
          "_amount": "The amount desired to withdraw."
        },
        "returns": {
          "_0": "Returns true if the withdrawal was successful."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "params": {
          "_amount": "The amount in vesting coin desired to withdraw."
        }
      }
    },
    "title": "Vesting",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Funded(address,uint256,uint256,uint256)": {
        "notice": "Events;"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructs this contract"
      },
      "fund()": {
        "notice": "Enables this vesting contract to receive the ERC20 (vesting coin). Before calling this function please approve your desired amount of the coin for this smart contract address. Please note that this action is restricted to administrators only."
      },
      "getAvailableFunds()": {
        "notice": "The Vesting Token balance of this smart contract."
      },
      "getMerkleRoot(uint256)": {
        "notice": "Gets the markle tree of each vesting Rounds."
      },
      "removeFunds(uint256)": {
        "notice": "Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances."
      },
      "setMerkleRoot(bytes32)": {
        "notice": "This action enables admin to set newMarkelRoot."
      },
      "totalWithdrawn()": {
        "notice": "The sum total amount of tokens withdrawn from all allocations."
      },
      "vestingCoin()": {
        "notice": "The ERC20 contract of the coin being vested."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "notice": "This action enables the beneficiaries to withdraw a desired amount from this contract."
      }
    },
    "version": 1
  }
}