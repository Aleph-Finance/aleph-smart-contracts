{
  "contractName": "VestingBase",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_vestingCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "FundRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestingClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCoin",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "removeFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_newMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_vestingCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"FundRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAvailableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCoin\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vestingCoin\":\"The ERC20 contract of the coin being vested.\"}},\"getAvailableFunds()\":{\"returns\":{\"_0\":\"Returns the closing balance of vesting coin held by this contract.\"}},\"getMerkleRoot(uint256)\":{\"params\":{\"_round\":\"The round of which markleTree to be viewed.\"},\"returns\":{\"_0\":\"Returns Total vested balance.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeFunds(uint256)\":{\"params\":{\"_amount\":\"The amount desired to withdraw.\"},\"returns\":{\"_0\":\"Returns true if the withdrawal was successful.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"params\":{\"_amount\":\"The amount in vesting coin desired to withdraw.\"}}},\"title\":\"Vesting\",\"version\":1},\"userdoc\":{\"events\":{\"FundRemoved(address,uint256)\":{\"notice\":\"Events;\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs this contract\"},\"getAvailableFunds()\":{\"notice\":\"The Vesting Token balance of this smart contract.\"},\"getMerkleRoot(uint256)\":{\"notice\":\"Gets the markle tree of each vesting Rounds.\"},\"removeFunds(uint256)\":{\"notice\":\"Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances.\"},\"setMerkleRoot(bytes32,uint256)\":{\"notice\":\"This action enables admin to set newMarkelRoot.\"},\"totalWithdrawn()\":{\"notice\":\"The sum total amount of tokens withdrawn from all allocations.\"},\"vestingCoin()\":{\"notice\":\"The ERC20 contract of the coin being vested.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"notice\":\"This action enables the beneficiaries to withdraw a desired amount from this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vesting/VestingBase.sol\":\"VestingBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xea64fbaccbf9d8c235cf6838240ddcebb97f9fc383660289e9dff32e4fb85f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e8a1dd0eac2fa865dc9a052bee01eec31677d7bc01b5b5aa825d820f3f1b343\",\"dweb:/ipfs/QmR8WuNeoAvJhnL7msQfQwaZEkwVnNyNDUNBL3Y616ohYa\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/vesting/VestingBase.sol\":{\"keccak256\":\"0x2633389bc3e1e47c611272336c40b48d7df5597272b050eff97e8573d5c08397\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1be0cbf9d163087b0ab55e1085a15afb00a880695ce28bacda6f80a309794257\",\"dweb:/ipfs/QmZm1BnsrT8tXHPdCSapVF93CbRziQFHisqRUZpHm5iVF2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c5e380380610c5e83398101604081905261002f916100ba565b6100383361006a565b6000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b03929092169190911790556100ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b610b65806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101385780637c382d0b146101425780638da5cb5b14610155578063a065b0bd1461017a578063abf8d5561461018d578063f2fde38b146101bb57600080fd5b80630aab8ba5146100b95780632f384523146100df5780634b319713146101025780635195bd291461010b5780635c975abb146101135780636092dfcb14610125575b600080fd5b6100cc6100c7366004610942565b6101ce565b6040519081526020015b60405180910390f35b6100f26100ed366004610942565b610218565b60405190151581526020016100d6565b6100cc60015481565b6100cc6103be565b600054600160a01b900460ff166100f2565b6100f261013336600461095b565b610430565b6101406106e8565b005b6101406101503660046109e0565b61071e565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d6565b600254610162906001600160a01b031681565b6100f261019b366004610a19565b600360209081526000928352604080842090915290825290205460ff1681565b6101406101c9366004610a45565b6107ba565b600080546001600160a01b031633146102025760405162461bcd60e51b81526004016101f990610a60565b60405180910390fd5b506000818152600460205260409020545b919050565b600080546001600160a01b031633146102435760405162461bcd60e51b81526004016101f990610a60565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561028c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b09190610a95565b9050828110156103025760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e616365000060448201526064016101f9565b60025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190610aae565b61038057600080fd5b60405183815233907f9642d1a9c70ac2b6eaaefd51921acf997a74f91dce95ef59a462c00ca274bc809060200160405180910390a250600192915050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610a95565b905090565b60008054600160a01b900460ff161561047e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101f9565b600082815260036020908152604080832033845290915290205460ff16156104f75760405162461bcd60e51b815260206004820152602660248201527f56657374696e67426173653a2056657374696e6720686173206265656e20636c60448201526561696d65642160d01b60648201526084016101f9565b60008281526004602090815260408083205490516bffffffffffffffffffffffff193360601b1692810192909252603482018890529190605401604051602081830303815290604052805190602001209050600061058b8787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506108559050565b9050806105f25760405162461bcd60e51b815260206004820152602f60248201527f56657374696e67426173653a204164647265737320686173206e6f205665737460448201526e696e6720616c6c6f636174696f6e2160881b60648201526084016101f9565b60008581526003602090815260408083203384529091529020805460ff1916600190811790915554610624908961086b565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c9190610aae565b6106a557600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146107125760405162461bcd60e51b81526004016101f990610a60565b61071c600061087e565b565b6000546001600160a01b031633146107485760405162461bcd60e51b81526004016101f990610a60565b816107a95760405162461bcd60e51b815260206004820152602b60248201527f56657374696e67426173653a20496e76616c6964206e6577206d65726b6c652060448201526a726f6f742076616c75652160a81b60648201526084016101f9565b600090815260046020526040902055565b6000546001600160a01b031633146107e45760405162461bcd60e51b81526004016101f990610a60565b6001600160a01b0381166108495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f9565b6108528161087e565b50565b60008261086285846108ce565b14949350505050565b60006108778284610ae6565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b845181101561093a5760008582815181106108f0576108f0610afe565b602002602001015190508083116109165760008381526020829052604090209250610927565b600081815260208490526040902092505b508061093281610b14565b9150506108d3565b509392505050565b60006020828403121561095457600080fd5b5035919050565b6000806000806060858703121561097157600080fd5b84359350602085013567ffffffffffffffff8082111561099057600080fd5b818701915087601f8301126109a457600080fd5b8135818111156109b357600080fd5b8860208260051b85010111156109c857600080fd5b95986020929092019750949560400135945092505050565b600080604083850312156109f357600080fd5b50508035926020909101359150565b80356001600160a01b038116811461021357600080fd5b60008060408385031215610a2c57600080fd5b82359150610a3c60208401610a02565b90509250929050565b600060208284031215610a5757600080fd5b61087782610a02565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610aa757600080fd5b5051919050565b600060208284031215610ac057600080fd5b8151801515811461087757600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610af957610af9610ad0565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610b2857610b28610ad0565b506001019056fea2646970667358221220b60e866b3346fafa42e4db0936ec287fdade27d0cccda918ab21b99b17358e2164736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101385780637c382d0b146101425780638da5cb5b14610155578063a065b0bd1461017a578063abf8d5561461018d578063f2fde38b146101bb57600080fd5b80630aab8ba5146100b95780632f384523146100df5780634b319713146101025780635195bd291461010b5780635c975abb146101135780636092dfcb14610125575b600080fd5b6100cc6100c7366004610942565b6101ce565b6040519081526020015b60405180910390f35b6100f26100ed366004610942565b610218565b60405190151581526020016100d6565b6100cc60015481565b6100cc6103be565b600054600160a01b900460ff166100f2565b6100f261013336600461095b565b610430565b6101406106e8565b005b6101406101503660046109e0565b61071e565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100d6565b600254610162906001600160a01b031681565b6100f261019b366004610a19565b600360209081526000928352604080842090915290825290205460ff1681565b6101406101c9366004610a45565b6107ba565b600080546001600160a01b031633146102025760405162461bcd60e51b81526004016101f990610a60565b60405180910390fd5b506000818152600460205260409020545b919050565b600080546001600160a01b031633146102435760405162461bcd60e51b81526004016101f990610a60565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561028c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b09190610a95565b9050828110156103025760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e616365000060448201526064016101f9565b60025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190610aae565b61038057600080fd5b60405183815233907f9642d1a9c70ac2b6eaaefd51921acf997a74f91dce95ef59a462c00ca274bc809060200160405180910390a250600192915050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190610a95565b905090565b60008054600160a01b900460ff161561047e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101f9565b600082815260036020908152604080832033845290915290205460ff16156104f75760405162461bcd60e51b815260206004820152602660248201527f56657374696e67426173653a2056657374696e6720686173206265656e20636c60448201526561696d65642160d01b60648201526084016101f9565b60008281526004602090815260408083205490516bffffffffffffffffffffffff193360601b1692810192909252603482018890529190605401604051602081830303815290604052805190602001209050600061058b8787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506108559050565b9050806105f25760405162461bcd60e51b815260206004820152602f60248201527f56657374696e67426173653a204164647265737320686173206e6f205665737460448201526e696e6720616c6c6f636174696f6e2160881b60648201526084016101f9565b60008581526003602090815260408083203384529091529020805460ff1916600190811790915554610624908961086b565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c9190610aae565b6106a557600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146107125760405162461bcd60e51b81526004016101f990610a60565b61071c600061087e565b565b6000546001600160a01b031633146107485760405162461bcd60e51b81526004016101f990610a60565b816107a95760405162461bcd60e51b815260206004820152602b60248201527f56657374696e67426173653a20496e76616c6964206e6577206d65726b6c652060448201526a726f6f742076616c75652160a81b60648201526084016101f9565b600090815260046020526040902055565b6000546001600160a01b031633146107e45760405162461bcd60e51b81526004016101f990610a60565b6001600160a01b0381166108495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f9565b6108528161087e565b50565b60008261086285846108ce565b14949350505050565b60006108778284610ae6565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b845181101561093a5760008582815181106108f0576108f0610afe565b602002602001015190508083116109165760008381526020829052604090209250610927565b600081815260208490526040902092505b508061093281610b14565b9150506108d3565b509392505050565b60006020828403121561095457600080fd5b5035919050565b6000806000806060858703121561097157600080fd5b84359350602085013567ffffffffffffffff8082111561099057600080fd5b818701915087601f8301126109a457600080fd5b8135818111156109b357600080fd5b8860208260051b85010111156109c857600080fd5b95986020929092019750949560400135945092505050565b600080604083850312156109f357600080fd5b50508035926020909101359150565b80356001600160a01b038116811461021357600080fd5b60008060408385031215610a2c57600080fd5b82359150610a3c60208401610a02565b90509250929050565b600060208284031215610a5757600080fd5b61087782610a02565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610aa757600080fd5b5051919050565b600060208284031215610ac057600080fd5b8151801515811461087757600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610af957610af9610ad0565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610b2857610b28610ad0565b506001019056fea2646970667358221220b60e866b3346fafa42e4db0936ec287fdade27d0cccda918ab21b99b17358e2164736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:320:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:209:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "155:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "157:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "157:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "157:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "130:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "139:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "126:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "151:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "122:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "122:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "119:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "193:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:16:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "184:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "272:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "281:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "274:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "274:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "274:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "231:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "242:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "257:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "262:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "253:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "266:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "238:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "238:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "228:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "228:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "221:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "218:70:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "297:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "307:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "297:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$1206_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "75:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "86:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "98:6:17",
                "type": ""
              }
            ],
            "src": "14:304:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$1206_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7112:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:17",
                "type": ""
              }
            ],
            "src": "14:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:76:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:17",
                "type": ""
              }
            ],
            "src": "199:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "476:92:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "486:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "498:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "494:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "486:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "528:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "553:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "546:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "546:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "539:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "521:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:41:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:41:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "445:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "456:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "467:4:17",
                "type": ""
              }
            ],
            "src": "381:187:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "674:76:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "684:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "696:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "692:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "692:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "684:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "726:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "737:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "719:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "643:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "654:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "665:4:17",
                "type": ""
              }
            ],
            "src": "573:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "894:612:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "940:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "952:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "942:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "942:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "942:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "915:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "924:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "907:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "904:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "965:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "988:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "975:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:23:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "965:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:46:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1038:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1049:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:32:17"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1011:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1062:28:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1072:18:17",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1066:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1117:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1126:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1129:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1119:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1119:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1119:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1105:6:17"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1113:2:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1102:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:14:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1099:34:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1142:32:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1156:9:17"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1167:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1152:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:22:17"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1146:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1222:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1231:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1234:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1224:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1224:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1224:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1201:2:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1205:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1197:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1197:13:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1212:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1186:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1183:55:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1247:30:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1274:2:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1261:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:16:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1251:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1304:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1313:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1316:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1306:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1306:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1292:6:17"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1300:2:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1289:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:14:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1286:34:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1378:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1390:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1380:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1380:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1380:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1343:2:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1351:1:17",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1354:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:14:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1339:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1339:23:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1364:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1335:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1335:32:17"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1369:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1332:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:45:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:65:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1403:21:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1417:2:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1421:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:11:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1403:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1433:16:17",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1443:6:17"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1433:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1458:42:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1485:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1481:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1481:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1468:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:32:17"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1458:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "836:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "847:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "859:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "867:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "875:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "883:6:17",
                "type": ""
              }
            ],
            "src": "755:751:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1598:161:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1644:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1653:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1656:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1646:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1646:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1646:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1619:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1628:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1615:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1615:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1611:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1608:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1669:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1692:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1679:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:23:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1669:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1711:42:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1738:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1749:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1734:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1734:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1721:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1721:32:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1556:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1567:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1579:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1587:6:17",
                "type": ""
              }
            ],
            "src": "1511:248:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1887:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1883:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1875:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1932:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1948:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1953:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1944:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1944:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1957:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1940:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1940:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1928:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1928:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1834:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1845:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1856:4:17",
                "type": ""
              }
            ],
            "src": "1764:203:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2087:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2097:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2109:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2120:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2097:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2139:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2154:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2170:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2175:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2166:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2166:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2179:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2162:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2162:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2132:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2132:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$1206__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2056:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2067:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2078:4:17",
                "type": ""
              }
            ],
            "src": "1972:217:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2243:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2253:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2275:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2262:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2253:5:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2345:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2354:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2357:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2347:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2347:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2347:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2304:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2315:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2330:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2335:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2326:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2326:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2339:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2322:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2322:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2311:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2311:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2301:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2301:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2291:70:17"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2222:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2233:5:17",
                "type": ""
              }
            ],
            "src": "2194:173:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2459:167:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2505:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2514:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2517:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2507:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2507:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2507:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2480:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2489:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2476:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2476:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2501:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2472:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2469:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2530:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2553:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2540:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2540:23:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2530:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2572:48:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2605:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2616:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2601:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2601:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2582:18:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2582:38:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2572:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2417:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2428:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2440:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2448:6:17",
                "type": ""
              }
            ],
            "src": "2372:254:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2701:116:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2747:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2756:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2759:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2749:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2749:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2749:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2722:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2731:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2718:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2718:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2743:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2714:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2714:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2711:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2772:39:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2801:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2782:18:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2782:29:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2772:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2667:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2678:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2690:6:17",
                "type": ""
              }
            ],
            "src": "2631:186:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2996:182:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3013:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3024:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3006:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3006:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3006:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3047:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3058:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3043:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3043:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3063:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3036:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3036:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3036:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3086:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3097:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3082:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3082:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3102:34:17",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3075:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3075:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3075:62:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3146:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3158:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3169:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3154:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3154:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3146:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2973:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2987:4:17",
                "type": ""
              }
            ],
            "src": "2822:356:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3264:103:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3310:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3319:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3322:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3312:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3312:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3312:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3285:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3294:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3281:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3281:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3306:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3277:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3277:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "3274:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3335:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3351:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3345:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3345:16:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3335:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3230:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3241:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3253:6:17",
                "type": ""
              }
            ],
            "src": "3183:184:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3546:180:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3563:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3574:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3556:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3556:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3556:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3597:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3608:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3593:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3593:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3613:2:17",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3586:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3586:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3586:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3636:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3647:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3632:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3632:18:17"
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3652:32:17",
                        "type": "",
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3625:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:60:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3625:60:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3694:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3706:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3717:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3702:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3694:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3523:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3537:4:17",
                "type": ""
              }
            ],
            "src": "3372:354:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3860:145:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3870:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3882:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3893:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3878:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3870:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3912:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3927:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3943:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3948:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3939:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3939:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3952:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3935:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3935:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3923:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3923:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3905:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3905:51:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3976:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3987:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3972:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3972:18:17"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3992:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3965:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3965:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3965:34:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3821:9:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3832:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3840:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3851:4:17",
                "type": ""
              }
            ],
            "src": "3731:274:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4088:199:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4134:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4143:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4146:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4136:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4136:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4136:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4109:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4118:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4105:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4105:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4130:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4101:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4101:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4098:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4159:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4178:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4172:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4172:16:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4163:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4241:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4250:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4253:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4243:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4243:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4243:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4210:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4231:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4224:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4224:13:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4217:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4217:21:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4207:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4207:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4200:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4200:40:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4197:60:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4266:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4276:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4266:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4054:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4065:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4077:6:17",
                "type": ""
              }
            ],
            "src": "4010:277:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4466:166:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4483:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4494:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4476:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4476:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4476:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4517:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4528:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4513:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4513:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4533:2:17",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4506:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4506:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4506:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4556:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4567:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4552:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4552:18:17"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4572:18:17",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4545:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4545:46:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4545:46:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4600:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4612:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4623:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4608:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4608:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4600:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4443:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4457:4:17",
                "type": ""
              }
            ],
            "src": "4292:340:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4811:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4828:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4839:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4821:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4821:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4821:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4862:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4873:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4858:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4858:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4878:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4851:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4851:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4851:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4901:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4912:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4897:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4897:18:17"
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4917:34:17",
                        "type": "",
                        "value": "VestingBase: Vesting has been cl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4890:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4890:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4890:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4972:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4983:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4968:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4968:18:17"
                      },
                      {
                        "hexValue": "61696d656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4988:8:17",
                        "type": "",
                        "value": "aimed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4961:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4961:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4961:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5006:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5018:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5029:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5014:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5014:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5006:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4788:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4802:4:17",
                "type": ""
              }
            ],
            "src": "4637:402:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5191:147:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5208:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5221:2:17",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5225:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5217:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5217:15:17"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5238:26:17",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "5234:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5234:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5213:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5213:53:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5201:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5201:66:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5201:66:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5287:3:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5292:2:17",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5283:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5283:12:17"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5297:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5276:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5276:28:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5276:28:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5313:19:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5324:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5329:2:17",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5320:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5313:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5159:3:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5164:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5172:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5183:3:17",
                "type": ""
              }
            ],
            "src": "5044:294:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5517:237:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5534:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5545:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5527:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5527:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5527:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5568:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5579:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5564:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5564:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5584:2:17",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5557:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5557:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5557:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5607:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5618:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5603:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5603:18:17"
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5623:34:17",
                        "type": "",
                        "value": "VestingBase: Address has no Vest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5596:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5596:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5596:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5678:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5689:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5674:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5674:18:17"
                      },
                      {
                        "hexValue": "696e6720616c6c6f636174696f6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5694:17:17",
                        "type": "",
                        "value": "ing allocation!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5667:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5667:45:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5667:45:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5721:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5733:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5744:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5729:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5729:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5721:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5494:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5508:4:17",
                "type": ""
              }
            ],
            "src": "5343:411:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5933:233:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5950:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5961:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5943:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5943:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5943:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5984:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5995:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5980:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5980:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6000:2:17",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5973:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5973:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5973:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6023:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6034:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6019:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6019:18:17"
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6039:34:17",
                        "type": "",
                        "value": "VestingBase: Invalid new merkle "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6012:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6012:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6012:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6094:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6105:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6090:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6090:18:17"
                      },
                      {
                        "hexValue": "726f6f742076616c756521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6110:13:17",
                        "type": "",
                        "value": "root value!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6083:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6083:41:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6083:41:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6133:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6145:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6156:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6141:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6141:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6133:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5910:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5924:4:17",
                "type": ""
              }
            ],
            "src": "5759:407:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6345:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6362:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6373:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6355:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6355:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6355:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6396:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6407:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6392:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6392:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6412:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6385:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6385:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6385:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6435:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6446:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6431:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6431:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6451:34:17",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6424:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6424:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6424:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6506:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6517:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6502:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6502:18:17"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6522:8:17",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6495:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6495:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6495:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6540:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6552:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6563:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6548:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6540:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6322:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6336:4:17",
                "type": ""
              }
            ],
            "src": "6171:402:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6610:95:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6627:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6634:3:17",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6639:10:17",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6630:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6630:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6620:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6620:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6620:31:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6667:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6670:4:17",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6660:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6660:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6660:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6691:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6694:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6684:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6684:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6684:15:17"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6578:127:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6758:80:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6785:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6787:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6787:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6787:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6774:1:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6781:1:17"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6777:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6777:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6771:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6771:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "6768:39:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6816:16:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6827:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6830:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6823:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6823:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6816:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6741:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6744:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6750:3:17",
                "type": ""
              }
            ],
            "src": "6710:128:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6875:95:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6892:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6899:3:17",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6904:10:17",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6895:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6895:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6885:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6885:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6885:31:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6932:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6935:4:17",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6925:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6925:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6956:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6959:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6949:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6949:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6949:15:17"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6843:127:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7022:88:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7053:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7055:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7055:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7055:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7038:5:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7049:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7045:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7045:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7035:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7035:17:17"
                  },
                  "nodeType": "YulIf",
                  "src": "7032:43:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7084:20:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7095:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7102:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7091:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7091:13:17"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7084:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7004:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7014:3:17",
                "type": ""
              }
            ],
            "src": "6975:135:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$1206__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"amount is grater than balanace\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"VestingBase: Vesting has been cl\")\n        mstore(add(headStart, 96), \"aimed!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"VestingBase: Address has no Vest\")\n        mstore(add(headStart, 96), \"ing allocation!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"VestingBase: Invalid new merkle \")\n        mstore(add(headStart, 96), \"root value!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "606:3273:16:-:0;;;1266:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:2;719:10:8;921:18:2;:32::i;:::-;991:5:3;981:15;;-1:-1:-1;;;;981:15:3;;;1304:11:16;:26;;-1:-1:-1;;;;;;1304:26:16;-1:-1:-1;;;;;1304:26:16;;;;;;;;;;606:3273;;2270:187:2;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:304:17:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:17;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:17:o;:::-;606:3273:16;;;;;;",
  "deployedSourceMap": "606:3273:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1787:135;;;;;;:::i;:::-;;:::i;:::-;;;345:25:17;;;333:2;318:18;1787:135:16;;;;;;;;2297:323;;;;;;:::i;:::-;;:::i;:::-;;;546:14:17;;539:22;521:41;;509:2;494:18;2297:323:16;381:187:17;760:29:16;;;;;;1494:113;;;:::i;1098:84:3:-;1145:4;1168:7;-1:-1:-1;;;1168:7:3;;;;1098:84;;3124:753:16;;;;;;:::i;:::-;;:::i;1668:101:2:-;;;:::i;:::-;;2697:243:16;;;;;;:::i;:::-;;:::i;1036:85:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;1036:85;;;-1:-1:-1;;;;;1928:32:17;;;1910:51;;1898:2;1883:18;1036:85:2;1764:203:17;853:24:16;;;;;-1:-1:-1;;;;;853:24:16;;;882:66;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:198:2;;;;;;:::i;:::-;;:::i;1787:135:16:-;1873:7;1108:6:2;;-1:-1:-1;;;;;1108:6:2;719:10:8;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1897:20:16::1;::::0;;;:12:::1;:20;::::0;;;;;1318:1:2::1;1787:135:16::0;;;:::o;2297:323::-;2363:4;1108:6:2;;-1:-1:-1;;;;;1108:6:2;719:10:8;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;2393:11:16::1;::::0;:36:::1;::::0;-1:-1:-1;;;2393:36:16;;2423:4:::1;2393:36;::::0;::::1;1910:51:17::0;2375:15:16::1;::::0;-1:-1:-1;;;;;2393:11:16::1;::::0;:21:::1;::::0;1883:18:17;;2393:36:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2375:54;;2455:7;2444;:18;;2436:61;;;::::0;-1:-1:-1;;;2436:61:16;;3574:2:17;2436:61:16::1;::::0;::::1;3556:21:17::0;3613:2;3593:18;;;3586:30;3652:32;3632:18;;;3625:60;3702:18;;2436:61:16::1;3372:354:17::0;2436:61:16::1;2512:11;::::0;:41:::1;::::0;-1:-1:-1;;;2512:41:16;;2533:10:::1;2512:41;::::0;::::1;3905:51:17::0;3972:18;;;3965:34;;;-1:-1:-1;;;;;2512:11:16;;::::1;::::0;:20:::1;::::0;3878:18:17;;2512:41:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2504:50;;;::::0;::::1;;2566:32;::::0;345:25:17;;;2578:10:16::1;::::0;2566:32:::1;::::0;333:2:17;318:18;2566:32:16::1;;;;;;;-1:-1:-1::0;2611:4:16::1;::::0;2297:323;-1:-1:-1;;2297:323:16:o;1494:113::-;1566:11;;:36;;-1:-1:-1;;;1566:36:16;;1596:4;1566:36;;;1910:51:17;1544:7:16;;-1:-1:-1;;;;;1566:11:16;;:21;;1883:18:17;;1566:36:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1559:43;;1494:113;:::o;3124:753::-;3250:4;1168:7:3;;-1:-1:-1;;;1168:7:3;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:3;;4494:2:17;1403:38:3;;;4476:21:17;4533:2;4513:18;;;4506:30;-1:-1:-1;;;4552:18:17;;;4545:46;4608:18;;1403:38:3;4292:340:17;1403:38:3;3278:22:16::1;::::0;;;:14:::1;:22;::::0;;;;;;;3301:10:::1;3278:34:::0;;;;;;;;::::1;;3277:35;3262:104;;;::::0;-1:-1:-1;;;3262:104:16;;4839:2:17;3262:104:16::1;::::0;::::1;4821:21:17::0;4878:2;4858:18;;;4851:30;4917:34;4897:18;;;4890:62;-1:-1:-1;;;4968:18:17;;;4961:36;5014:19;;3262:104:16::1;4637:402:17::0;3262:104:16::1;3372:18;3393:20:::0;;;:12:::1;:20;::::0;;;;;;;;3444:37;;-1:-1:-1;;3461:10:16::1;5221:2:17::0;5217:15;5213:53;3444:37:16;;::::1;5201:66:17::0;;;;5283:12;;;5276:28;;;3393:20:16;3372:18;5320:12:17;;3444:37:16::1;;;;;;;;;;;;3434:48;;;;;;3419:63;;3488:16;3507:44;3526:6;;3507:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;3534:10:16;;-1:-1:-1;3546:4:16;;-1:-1:-1;3507:18:16::1;::::0;-1:-1:-1;3507:44:16:i:1;:::-;3488:63;;3565:11;3557:71;;;::::0;-1:-1:-1;;;3557:71:16;;5545:2:17;3557:71:16::1;::::0;::::1;5527:21:17::0;5584:2;5564:18;;;5557:30;5623:34;5603:18;;;5596:62;-1:-1:-1;;;5674:18:17;;;5667:45;5729:19;;3557:71:16::1;5343:411:17::0;3557:71:16::1;3665:22;::::0;;;:14:::1;:22;::::0;;;;;;;3688:10:::1;3665:34:::0;;;;;;;:41;;-1:-1:-1;;3665:41:16::1;3702:4;3665:41:::0;;::::1;::::0;;;3729:14;:27:::1;::::0;3748:7;3729:18:::1;:27::i;:::-;3712:14;:44:::0;3771:11:::1;::::0;:41:::1;::::0;-1:-1:-1;;;3771:41:16;;3792:10:::1;3771:41;::::0;::::1;3905:51:17::0;3972:18;;;3965:34;;;-1:-1:-1;;;;;3771:11:16;;::::1;::::0;:20:::1;::::0;3878:18:17;;3771:41:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3763:50;;;::::0;::::1;;3824:30;::::0;345:25:17;;;3834:10:16::1;::::0;3824:30:::1;::::0;333:2:17;318:18;3824:30:16::1;;;;;;;-1:-1:-1::0;3868:4:16::1;::::0;3124:753;-1:-1:-1;;;;;;;3124:753:16:o;1668:101:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:8;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2697:243:16:-;1082:7:2;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:8;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;2810:22:16;2795:96:::1;;;::::0;-1:-1:-1;;;2795:96:16;;5961:2:17;2795:96:16::1;::::0;::::1;5943:21:17::0;6000:2;5980:18;;;5973:30;6039:34;6019:18;;;6012:62;-1:-1:-1;;;6090:18:17;;;6083:41;6141:19;;2795:96:16::1;5759:407:17::0;2795:96:16::1;2898:20;::::0;;;:12:::1;:20;::::0;;;;:37;2697:243::o;1918:198:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:8;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:2;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:2;;6373:2:17;1998:73:2::1;::::0;::::1;6355:21:17::0;6412:2;6392:18;;;6385:30;6451:34;6431:18;;;6424:62;-1:-1:-1;;;6502:18:17;;;6495:36;6548:19;;1998:73:2::1;6171:402:17::0;1998:73:2::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;862:184:10:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:10:o;2741:96:13:-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:13:o;2270:187:2:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1398:662:10:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:10;;;;:::i;:::-;;;;1537:488;;;-1:-1:-1;2041:12:10;1398:662;-1:-1:-1;;;1398:662:10:o;14:180:17:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:17;;14:180;-1:-1:-1;14:180:17:o;755:751::-;859:6;867;875;883;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;988:9;975:23;965:33;;1049:2;1038:9;1034:18;1021:32;1072:18;1113:2;1105:6;1102:14;1099:34;;;1129:1;1126;1119:12;1099:34;1167:6;1156:9;1152:22;1142:32;;1212:7;1205:4;1201:2;1197:13;1193:27;1183:55;;1234:1;1231;1224:12;1183:55;1274:2;1261:16;1300:2;1292:6;1289:14;1286:34;;;1316:1;1313;1306:12;1286:34;1369:7;1364:2;1354:6;1351:1;1347:14;1343:2;1339:23;1335:32;1332:45;1329:65;;;1390:1;1387;1380:12;1329:65;755:751;;1421:2;1413:11;;;;;-1:-1:-1;1443:6:17;;1496:2;1481:18;1468:32;;-1:-1:-1;755:751:17;-1:-1:-1;;;755:751:17:o;1511:248::-;1579:6;1587;1640:2;1628:9;1619:7;1615:23;1611:32;1608:52;;;1656:1;1653;1646:12;1608:52;-1:-1:-1;;1679:23:17;;;1749:2;1734:18;;;1721:32;;-1:-1:-1;1511:248:17:o;2194:173::-;2262:20;;-1:-1:-1;;;;;2311:31:17;;2301:42;;2291:70;;2357:1;2354;2347:12;2372:254;2440:6;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2553:9;2540:23;2530:33;;2582:38;2616:2;2605:9;2601:18;2582:38;:::i;:::-;2572:48;;2372:254;;;;;:::o;2631:186::-;2690:6;2743:2;2731:9;2722:7;2718:23;2714:32;2711:52;;;2759:1;2756;2749:12;2711:52;2782:29;2801:9;2782:29;:::i;2822:356::-;3024:2;3006:21;;;3043:18;;;3036:30;3102:34;3097:2;3082:18;;3075:62;3169:2;3154:18;;2822:356::o;3183:184::-;3253:6;3306:2;3294:9;3285:7;3281:23;3277:32;3274:52;;;3322:1;3319;3312:12;3274:52;-1:-1:-1;3345:16:17;;3183:184;-1:-1:-1;3183:184:17:o;4010:277::-;4077:6;4130:2;4118:9;4109:7;4105:23;4101:32;4098:52;;;4146:1;4143;4136:12;4098:52;4178:9;4172:16;4231:5;4224:13;4217:21;4210:5;4207:32;4197:60;;4253:1;4250;4243:12;6578:127;6639:10;6634:3;6630:20;6627:1;6620:31;6670:4;6667:1;6660:15;6694:4;6691:1;6684:15;6710:128;6750:3;6781:1;6777:6;6774:1;6771:13;6768:39;;;6787:18;;:::i;:::-;-1:-1:-1;6823:9:17;;6710:128::o;6843:127::-;6904:10;6899:3;6895:20;6892:1;6885:31;6935:4;6932:1;6925:15;6959:4;6956:1;6949:15;6975:135;7014:3;-1:-1:-1;;7035:17:17;;7032:43;;;7055:18;;:::i;:::-;-1:-1:-1;7102:1:17;7091:13;;6975:135::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.11;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/security/Pausable.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/cryptography/MerkleProof.sol';\n\n/**\n * @title Vesting\n * @dev A token holder contract that can release its token balance gradually like a\n * typical vesting scheme, vesting period. Optionally revocable by the\n * creator.\n */\ncontract VestingBase is Ownable, Pausable {\n  using SafeMath for uint256;\n\n  /// @notice The sum total amount of tokens withdrawn from all allocations.\n  uint256 public totalWithdrawn;\n\n  /// @notice The ERC20 contract of the coin being vested.\n  ERC20 public vestingCoin;\n\n  mapping(uint256 => mapping(address => bool)) public vestingClaimed;\n  mapping(uint256 => bytes32) private RootToRounds;\n\n  /// Events;\n  event FundRemoved(address indexed _address, uint256 _amount);\n  event Withdrawn(address indexed _address, uint256 _amount);\n\n  /**\n   * @notice Constructs this contract\n   * @param _vestingCoin The ERC20 contract of the coin being vested.\n   */\n  constructor(ERC20 _vestingCoin) {\n    vestingCoin = _vestingCoin;\n  }\n\n  /**\n   * @notice The Vesting Token balance of this smart contract.\n   * @return Returns the closing balance of vesting coin held by this contract.\n   */\n  function getAvailableFunds() public view returns (uint256) {\n    return vestingCoin.balanceOf(address(this));\n  }\n\n  /**\n   * @notice Gets the markle tree of each vesting Rounds.\n   * @param _round The round of which markleTree to be viewed.\n   * @return Returns Total vested balance.\n   */\n  function getMerkleRoot(uint256 _round)\n    public\n    view\n    onlyOwner\n    returns (bytes32)\n  {\n    return RootToRounds[_round];\n  }\n\n  /**\n   * @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n   * Please note that this action is restricted to administrators only\n   * and you may only withdraw amounts above the sum total allocation balances.\n   * @param _amount The amount desired to withdraw.\n   * @return Returns true if the withdrawal was successful.\n   */\n  function removeFunds(uint256 _amount) external onlyOwner returns (bool) {\n    uint256 balance = vestingCoin.balanceOf(address(this));\n\n    require(balance >= _amount, 'amount is grater than balanace');\n\n    require(vestingCoin.transfer(msg.sender, _amount));\n\n    emit FundRemoved(msg.sender, _amount);\n    return true;\n  }\n\n  /**\n   * @notice This action enables admin to set newMarkelRoot.\n   */\n  function setMerkleRoot(bytes32 _newMerkleRoot, uint256 _round)\n    external\n    onlyOwner\n  {\n    require(\n      _newMerkleRoot != 0x00,\n      'VestingBase: Invalid new merkle root value!'\n    );\n\n    RootToRounds[_round] = _newMerkleRoot;\n  }\n\n  /**\n   * @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n   * @param _amount The amount in vesting coin desired to withdraw.\n   */\n  function withdraw(\n    uint256 _amount,\n    bytes32[] calldata _proof,\n    uint256 _round\n  ) external whenNotPaused returns (bool) {\n    require(\n      !vestingClaimed[_round][msg.sender],\n      'VestingBase: Vesting has been claimed!'\n    );\n    bytes32 merkleRoot = RootToRounds[_round];\n    bytes32 leaf = keccak256(abi.encodePacked(msg.sender, _amount));\n    bool isValidLeaf = MerkleProof.verify(_proof, merkleRoot, leaf);\n    require(isValidLeaf, 'VestingBase: Address has no Vesting allocation!');\n\n    // Set address to claimed\n    vestingClaimed[_round][msg.sender] = true;\n    totalWithdrawn = totalWithdrawn.add(_amount);\n\n    require(vestingCoin.transfer(msg.sender, _amount));\n    emit Withdrawn(msg.sender, _amount);\n\n    return true;\n  }\n}\n",
  "sourcePath": "/Users/yosephks/Documents/GitHub/alpsfinance-smart-contracts/contracts/vesting/VestingBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        1331
      ],
      "ERC20": [
        1206
      ],
      "IERC20": [
        1284
      ],
      "IERC20Metadata": [
        1309
      ],
      "MerkleProof": [
        1627
      ],
      "Ownable": [
        486
      ],
      "Pausable": [
        578
      ],
      "SafeMath": [
        1975
      ],
      "VestingBase": [
        2417
      ]
    },
    "id": 2418,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2170,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 1285,
        "src": "63:56:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2172,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 1976,
        "src": "120:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 1207,
        "src": "178:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 2174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 579,
        "src": "234:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2175,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 487,
        "src": "290:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 2176,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 1628,
        "src": "343:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2178,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 486,
              "src": "630:7:16"
            },
            "id": 2179,
            "nodeType": "InheritanceSpecifier",
            "src": "630:7:16"
          },
          {
            "baseName": {
              "id": 2180,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 578,
              "src": "639:8:16"
            },
            "id": 2181,
            "nodeType": "InheritanceSpecifier",
            "src": "639:8:16"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2177,
          "nodeType": "StructuredDocumentation",
          "src": "413:192:16",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 2417,
        "linearizedBaseContracts": [
          2417,
          578,
          486,
          1331
        ],
        "name": "VestingBase",
        "nameLocation": "615:11:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2184,
            "libraryName": {
              "id": 2182,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1975,
              "src": "658:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "652:27:16",
            "typeName": {
              "id": 2183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "671:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 2185,
              "nodeType": "StructuredDocumentation",
              "src": "683:74:16",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 2187,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "775:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "760:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2186,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "760:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2188,
              "nodeType": "StructuredDocumentation",
              "src": "794:56:16",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 2191,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "866:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "853:24:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1206",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2190,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2189,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1206,
                "src": "853:5:16"
              },
              "referencedDeclaration": 1206,
              "src": "853:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1206",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "abf8d556",
            "id": 2197,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "934:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "882:66:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 2196,
              "keyType": {
                "id": 2192,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "882:44:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 2195,
                "keyType": {
                  "id": 2193,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "901:24:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2194,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:4:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2201,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "988:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "952:48:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 2200,
              "keyType": {
                "id": 2198,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "960:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "952:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 2199,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "971:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2202,
              "nodeType": "StructuredDocumentation",
              "src": "1005:11:16",
              "text": "Events;"
            },
            "id": 2208,
            "name": "FundRemoved",
            "nameLocation": "1025:11:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2204,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1053:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "1037:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1071:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "1063:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:43:16"
            },
            "src": "1019:61:16"
          },
          {
            "anonymous": false,
            "id": 2214,
            "name": "Withdrawn",
            "nameLocation": "1089:9:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1115:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2214,
                  "src": "1099:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2212,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1133:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2214,
                  "src": "1125:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1098:43:16"
            },
            "src": "1083:59:16"
          },
          {
            "body": {
              "id": 2225,
              "nodeType": "Block",
              "src": "1298:37:16",
              "statements": [
                {
                  "expression": {
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2221,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "1304:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1206",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2222,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2218,
                      "src": "1318:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1206",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1304:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1206",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2224,
                  "nodeType": "ExpressionStatement",
                  "src": "1304:26:16"
                }
              ]
            },
            "documentation": {
              "id": 2215,
              "nodeType": "StructuredDocumentation",
              "src": "1146:117:16",
              "text": " @notice Constructs this contract\n @param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 2226,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2218,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1284:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2226,
                  "src": "1278:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1206",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2217,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2216,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1206,
                      "src": "1278:5:16"
                    },
                    "referencedDeclaration": 1206,
                    "src": "1278:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1206",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1277:20:16"
            },
            "returnParameters": {
              "id": 2220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1298:0:16"
            },
            "scope": 2417,
            "src": "1266:69:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2240,
              "nodeType": "Block",
              "src": "1553:54:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2236,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1596:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$2417",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$2417",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1588:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1588:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1588:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2232,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "1566:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1206",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "1566:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1566:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2231,
                  "id": 2239,
                  "nodeType": "Return",
                  "src": "1559:43:16"
                }
              ]
            },
            "documentation": {
              "id": 2227,
              "nodeType": "StructuredDocumentation",
              "src": "1339:152:16",
              "text": " @notice The Vesting Token balance of this smart contract.\n @return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 2241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1503:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1520:2:16"
            },
            "returnParameters": {
              "id": 2231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2241,
                  "src": "1544:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:9:16"
            },
            "scope": 2417,
            "src": "1494:113:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2255,
              "nodeType": "Block",
              "src": "1884:38:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2251,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2201,
                      "src": "1897:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 2253,
                    "indexExpression": {
                      "id": 2252,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2244,
                      "src": "1910:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1897:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2250,
                  "id": 2254,
                  "nodeType": "Return",
                  "src": "1890:27:16"
                }
              ]
            },
            "documentation": {
              "id": 2242,
              "nodeType": "StructuredDocumentation",
              "src": "1611:173:16",
              "text": " @notice Gets the markle tree of each vesting Rounds.\n @param _round The round of which markleTree to be viewed.\n @return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 2256,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2247,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2246,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "1850:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1850:9:16"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "1796:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2244,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1818:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2256,
                  "src": "1810:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1809:16:16"
            },
            "returnParameters": {
              "id": 2250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2256,
                  "src": "1873:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1872:9:16"
            },
            "scope": 2417,
            "src": "1787:135:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2300,
              "nodeType": "Block",
              "src": "2369:251:16",
              "statements": [
                {
                  "assignments": [
                    2267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2267,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2383:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2300,
                      "src": "2375:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2375:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2275,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2272,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2423:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$2417",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$2417",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2415:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2415:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2415:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2268,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "2393:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1206",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "2393:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2393:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2375:54:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2277,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2267,
                          "src": "2444:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2278,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2259,
                          "src": "2455:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2444:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2464:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 2276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2436:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:61:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2286,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2533:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2533:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2288,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "2545:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2284,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2191,
                            "src": "2512:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1206",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 742,
                          "src": "2512:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2504:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2504:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2291,
                  "nodeType": "ExpressionStatement",
                  "src": "2504:50:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2578:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2578:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2295,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2259,
                        "src": "2590:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2292,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "2566:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:32:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2297,
                  "nodeType": "EmitStatement",
                  "src": "2561:37:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2611:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2265,
                  "id": 2299,
                  "nodeType": "Return",
                  "src": "2604:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2257,
              "nodeType": "StructuredDocumentation",
              "src": "1926:368:16",
              "text": " @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n Please note that this action is restricted to administrators only\n and you may only withdraw amounts above the sum total allocation balances.\n @param _amount The amount desired to withdraw.\n @return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 2301,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2262,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2261,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "2344:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2344:9:16"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "2306:11:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2259,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2326:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "2318:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2318:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2317:17:16"
            },
            "returnParameters": {
              "id": 2265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2264,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "2363:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2362:6:16"
            },
            "scope": 2417,
            "src": "2297:323:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2324,
              "nodeType": "Block",
              "src": "2789:151:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2312,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2304,
                          "src": "2810:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2828:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "2810:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 2315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        },
                        "value": "VestingBase: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 2311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2795:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:96:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "2795:96:16"
                },
                {
                  "expression": {
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2318,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2201,
                        "src": "2898:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 2320,
                      "indexExpression": {
                        "id": 2319,
                        "name": "_round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2306,
                        "src": "2911:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2898:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2321,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2304,
                      "src": "2921:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2898:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:37:16"
                }
              ]
            },
            "documentation": {
              "id": 2302,
              "nodeType": "StructuredDocumentation",
              "src": "2624:70:16",
              "text": " @notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7c382d0b",
            "id": 2325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2309,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2308,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "2777:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2777:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "2706:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2304,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "2728:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "2720:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2303,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2306,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2752:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "2744:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:40:16"
            },
            "returnParameters": {
              "id": 2310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:0:16"
            },
            "scope": 2417,
            "src": "2697:243:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2415,
              "nodeType": "Block",
              "src": "3256:621:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3277:35:16",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2341,
                              "name": "vestingClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "3278:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 2343,
                            "indexExpression": {
                              "id": 2342,
                              "name": "_round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2333,
                              "src": "3293:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3278:22:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2346,
                          "indexExpression": {
                            "expression": {
                              "id": 2344,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3301:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3301:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3278:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 2348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3320:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        },
                        "value": "VestingBase: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        }
                      ],
                      "id": 2340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3262:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:104:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2350,
                  "nodeType": "ExpressionStatement",
                  "src": "3262:104:16"
                },
                {
                  "assignments": [
                    2352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2352,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "3380:10:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "3372:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2351,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3372:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2356,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2353,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2201,
                      "src": "3393:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 2355,
                    "indexExpression": {
                      "id": 2354,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2333,
                      "src": "3406:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3393:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3372:41:16"
                },
                {
                  "assignments": [
                    2358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2358,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3427:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "3419:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2357,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3419:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2367,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2362,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3461:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3461:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2364,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2328,
                            "src": "3473:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2360,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3444:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3444:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3444:37:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2359,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3434:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3434:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3419:63:16"
                },
                {
                  "assignments": [
                    2369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2369,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "3493:11:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "3488:16:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2368,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3488:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2376,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2372,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "3526:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 2373,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2352,
                        "src": "3534:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2374,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2358,
                        "src": "3546:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2370,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "3507:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1627_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 2371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1558,
                      "src": "3507:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3507:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3488:63:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2378,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2369,
                        "src": "3565:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 2379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3578:49:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        },
                        "value": "VestingBase: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 2377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3557:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3557:71:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2381,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:71:16"
                },
                {
                  "expression": {
                    "id": 2389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2382,
                          "name": "vestingClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2197,
                          "src": "3665:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 2386,
                        "indexExpression": {
                          "id": 2383,
                          "name": "_round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2333,
                          "src": "3680:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3665:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2387,
                      "indexExpression": {
                        "expression": {
                          "id": 2384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3688:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3688:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3665:34:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3702:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3665:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2390,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:41:16"
                },
                {
                  "expression": {
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2391,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2187,
                      "src": "3712:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2394,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2328,
                          "src": "3748:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2392,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "3729:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1839,
                        "src": "3729:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3729:27:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3712:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "3712:44:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2401,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3792:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3792:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2403,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2328,
                            "src": "3804:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2399,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2191,
                            "src": "3771:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1206",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 742,
                          "src": "3771:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3771:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3763:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2406,
                  "nodeType": "ExpressionStatement",
                  "src": "3763:50:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3834:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3834:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2410,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2328,
                        "src": "3846:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2407,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2214,
                      "src": "3824:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3824:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2412,
                  "nodeType": "EmitStatement",
                  "src": "3819:35:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3868:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2339,
                  "id": 2414,
                  "nodeType": "Return",
                  "src": "3861:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2326,
              "nodeType": "StructuredDocumentation",
              "src": "2944:177:16",
              "text": " @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n @param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 2416,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2335,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 534,
                  "src": "3227:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3227:13:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3133:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3155:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2416,
                  "src": "3147:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "3187:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2416,
                  "src": "3168:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2329,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3168:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2330,
                    "nodeType": "ArrayTypeName",
                    "src": "3168:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2333,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "3207:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2416,
                  "src": "3199:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3141:76:16"
            },
            "returnParameters": {
              "id": 2339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2416,
                  "src": "3250:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2337,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3250:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3249:6:16"
            },
            "scope": 2417,
            "src": "3124:753:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2418,
        "src": "606:3273:16",
        "usedErrors": []
      }
    ],
    "src": "37:3843:16"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        1331
      ],
      "ERC20": [
        1206
      ],
      "IERC20": [
        1284
      ],
      "IERC20Metadata": [
        1309
      ],
      "MerkleProof": [
        1627
      ],
      "Ownable": [
        486
      ],
      "Pausable": [
        578
      ],
      "SafeMath": [
        1975
      ],
      "VestingBase": [
        2417
      ]
    },
    "id": 2418,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2170,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 1285,
        "src": "63:56:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2172,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 1976,
        "src": "120:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 1207,
        "src": "178:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 2174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 579,
        "src": "234:55:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2175,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 487,
        "src": "290:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 2176,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2418,
        "sourceUnit": 1628,
        "src": "343:68:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2178,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 486,
              "src": "630:7:16"
            },
            "id": 2179,
            "nodeType": "InheritanceSpecifier",
            "src": "630:7:16"
          },
          {
            "baseName": {
              "id": 2180,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 578,
              "src": "639:8:16"
            },
            "id": 2181,
            "nodeType": "InheritanceSpecifier",
            "src": "639:8:16"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2177,
          "nodeType": "StructuredDocumentation",
          "src": "413:192:16",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 2417,
        "linearizedBaseContracts": [
          2417,
          578,
          486,
          1331
        ],
        "name": "VestingBase",
        "nameLocation": "615:11:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2184,
            "libraryName": {
              "id": 2182,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1975,
              "src": "658:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "652:27:16",
            "typeName": {
              "id": 2183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "671:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 2185,
              "nodeType": "StructuredDocumentation",
              "src": "683:74:16",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 2187,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "775:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "760:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2186,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "760:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2188,
              "nodeType": "StructuredDocumentation",
              "src": "794:56:16",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 2191,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "866:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "853:24:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1206",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 2190,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2189,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1206,
                "src": "853:5:16"
              },
              "referencedDeclaration": 1206,
              "src": "853:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1206",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "abf8d556",
            "id": 2197,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "934:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "882:66:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 2196,
              "keyType": {
                "id": 2192,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "890:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "882:44:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 2195,
                "keyType": {
                  "id": 2193,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "901:24:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2194,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "920:4:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2201,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "988:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 2417,
            "src": "952:48:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 2200,
              "keyType": {
                "id": 2198,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "960:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "952:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 2199,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "971:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2202,
              "nodeType": "StructuredDocumentation",
              "src": "1005:11:16",
              "text": "Events;"
            },
            "id": 2208,
            "name": "FundRemoved",
            "nameLocation": "1025:11:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2204,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1053:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "1037:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1071:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "1063:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:43:16"
            },
            "src": "1019:61:16"
          },
          {
            "anonymous": false,
            "id": 2214,
            "name": "Withdrawn",
            "nameLocation": "1089:9:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1115:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2214,
                  "src": "1099:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2212,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1133:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2214,
                  "src": "1125:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1098:43:16"
            },
            "src": "1083:59:16"
          },
          {
            "body": {
              "id": 2225,
              "nodeType": "Block",
              "src": "1298:37:16",
              "statements": [
                {
                  "expression": {
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2221,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2191,
                      "src": "1304:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1206",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2222,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2218,
                      "src": "1318:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1206",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1304:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1206",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 2224,
                  "nodeType": "ExpressionStatement",
                  "src": "1304:26:16"
                }
              ]
            },
            "documentation": {
              "id": 2215,
              "nodeType": "StructuredDocumentation",
              "src": "1146:117:16",
              "text": " @notice Constructs this contract\n @param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 2226,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2218,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1284:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2226,
                  "src": "1278:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1206",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 2217,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2216,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1206,
                      "src": "1278:5:16"
                    },
                    "referencedDeclaration": 1206,
                    "src": "1278:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1206",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1277:20:16"
            },
            "returnParameters": {
              "id": 2220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1298:0:16"
            },
            "scope": 2417,
            "src": "1266:69:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2240,
              "nodeType": "Block",
              "src": "1553:54:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2236,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1596:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$2417",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$2417",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1588:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1588:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1588:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2232,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "1566:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1206",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "1566:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1566:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2231,
                  "id": 2239,
                  "nodeType": "Return",
                  "src": "1559:43:16"
                }
              ]
            },
            "documentation": {
              "id": 2227,
              "nodeType": "StructuredDocumentation",
              "src": "1339:152:16",
              "text": " @notice The Vesting Token balance of this smart contract.\n @return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 2241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1503:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1520:2:16"
            },
            "returnParameters": {
              "id": 2231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2241,
                  "src": "1544:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:9:16"
            },
            "scope": 2417,
            "src": "1494:113:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2255,
              "nodeType": "Block",
              "src": "1884:38:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2251,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2201,
                      "src": "1897:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 2253,
                    "indexExpression": {
                      "id": 2252,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2244,
                      "src": "1910:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1897:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2250,
                  "id": 2254,
                  "nodeType": "Return",
                  "src": "1890:27:16"
                }
              ]
            },
            "documentation": {
              "id": 2242,
              "nodeType": "StructuredDocumentation",
              "src": "1611:173:16",
              "text": " @notice Gets the markle tree of each vesting Rounds.\n @param _round The round of which markleTree to be viewed.\n @return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 2256,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2247,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2246,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "1850:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1850:9:16"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "1796:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2244,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1818:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2256,
                  "src": "1810:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1809:16:16"
            },
            "returnParameters": {
              "id": 2250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2256,
                  "src": "1873:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1872:9:16"
            },
            "scope": 2417,
            "src": "1787:135:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2300,
              "nodeType": "Block",
              "src": "2369:251:16",
              "statements": [
                {
                  "assignments": [
                    2267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2267,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2383:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2300,
                      "src": "2375:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2375:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2275,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2272,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2423:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$2417",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$2417",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2415:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2415:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2415:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2268,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "2393:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1206",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "2393:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2393:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2375:54:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2277,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2267,
                          "src": "2444:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2278,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2259,
                          "src": "2455:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2444:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2464:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 2276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2436:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2436:61:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:61:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2286,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2533:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2533:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2288,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "2545:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2284,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2191,
                            "src": "2512:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1206",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 742,
                          "src": "2512:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2504:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2504:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2291,
                  "nodeType": "ExpressionStatement",
                  "src": "2504:50:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2578:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2578:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2295,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2259,
                        "src": "2590:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2292,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "2566:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:32:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2297,
                  "nodeType": "EmitStatement",
                  "src": "2561:37:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2611:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2265,
                  "id": 2299,
                  "nodeType": "Return",
                  "src": "2604:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2257,
              "nodeType": "StructuredDocumentation",
              "src": "1926:368:16",
              "text": " @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n Please note that this action is restricted to administrators only\n and you may only withdraw amounts above the sum total allocation balances.\n @param _amount The amount desired to withdraw.\n @return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 2301,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2262,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2261,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "2344:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2344:9:16"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "2306:11:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2259,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2326:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "2318:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2318:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2317:17:16"
            },
            "returnParameters": {
              "id": 2265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2264,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "2363:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2362:6:16"
            },
            "scope": 2417,
            "src": "2297:323:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2324,
              "nodeType": "Block",
              "src": "2789:151:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2312,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2304,
                          "src": "2810:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2828:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "2810:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 2315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        },
                        "value": "VestingBase: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 2311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2795:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:96:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "2795:96:16"
                },
                {
                  "expression": {
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2318,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2201,
                        "src": "2898:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 2320,
                      "indexExpression": {
                        "id": 2319,
                        "name": "_round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2306,
                        "src": "2911:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2898:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2321,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2304,
                      "src": "2921:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2898:37:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:37:16"
                }
              ]
            },
            "documentation": {
              "id": 2302,
              "nodeType": "StructuredDocumentation",
              "src": "2624:70:16",
              "text": " @notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7c382d0b",
            "id": 2325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2309,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2308,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "2777:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2777:9:16"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "2706:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2304,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "2728:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "2720:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2303,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2306,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2752:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "2744:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:40:16"
            },
            "returnParameters": {
              "id": 2310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:0:16"
            },
            "scope": 2417,
            "src": "2697:243:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2415,
              "nodeType": "Block",
              "src": "3256:621:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3277:35:16",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2341,
                              "name": "vestingClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "3278:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 2343,
                            "indexExpression": {
                              "id": 2342,
                              "name": "_round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2333,
                              "src": "3293:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3278:22:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 2346,
                          "indexExpression": {
                            "expression": {
                              "id": 2344,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3301:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3301:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3278:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 2348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3320:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        },
                        "value": "VestingBase: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        }
                      ],
                      "id": 2340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3262:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:104:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2350,
                  "nodeType": "ExpressionStatement",
                  "src": "3262:104:16"
                },
                {
                  "assignments": [
                    2352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2352,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "3380:10:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "3372:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2351,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3372:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2356,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2353,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2201,
                      "src": "3393:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 2355,
                    "indexExpression": {
                      "id": 2354,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2333,
                      "src": "3406:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3393:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3372:41:16"
                },
                {
                  "assignments": [
                    2358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2358,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3427:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "3419:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2357,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3419:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2367,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2362,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3461:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3461:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2364,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2328,
                            "src": "3473:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2360,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3444:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3444:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3444:37:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2359,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3434:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3434:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3419:63:16"
                },
                {
                  "assignments": [
                    2369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2369,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "3493:11:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "3488:16:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2368,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3488:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2376,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2372,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "3526:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 2373,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2352,
                        "src": "3534:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2374,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2358,
                        "src": "3546:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2370,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "3507:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1627_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 2371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1558,
                      "src": "3507:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3507:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3488:63:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2378,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2369,
                        "src": "3565:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 2379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3578:49:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        },
                        "value": "VestingBase: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 2377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3557:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3557:71:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2381,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:71:16"
                },
                {
                  "expression": {
                    "id": 2389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2382,
                          "name": "vestingClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2197,
                          "src": "3665:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 2386,
                        "indexExpression": {
                          "id": 2383,
                          "name": "_round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2333,
                          "src": "3680:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3665:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2387,
                      "indexExpression": {
                        "expression": {
                          "id": 2384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3688:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3688:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3665:34:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3702:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3665:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2390,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:41:16"
                },
                {
                  "expression": {
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2391,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2187,
                      "src": "3712:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2394,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2328,
                          "src": "3748:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2392,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "3729:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1839,
                        "src": "3729:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3729:27:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3712:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "3712:44:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2401,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3792:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3792:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2403,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2328,
                            "src": "3804:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2399,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2191,
                            "src": "3771:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1206",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 742,
                          "src": "3771:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3771:41:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3763:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:50:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2406,
                  "nodeType": "ExpressionStatement",
                  "src": "3763:50:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2408,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3834:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3834:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2410,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2328,
                        "src": "3846:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2407,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2214,
                      "src": "3824:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3824:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2412,
                  "nodeType": "EmitStatement",
                  "src": "3819:35:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3868:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2339,
                  "id": 2414,
                  "nodeType": "Return",
                  "src": "3861:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2326,
              "nodeType": "StructuredDocumentation",
              "src": "2944:177:16",
              "text": " @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n @param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 2416,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2335,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 534,
                  "src": "3227:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3227:13:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3133:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3155:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2416,
                  "src": "3147:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "3187:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2416,
                  "src": "3168:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2329,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3168:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2330,
                    "nodeType": "ArrayTypeName",
                    "src": "3168:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2333,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "3207:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2416,
                  "src": "3199:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3141:76:16"
            },
            "returnParameters": {
              "id": 2339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2416,
                  "src": "3250:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2337,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3250:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3249:6:16"
            },
            "scope": 2417,
            "src": "3124:753:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2418,
        "src": "606:3273:16",
        "usedErrors": []
      }
    ],
    "src": "37:3843:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-07-19T14:25:46.883Z",
  "devdoc": {
    "details": "A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_vestingCoin": "The ERC20 contract of the coin being vested."
        }
      },
      "getAvailableFunds()": {
        "returns": {
          "_0": "Returns the closing balance of vesting coin held by this contract."
        }
      },
      "getMerkleRoot(uint256)": {
        "params": {
          "_round": "The round of which markleTree to be viewed."
        },
        "returns": {
          "_0": "Returns Total vested balance."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeFunds(uint256)": {
        "params": {
          "_amount": "The amount desired to withdraw."
        },
        "returns": {
          "_0": "Returns true if the withdrawal was successful."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "params": {
          "_amount": "The amount in vesting coin desired to withdraw."
        }
      }
    },
    "title": "Vesting",
    "version": 1
  },
  "userdoc": {
    "events": {
      "FundRemoved(address,uint256)": {
        "notice": "Events;"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructs this contract"
      },
      "getAvailableFunds()": {
        "notice": "The Vesting Token balance of this smart contract."
      },
      "getMerkleRoot(uint256)": {
        "notice": "Gets the markle tree of each vesting Rounds."
      },
      "removeFunds(uint256)": {
        "notice": "Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances."
      },
      "setMerkleRoot(bytes32,uint256)": {
        "notice": "This action enables admin to set newMarkelRoot."
      },
      "totalWithdrawn()": {
        "notice": "The sum total amount of tokens withdrawn from all allocations."
      },
      "vestingCoin()": {
        "notice": "The ERC20 contract of the coin being vested."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "notice": "This action enables the beneficiaries to withdraw a desired amount from this contract."
      }
    },
    "version": 1
  }
}