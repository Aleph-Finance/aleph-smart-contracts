{
  "contractName": "VestingBase",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_vestingCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "FundRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCoin",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "removeFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_newMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_vestingCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"FundRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAvailableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCoin\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vestingCoin\":\"The ERC20 contract of the coin being vested.\"}},\"getAvailableFunds()\":{\"returns\":{\"_0\":\"Returns the closing balance of vesting coin held by this contract.\"}},\"getMerkleRoot(uint256)\":{\"params\":{\"_round\":\"The round of which markleTree to be viewed.\"},\"returns\":{\"_0\":\"Returns Total vested balance.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeFunds(uint256)\":{\"params\":{\"_amount\":\"The amount desired to withdraw.\"},\"returns\":{\"_0\":\"Returns true if the withdrawal was successful.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"params\":{\"_amount\":\"The amount in vesting coin desired to withdraw.\"}}},\"title\":\"Vesting\",\"version\":1},\"userdoc\":{\"events\":{\"FundRemoved(address,uint256)\":{\"notice\":\"Events;\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs this contract\"},\"getAvailableFunds()\":{\"notice\":\"The Vesting Token balance of this smart contract.\"},\"getMerkleRoot(uint256)\":{\"notice\":\"Gets the markle tree of each vesting Rounds.\"},\"removeFunds(uint256)\":{\"notice\":\"Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances.\"},\"setMerkleRoot(bytes32,uint256)\":{\"notice\":\"This action enables admin to set newMarkelRoot.\"},\"totalWithdrawn()\":{\"notice\":\"The sum total amount of tokens withdrawn from all allocations.\"},\"vestingCoin()\":{\"notice\":\"The ERC20 contract of the coin being vested.\"},\"withdraw(uint256,bytes32[],uint256)\":{\"notice\":\"This action enables the beneficiaries to withdraw a desired amount from this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/vesting/VestingBase.sol\":\"VestingBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xea64fbaccbf9d8c235cf6838240ddcebb97f9fc383660289e9dff32e4fb85f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e8a1dd0eac2fa865dc9a052bee01eec31677d7bc01b5b5aa825d820f3f1b343\",\"dweb:/ipfs/QmR8WuNeoAvJhnL7msQfQwaZEkwVnNyNDUNBL3Y616ohYa\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/vesting/VestingBase.sol\":{\"keccak256\":\"0x60d30d4911d6c940162aa641eccd9c41349d385aa58e9289d6d26fa91871ed20\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://2c861d176f2745be668f28a605948143d41a822e043c4189a2a53dfb4df0d7bc\",\"dweb:/ipfs/QmRDnhjQUP43QEzCJVYG4wGntrQYe3McgjVNasYjBD6oYW\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610bed380380610bed83398101604081905261002f916100ba565b6100383361006a565b6000805460ff60a01b19169055600280546001600160a01b0319166001600160a01b03929092169190911790556100ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b610af4806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636092dfcb116100715780636092dfcb1461011a578063715018a61461012d5780637c382d0b146101375780638da5cb5b1461014a578063a065b0bd1461016f578063f2fde38b1461018257600080fd5b80630aab8ba5146100ae5780632f384523146100d45780634b319713146100f75780635195bd29146101005780635c975abb14610108575b600080fd5b6100c16100bc366004610906565b610195565b6040519081526020015b60405180910390f35b6100e76100e2366004610906565b6101dc565b60405190151581526020016100cb565b6100c160015481565b6100c1610382565b600054600160a01b900460ff166100e7565b6100e761012836600461091f565b6103f4565b6101356106ac565b005b6101356101453660046109a4565b6106e2565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b600254610157906001600160a01b031681565b6101356101903660046109c6565b61077e565b600080546001600160a01b031633146101c95760405162461bcd60e51b81526004016101c0906109ef565b60405180910390fd5b5060009081526004602052604090205490565b600080546001600160a01b031633146102075760405162461bcd60e51b81526004016101c0906109ef565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610a24565b9050828110156102c65760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e616365000060448201526064016101c0565b60025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b9190610a3d565b61034457600080fd5b60405183815233907f9642d1a9c70ac2b6eaaefd51921acf997a74f91dce95ef59a462c00ca274bc809060200160405180910390a250600192915050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef9190610a24565b905090565b60008054600160a01b900460ff16156104425760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101c0565b600082815260036020908152604080832033845290915290205460ff16156104bb5760405162461bcd60e51b815260206004820152602660248201527f56657374696e67426173653a2056657374696e6720686173206265656e20636c60448201526561696d65642160d01b60648201526084016101c0565b60008281526004602090815260408083205490516bffffffffffffffffffffffff193360601b1692810192909252603482018890529190605401604051602081830303815290604052805190602001209050600061054f8787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506108199050565b9050806105b65760405162461bcd60e51b815260206004820152602f60248201527f56657374696e67426173653a204164647265737320686173206e6f205665737460448201526e696e6720616c6c6f636174696f6e2160881b60648201526084016101c0565b60008581526003602090815260408083203384529091529020805460ff19166001908117909155546105e8908961082f565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610a3d565b61066957600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146106d65760405162461bcd60e51b81526004016101c0906109ef565b6106e06000610842565b565b6000546001600160a01b0316331461070c5760405162461bcd60e51b81526004016101c0906109ef565b8161076d5760405162461bcd60e51b815260206004820152602b60248201527f56657374696e67426173653a20496e76616c6964206e6577206d65726b6c652060448201526a726f6f742076616c75652160a81b60648201526084016101c0565b600090815260046020526040902055565b6000546001600160a01b031633146107a85760405162461bcd60e51b81526004016101c0906109ef565b6001600160a01b03811661080d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c0565b61081681610842565b50565b6000826108268584610892565b14949350505050565b600061083b8284610a75565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b84518110156108fe5760008582815181106108b4576108b4610a8d565b602002602001015190508083116108da57600083815260208290526040902092506108eb565b600081815260208490526040902092505b50806108f681610aa3565b915050610897565b509392505050565b60006020828403121561091857600080fd5b5035919050565b6000806000806060858703121561093557600080fd5b84359350602085013567ffffffffffffffff8082111561095457600080fd5b818701915087601f83011261096857600080fd5b81358181111561097757600080fd5b8860208260051b850101111561098c57600080fd5b95986020929092019750949560400135945092505050565b600080604083850312156109b757600080fd5b50508035926020909101359150565b6000602082840312156109d857600080fd5b81356001600160a01b038116811461083b57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a3657600080fd5b5051919050565b600060208284031215610a4f57600080fd5b8151801515811461083b57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610a8857610a88610a5f565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ab757610ab7610a5f565b506001019056fea2646970667358221220c79393c5f7efae60c2d0f7b07cc2eb81cbd67450b6fa0bd60ff2d22f5abd6ced64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80636092dfcb116100715780636092dfcb1461011a578063715018a61461012d5780637c382d0b146101375780638da5cb5b1461014a578063a065b0bd1461016f578063f2fde38b1461018257600080fd5b80630aab8ba5146100ae5780632f384523146100d45780634b319713146100f75780635195bd29146101005780635c975abb14610108575b600080fd5b6100c16100bc366004610906565b610195565b6040519081526020015b60405180910390f35b6100e76100e2366004610906565b6101dc565b60405190151581526020016100cb565b6100c160015481565b6100c1610382565b600054600160a01b900460ff166100e7565b6100e761012836600461091f565b6103f4565b6101356106ac565b005b6101356101453660046109a4565b6106e2565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b600254610157906001600160a01b031681565b6101356101903660046109c6565b61077e565b600080546001600160a01b031633146101c95760405162461bcd60e51b81526004016101c0906109ef565b60405180910390fd5b5060009081526004602052604090205490565b600080546001600160a01b031633146102075760405162461bcd60e51b81526004016101c0906109ef565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610a24565b9050828110156102c65760405162461bcd60e51b815260206004820152601e60248201527f616d6f756e7420697320677261746572207468616e2062616c616e616365000060448201526064016101c0565b60025460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b9190610a3d565b61034457600080fd5b60405183815233907f9642d1a9c70ac2b6eaaefd51921acf997a74f91dce95ef59a462c00ca274bc809060200160405180910390a250600192915050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef9190610a24565b905090565b60008054600160a01b900460ff16156104425760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016101c0565b600082815260036020908152604080832033845290915290205460ff16156104bb5760405162461bcd60e51b815260206004820152602660248201527f56657374696e67426173653a2056657374696e6720686173206265656e20636c60448201526561696d65642160d01b60648201526084016101c0565b60008281526004602090815260408083205490516bffffffffffffffffffffffff193360601b1692810192909252603482018890529190605401604051602081830303815290604052805190602001209050600061054f8787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506108199050565b9050806105b65760405162461bcd60e51b815260206004820152602f60248201527f56657374696e67426173653a204164647265737320686173206e6f205665737460448201526e696e6720616c6c6f636174696f6e2160881b60648201526084016101c0565b60008581526003602090815260408083203384529091529020805460ff19166001908117909155546105e8908961082f565b60015560025460405163a9059cbb60e01b8152336004820152602481018a90526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610a3d565b61066957600080fd5b60405188815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2506001979650505050505050565b6000546001600160a01b031633146106d65760405162461bcd60e51b81526004016101c0906109ef565b6106e06000610842565b565b6000546001600160a01b0316331461070c5760405162461bcd60e51b81526004016101c0906109ef565b8161076d5760405162461bcd60e51b815260206004820152602b60248201527f56657374696e67426173653a20496e76616c6964206e6577206d65726b6c652060448201526a726f6f742076616c75652160a81b60648201526084016101c0565b600090815260046020526040902055565b6000546001600160a01b031633146107a85760405162461bcd60e51b81526004016101c0906109ef565b6001600160a01b03811661080d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c0565b61081681610842565b50565b6000826108268584610892565b14949350505050565b600061083b8284610a75565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b84518110156108fe5760008582815181106108b4576108b4610a8d565b602002602001015190508083116108da57600083815260208290526040902092506108eb565b600081815260208490526040902092505b50806108f681610aa3565b915050610897565b509392505050565b60006020828403121561091857600080fd5b5035919050565b6000806000806060858703121561093557600080fd5b84359350602085013567ffffffffffffffff8082111561095457600080fd5b818701915087601f83011261096857600080fd5b81358181111561097757600080fd5b8860208260051b850101111561098c57600080fd5b95986020929092019750949560400135945092505050565b600080604083850312156109b757600080fd5b50508035926020909101359150565b6000602082840312156109d857600080fd5b81356001600160a01b038116811461083b57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a3657600080fd5b5051919050565b600060208284031215610a4f57600080fd5b8151801515811461083b57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610a8857610a88610a5f565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ab757610ab7610a5f565b506001019056fea2646970667358221220c79393c5f7efae60c2d0f7b07cc2eb81cbd67450b6fa0bd60ff2d22f5abd6ced64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:320:75",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:75",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:209:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "155:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "157:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "157:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "157:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "130:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "139:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "126:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "151:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "122:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "122:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "119:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:29:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "193:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:16:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "184:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "272:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "281:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "274:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "274:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "274:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "231:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "242:5:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "257:3:75",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "262:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "253:11:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "266:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:19:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "238:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "238:31:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "228:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "228:42:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "221:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:50:75"
                  },
                  "nodeType": "YulIf",
                  "src": "218:70:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "297:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "307:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "297:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$5818_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "75:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "86:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "98:6:75",
                "type": ""
              }
            ],
            "src": "14:304:75"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$5818_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 75,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6775:75",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:75",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:75",
                "type": ""
              }
            ],
            "src": "14:180:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:76:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:25:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:75",
                "type": ""
              }
            ],
            "src": "199:177:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "476:92:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "486:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "498:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "494:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "486:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "528:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "553:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "546:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "546:14:75"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "539:6:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:22:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "521:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:41:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:41:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "445:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "456:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "467:4:75",
                "type": ""
              }
            ],
            "src": "381:187:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "674:76:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "684:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "696:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "707:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "692:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "692:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "684:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "726:9:75"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "737:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:25:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "719:25:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "643:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "654:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "665:4:75",
                "type": ""
              }
            ],
            "src": "573:177:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "894:612:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "940:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "952:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "942:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "942:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "942:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "915:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "924:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "907:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "904:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "965:33:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "988:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "975:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:23:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "965:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1007:46:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1038:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1049:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1021:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:32:75"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1011:6:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1062:28:75",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1072:18:75",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1066:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1117:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1126:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1129:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1119:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1119:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1119:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1105:6:75"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1113:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1102:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:14:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1099:34:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1142:32:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1156:9:75"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1167:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1152:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:22:75"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1146:2:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1222:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1231:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1234:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1224:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1224:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1224:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1201:2:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1205:4:75",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1197:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1197:13:75"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1212:7:75"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:27:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1186:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:35:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1183:55:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1247:30:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1274:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1261:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:16:75"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1251:6:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1304:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1313:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1316:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1306:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1306:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1292:6:75"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1300:2:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1289:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:14:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1286:34:75"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1378:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1390:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1380:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1380:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1380:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1343:2:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1351:1:75",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1354:6:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:14:75"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1339:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1339:23:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1364:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1335:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1335:32:75"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1369:7:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1332:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:45:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1329:65:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1403:21:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1417:2:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1421:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1413:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:11:75"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1403:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1433:16:75",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1443:6:75"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1433:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1458:42:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1485:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1481:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1481:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1468:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:32:75"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1458:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "836:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "847:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "859:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "867:6:75",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "875:6:75",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "883:6:75",
                "type": ""
              }
            ],
            "src": "755:751:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1598:161:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1644:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1653:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1656:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1646:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1646:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1646:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1619:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1628:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1615:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1615:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1611:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "1608:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1669:33:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1692:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1679:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:23:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1669:6:75"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1711:42:75",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1738:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1749:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1734:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1734:18:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1721:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1721:32:75"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1556:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1567:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1579:6:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1587:6:75",
                "type": ""
              }
            ],
            "src": "1511:248:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:102:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1887:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1883:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1875:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1932:6:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1948:3:75",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1953:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1944:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1944:11:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1957:1:75",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1940:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1940:19:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1928:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1928:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:51:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1834:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1845:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1856:4:75",
                "type": ""
              }
            ],
            "src": "1764:203:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2087:102:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2097:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2109:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2120:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2097:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2139:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2154:6:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2170:3:75",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2175:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2166:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2166:11:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2179:1:75",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2162:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2162:19:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2132:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2132:51:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$5818__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2056:9:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2067:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2078:4:75",
                "type": ""
              }
            ],
            "src": "1972:217:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2264:216:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2310:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2319:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2322:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2312:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2312:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2312:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2285:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2294:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2281:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2281:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2306:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2277:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2277:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "2274:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2335:36:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2361:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2348:12:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:23:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2339:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2434:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2443:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2446:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2436:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2436:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2436:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2393:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2404:5:75"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2419:3:75",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2424:1:75",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2415:3:75"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2415:11:75"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2428:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2411:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2411:19:75"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2400:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2400:31:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2390:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2390:42:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2383:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:50:75"
                  },
                  "nodeType": "YulIf",
                  "src": "2380:70:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2469:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2459:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2230:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2241:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2253:6:75",
                "type": ""
              }
            ],
            "src": "2194:286:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2659:182:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2676:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2687:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2669:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2669:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2669:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2710:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2721:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2706:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2726:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2699:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2699:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2749:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2745:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2745:18:75"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2765:34:75",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2738:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2738:62:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2809:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2821:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2832:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2817:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2817:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2809:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2636:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2650:4:75",
                "type": ""
              }
            ],
            "src": "2485:356:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2927:103:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2973:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2982:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2985:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2975:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2975:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2975:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2948:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2957:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2944:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2944:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2969:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2940:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2940:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "2937:52:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2998:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3014:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3008:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3008:16:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2998:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2893:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2904:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2916:6:75",
                "type": ""
              }
            ],
            "src": "2846:184:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3209:180:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3226:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3237:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3219:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3219:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3260:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3271:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3256:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3256:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3276:2:75",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3249:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3299:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3310:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3295:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3295:18:75"
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3315:32:75",
                        "type": "",
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3288:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:60:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3288:60:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3357:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3369:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3380:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3365:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3357:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3186:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3200:4:75",
                "type": ""
              }
            ],
            "src": "3035:354:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3523:145:75",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3533:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3545:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3556:2:75",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3541:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3533:4:75"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3575:9:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3590:6:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3606:3:75",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3611:1:75",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3602:3:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3602:11:75"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3615:1:75",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3598:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3598:19:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3586:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3586:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3568:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3568:51:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3568:51:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3639:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3650:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3635:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3635:18:75"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3655:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3628:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3628:34:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3628:34:75"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3484:9:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3495:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3503:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3514:4:75",
                "type": ""
              }
            ],
            "src": "3394:274:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3751:199:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3797:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3806:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3809:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3799:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3799:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3799:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3772:7:75"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3781:9:75"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3768:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3768:23:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3793:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3764:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3764:32:75"
                  },
                  "nodeType": "YulIf",
                  "src": "3761:52:75"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3822:29:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3841:9:75"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3835:5:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3835:16:75"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3826:5:75",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3904:16:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3913:1:75",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3916:1:75",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3906:6:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3906:12:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3906:12:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3873:5:75"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3894:5:75"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3887:6:75"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3887:13:75"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3880:6:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3880:21:75"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3870:2:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3870:32:75"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3863:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3863:40:75"
                  },
                  "nodeType": "YulIf",
                  "src": "3860:60:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3929:15:75",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3939:5:75"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3929:6:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3717:9:75",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3728:7:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3740:6:75",
                "type": ""
              }
            ],
            "src": "3673:277:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4129:166:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4146:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4157:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4139:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4139:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4139:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4180:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4191:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4176:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4176:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4196:2:75",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4169:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4169:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4169:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4219:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4230:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4215:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4215:18:75"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4235:18:75",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4208:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4208:46:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4208:46:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4263:26:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4275:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4286:2:75",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4271:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:18:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4263:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4106:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4120:4:75",
                "type": ""
              }
            ],
            "src": "3955:340:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4474:228:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4491:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4502:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4484:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4484:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4525:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4536:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4521:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4521:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4541:2:75",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4514:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4514:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4514:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4564:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4575:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4560:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4560:18:75"
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4580:34:75",
                        "type": "",
                        "value": "VestingBase: Vesting has been cl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4553:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4553:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4553:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4635:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4646:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4631:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4631:18:75"
                      },
                      {
                        "hexValue": "61696d656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4651:8:75",
                        "type": "",
                        "value": "aimed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4624:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4624:36:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4624:36:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4669:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4681:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4692:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4677:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4669:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4451:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4465:4:75",
                "type": ""
              }
            ],
            "src": "4300:402:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4854:147:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4871:3:75"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4884:2:75",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4888:6:75"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4880:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4880:15:75"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4901:26:75",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4897:3:75"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4897:31:75"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4876:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4876:53:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4864:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4864:66:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4864:66:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4950:3:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4955:2:75",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4946:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4946:12:75"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4960:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4939:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4939:28:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4939:28:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4976:19:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4987:3:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4992:2:75",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4983:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4983:12:75"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4976:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4822:3:75",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4827:6:75",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4835:6:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4846:3:75",
                "type": ""
              }
            ],
            "src": "4707:294:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5180:237:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5197:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5208:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5190:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5190:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5190:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5231:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5242:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5227:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5227:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5247:2:75",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5220:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5220:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5220:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5270:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5281:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5266:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5266:18:75"
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5286:34:75",
                        "type": "",
                        "value": "VestingBase: Address has no Vest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5259:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5259:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5259:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5341:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5352:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5337:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5337:18:75"
                      },
                      {
                        "hexValue": "696e6720616c6c6f636174696f6e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5357:17:75",
                        "type": "",
                        "value": "ing allocation!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5330:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5330:45:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5330:45:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5384:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5396:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5407:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5392:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5392:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5384:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5157:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5171:4:75",
                "type": ""
              }
            ],
            "src": "5006:411:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5596:233:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5613:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5624:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5606:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5606:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5606:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5647:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5658:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5643:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5643:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5663:2:75",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5636:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5636:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5636:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5686:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5697:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5682:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5682:18:75"
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5702:34:75",
                        "type": "",
                        "value": "VestingBase: Invalid new merkle "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5675:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5675:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5675:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5757:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5768:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5753:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5753:18:75"
                      },
                      {
                        "hexValue": "726f6f742076616c756521",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5773:13:75",
                        "type": "",
                        "value": "root value!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5746:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5746:41:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5746:41:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5796:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5808:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5819:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5804:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5796:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5573:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5587:4:75",
                "type": ""
              }
            ],
            "src": "5422:407:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6008:228:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6025:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6036:2:75",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6018:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6018:21:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6018:21:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6059:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6070:2:75",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6055:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6055:18:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6075:2:75",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6048:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6048:30:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6048:30:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6098:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6109:2:75",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6094:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6094:18:75"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6114:34:75",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6087:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6087:62:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6087:62:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6169:9:75"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6180:2:75",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6165:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6165:18:75"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6185:8:75",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6158:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6158:36:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6158:36:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6203:27:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6215:9:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6226:3:75",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6211:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6211:19:75"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6203:4:75"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5985:9:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5999:4:75",
                "type": ""
              }
            ],
            "src": "5834:402:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6273:95:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6290:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6297:3:75",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6302:10:75",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6293:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6293:20:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6283:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6283:31:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6330:1:75",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6333:4:75",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6323:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6323:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6323:15:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6354:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6357:4:75",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6347:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6347:15:75"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6241:127:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6421:80:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6448:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6450:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6450:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6450:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6437:1:75"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6444:1:75"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6440:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6440:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6434:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6434:13:75"
                  },
                  "nodeType": "YulIf",
                  "src": "6431:39:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6479:16:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6490:1:75"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6493:1:75"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6486:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:9:75"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6479:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6404:1:75",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6407:1:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6413:3:75",
                "type": ""
              }
            ],
            "src": "6373:128:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6538:95:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6555:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6562:3:75",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6567:10:75",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6558:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6558:20:75"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6548:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:31:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:31:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6595:1:75",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6598:4:75",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6588:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6588:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6588:15:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6619:1:75",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6622:4:75",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6612:6:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6612:15:75"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6612:15:75"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6506:127:75"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6685:88:75",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6716:22:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6718:16:75"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6718:18:75"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6718:18:75"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6701:5:75"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6712:1:75",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6708:3:75"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6708:6:75"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6698:2:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6698:17:75"
                  },
                  "nodeType": "YulIf",
                  "src": "6695:43:75"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6747:20:75",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6758:5:75"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6765:1:75",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6754:3:75"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6754:13:75"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6747:3:75"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6667:5:75",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6677:3:75",
                "type": ""
              }
            ],
            "src": "6638:135:75"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$5818__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"amount is grater than balanace\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"VestingBase: Vesting has been cl\")\n        mstore(add(headStart, 96), \"aimed!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"VestingBase: Address has no Vest\")\n        mstore(add(headStart, 96), \"ing allocation!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"VestingBase: Invalid new merkle \")\n        mstore(add(headStart, 96), \"root value!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
      "id": 75,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "606:3522:74:-:0;;;1289:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:3;719:10:41;921:18:3;:32::i;:::-;991:5:18;981:15;;-1:-1:-1;;;;981:15:18;;;1331:11:74;:26;;-1:-1:-1;;;;;;1331:26:74;-1:-1:-1;;;;;1331:26:74;;;;;;;;;;606:3522;;2270:187:3;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:304:75:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:75;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:75:o;:::-;606:3522:74;;;;;;",
  "deployedSourceMap": "606:3522:74:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:159;;;;;;:::i;:::-;;:::i;:::-;;;345:25:75;;;333:2;318:18;1844:159:74;;;;;;;;2394:345;;;;;;:::i;:::-;;:::i;:::-;;;546:14:75;;539:22;521:41;;509:2;494:18;2394:345:74;381:187:75;766:29:74;;;;;;1533:119;;;:::i;1098:84:18:-;1145:4;1168:7;-1:-1:-1;;;1168:7:18;;;;1098:84;;3297:829:74;;;;;;:::i;:::-;;:::i;1668:101:3:-;;;:::i;:::-;;2824:279:74;;;;;;:::i;:::-;;:::i;1036:85:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;1036:85;;;-1:-1:-1;;;;;1928:32:75;;;1910:51;;1898:2;1883:18;1036:85:3;1764:203:75;863:24:74;;;;;-1:-1:-1;;;;;863:24:74;;;1918:198:3;;;;;;:::i;:::-;;:::i;1844:159:74:-;1946:7;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:41;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1976:20:74::1;::::0;;;:12:::1;:20;::::0;;;;;;1844:159::o;2394:345::-;2460:4;1108:6:3;;-1:-1:-1;;;;;1108:6:3;719:10:41;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;2494:11:74::1;::::0;:36:::1;::::0;-1:-1:-1;;;2494:36:74;;2524:4:::1;2494:36;::::0;::::1;1910:51:75::0;2476:15:74::1;::::0;-1:-1:-1;;;;;2494:11:74::1;::::0;:21:::1;::::0;1883:18:75;;2494:36:74::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2476:54;;2560:7;2549;:18;;2541:61;;;::::0;-1:-1:-1;;;2541:61:74;;3237:2:75;2541:61:74::1;::::0;::::1;3219:21:75::0;3276:2;3256:18;;;3249:30;3315:32;3295:18;;;3288:60;3365:18;;2541:61:74::1;3035:354:75::0;2541:61:74::1;2621:11;::::0;:41:::1;::::0;-1:-1:-1;;;2621:41:74;;2642:10:::1;2621:41;::::0;::::1;3568:51:75::0;3635:18;;;3628:34;;;-1:-1:-1;;;;;2621:11:74;;::::1;::::0;:20:::1;::::0;3541:18:75;;2621:41:74::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2613:50;;;::::0;::::1;;2679:32;::::0;345:25:75;;;2691:10:74::1;::::0;2679:32:::1;::::0;333:2:75;318:18;2679:32:74::1;;;;;;;-1:-1:-1::0;2728:4:74::1;::::0;2394:345;-1:-1:-1;;2394:345:74:o;1533:119::-;1609:11;;:36;;-1:-1:-1;;;1609:36:74;;1639:4;1609:36;;;1910:51:75;1583:7:74;;-1:-1:-1;;;;;1609:11:74;;:21;;1883:18:75;;1609:36:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1602:43;;1533:119;:::o;3297:829::-;3437:4;1168:7:18;;-1:-1:-1;;;1168:7:18;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:18;;4157:2:75;1403:38:18;;;4139:21:75;4196:2;4176:18;;;4169:30;-1:-1:-1;;;4215:18:75;;;4208:46;4271:18;;1403:38:18;3955:340:75;1403:38:18;3475:22:74::1;::::0;;;:14:::1;:22;::::0;;;;;;;3498:10:::1;3475:34:::0;;;;;;;;::::1;;3474:35;3453:120;;;::::0;-1:-1:-1;;;3453:120:74;;4502:2:75;3453:120:74::1;::::0;::::1;4484:21:75::0;4541:2;4521:18;;;4514:30;4580:34;4560:18;;;4553:62;-1:-1:-1;;;4631:18:75;;;4624:36;4677:19;;3453:120:74::1;4300:402:75::0;3453:120:74::1;3583:18;3604:20:::0;;;:12:::1;:20;::::0;;;;;;;;3659:37;;-1:-1:-1;;3676:10:74::1;4884:2:75::0;4880:15;4876:53;3659:37:74;;::::1;4864:66:75::0;;;;4946:12;;;4939:28;;;3604:20:74;3583:18;4983:12:75;;3659:37:74::1;;;;;;;;;;;;3649:48;;;;;;3634:63;;3707:16;3726:44;3745:6;;3726:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;3753:10:74;;-1:-1:-1;3765:4:74;;-1:-1:-1;3726:18:74::1;::::0;-1:-1:-1;3726:44:74:i:1;:::-;3707:63;;3788:11;3780:71;;;::::0;-1:-1:-1;;;3780:71:74;;5208:2:75;3780:71:74::1;::::0;::::1;5190:21:75::0;5247:2;5227:18;;;5220:30;5286:34;5266:18;;;5259:62;-1:-1:-1;;;5337:18:75;;;5330:45;5392:19;;3780:71:74::1;5006:411:75::0;3780:71:74::1;3896:22;::::0;;;:14:::1;:22;::::0;;;;;;;3919:10:::1;3896:34:::0;;;;;;;:41;;-1:-1:-1;;3896:41:74::1;3933:4;3896:41:::0;;::::1;::::0;;;3964:14;:27:::1;::::0;3983:7;3964:18:::1;:27::i;:::-;3947:14;:44:::0;4010:11:::1;::::0;:41:::1;::::0;-1:-1:-1;;;4010:41:74;;4031:10:::1;4010:41;::::0;::::1;3568:51:75::0;3635:18;;;3628:34;;;-1:-1:-1;;;;;4010:11:74;;::::1;::::0;:20:::1;::::0;3541:18:75;;4010:41:74::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4002:50;;;::::0;::::1;;4067:30;::::0;345:25:75;;;4077:10:74::1;::::0;4067:30:::1;::::0;333:2:75;318:18;4067:30:74::1;;;;;;;-1:-1:-1::0;4115:4:74::1;::::0;3297:829;-1:-1:-1;;;;;;;3297:829:74:o;1668:101:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:41;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2824:279:74:-;1082:7:3;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:41;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;2957:22:74;2936:112:::1;;;::::0;-1:-1:-1;;;2936:112:74;;5624:2:75;2936:112:74::1;::::0;::::1;5606:21:75::0;5663:2;5643:18;;;5636:30;5702:34;5682:18;;;5675:62;-1:-1:-1;;;5753:18:75;;;5746:41;5804:19;;2936:112:74::1;5422:407:75::0;2936:112:74::1;3059:20;::::0;;;:12:::1;:20;::::0;;;;:37;2824:279::o;1918:198:3:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:3;719:10:41;1248:23:3;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:3;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:3;;6036:2:75;1998:73:3::1;::::0;::::1;6018:21:75::0;6075:2;6055:18;;;6048:30;6114:34;6094:18;;;6087:62;-1:-1:-1;;;6165:18:75;;;6158:36;6211:19;;1998:73:3::1;5834:402:75::0;1998:73:3::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;862:184:46:-;983:4;1035;1006:25;1019:5;1026:4;1006:12;:25::i;:::-;:33;;862:184;-1:-1:-1;;;;862:184:46:o;2741:96:52:-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:52:o;2270:187:3:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1398:662:46:-;1481:7;1523:4;1481:7;1537:488;1561:5;:12;1557:1;:16;1537:488;;;1594:20;1617:5;1623:1;1617:8;;;;;;;;:::i;:::-;;;;;;;1594:31;;1659:12;1643;:28;1639:376;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1769:57;;1639:376;;;2134:13;2182:15;;;2217:4;2210:15;;;2263:4;2247:21;;1943:57;;1639:376;-1:-1:-1;1575:3:46;;;;:::i;:::-;;;;1537:488;;;-1:-1:-1;2041:12:46;1398:662;-1:-1:-1;;;1398:662:46:o;14:180:75:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:75;;14:180;-1:-1:-1;14:180:75:o;755:751::-;859:6;867;875;883;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;988:9;975:23;965:33;;1049:2;1038:9;1034:18;1021:32;1072:18;1113:2;1105:6;1102:14;1099:34;;;1129:1;1126;1119:12;1099:34;1167:6;1156:9;1152:22;1142:32;;1212:7;1205:4;1201:2;1197:13;1193:27;1183:55;;1234:1;1231;1224:12;1183:55;1274:2;1261:16;1300:2;1292:6;1289:14;1286:34;;;1316:1;1313;1306:12;1286:34;1369:7;1364:2;1354:6;1351:1;1347:14;1343:2;1339:23;1335:32;1332:45;1329:65;;;1390:1;1387;1380:12;1329:65;755:751;;1421:2;1413:11;;;;;-1:-1:-1;1443:6:75;;1496:2;1481:18;1468:32;;-1:-1:-1;755:751:75;-1:-1:-1;;;755:751:75:o;1511:248::-;1579:6;1587;1640:2;1628:9;1619:7;1615:23;1611:32;1608:52;;;1656:1;1653;1646:12;1608:52;-1:-1:-1;;1679:23:75;;;1749:2;1734:18;;;1721:32;;-1:-1:-1;1511:248:75:o;2194:286::-;2253:6;2306:2;2294:9;2285:7;2281:23;2277:32;2274:52;;;2322:1;2319;2312:12;2274:52;2348:23;;-1:-1:-1;;;;;2400:31:75;;2390:42;;2380:70;;2446:1;2443;2436:12;2485:356;2687:2;2669:21;;;2706:18;;;2699:30;2765:34;2760:2;2745:18;;2738:62;2832:2;2817:18;;2485:356::o;2846:184::-;2916:6;2969:2;2957:9;2948:7;2944:23;2940:32;2937:52;;;2985:1;2982;2975:12;2937:52;-1:-1:-1;3008:16:75;;2846:184;-1:-1:-1;2846:184:75:o;3673:277::-;3740:6;3793:2;3781:9;3772:7;3768:23;3764:32;3761:52;;;3809:1;3806;3799:12;3761:52;3841:9;3835:16;3894:5;3887:13;3880:21;3873:5;3870:32;3860:60;;3916:1;3913;3906:12;6241:127;6302:10;6297:3;6293:20;6290:1;6283:31;6333:4;6330:1;6323:15;6357:4;6354:1;6347:15;6373:128;6413:3;6444:1;6440:6;6437:1;6434:13;6431:39;;;6450:18;;:::i;:::-;-1:-1:-1;6486:9:75;;6373:128::o;6506:127::-;6567:10;6562:3;6558:20;6555:1;6548:31;6598:4;6595:1;6588:15;6622:4;6619:1;6612:15;6638:135;6677:3;-1:-1:-1;;6698:17:75;;6695:43;;;6718:18;;:::i;:::-;-1:-1:-1;6765:1:75;6754:13;;6638:135::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\n/**\n * @title Vesting\n * @dev A token holder contract that can release its token balance gradually like a\n * typical vesting scheme, vesting period. Optionally revocable by the\n * creator.\n */\ncontract VestingBase is Ownable, Pausable {\n    using SafeMath for uint256;\n\n    /// @notice The sum total amount of tokens withdrawn from all allocations.\n    uint256 public totalWithdrawn;\n\n    /// @notice The ERC20 contract of the coin being vested.\n    ERC20 public vestingCoin;\n\n    mapping(uint256 => mapping(address => bool)) vestingClaimed;\n    mapping(uint256 => bytes32) private RootToRounds;\n\n    /// Events;\n    event FundRemoved(address indexed _address, uint256 _amount);\n    event Withdrawn(address indexed _address, uint256 _amount);\n\n    /**\n     * @notice Constructs this contract\n     * @param _vestingCoin The ERC20 contract of the coin being vested.\n     */\n    constructor(ERC20 _vestingCoin) {\n        vestingCoin = _vestingCoin;\n    }\n\n    /**\n     * @notice The Vesting Token balance of this smart contract.\n     * @return Returns the closing balance of vesting coin held by this contract.\n     */\n    function getAvailableFunds() public view returns (uint256) {\n        return vestingCoin.balanceOf(address(this));\n    }\n\n    /**\n     * @notice Gets the markle tree of each vesting Rounds.\n     * @param _round The round of which markleTree to be viewed.\n     * @return Returns Total vested balance.\n     */\n    function getMerkleRoot(uint256 _round)\n        public\n        view\n        onlyOwner\n        returns (bytes32)\n    {\n        return RootToRounds[_round];\n    }\n\n    /**\n     * @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n     * Please note that this action is restricted to administrators only\n     * and you may only withdraw amounts above the sum total allocation balances.\n     * @param _amount The amount desired to withdraw.\n     * @return Returns true if the withdrawal was successful.\n     */\n    function removeFunds(uint256 _amount) external onlyOwner returns (bool) {\n        uint256 balance = vestingCoin.balanceOf(address(this));\n\n        require(balance >= _amount, \"amount is grater than balanace\");\n\n        require(vestingCoin.transfer(msg.sender, _amount));\n\n        emit FundRemoved(msg.sender, _amount);\n        return true;\n    }\n\n    /**\n     * @notice This action enables admin to set newMarkelRoot.\n     */\n    function setMerkleRoot(bytes32 _newMerkleRoot, uint256 _round)\n        external\n        onlyOwner\n    {\n        require(\n            _newMerkleRoot != 0x00,\n            \"VestingBase: Invalid new merkle root value!\"\n        );\n\n        RootToRounds[_round] = _newMerkleRoot;\n    }\n\n    /**\n     * @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n     * @param _amount The amount in vesting coin desired to withdraw.\n     */\n    function withdraw(\n        uint256 _amount,\n        bytes32[] calldata _proof,\n        uint256 _round\n    ) external whenNotPaused returns (bool) {\n        require(\n            !vestingClaimed[_round][msg.sender],\n            \"VestingBase: Vesting has been claimed!\"\n        );\n        bytes32 merkleRoot = RootToRounds[_round];\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender, _amount));\n        bool isValidLeaf = MerkleProof.verify(_proof, merkleRoot, leaf);\n        require(isValidLeaf, \"VestingBase: Address has no Vesting allocation!\");\n\n        // Set address to claimed\n        vestingClaimed[_round][msg.sender] = true;\n        totalWithdrawn = totalWithdrawn.add(_amount);\n\n        require(vestingCoin.transfer(msg.sender, _amount));\n        emit Withdrawn(msg.sender, _amount);\n\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/yosephks/Documents/GitHub/alpsfinance-smart-contracts/contracts/vesting/VestingBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        8507
      ],
      "ERC20": [
        5818
      ],
      "IERC20": [
        5896
      ],
      "IERC20Metadata": [
        6602
      ],
      "MerkleProof": [
        9498
      ],
      "Ownable": [
        532
      ],
      "Pausable": [
        3714
      ],
      "SafeMath": [
        10481
      ],
      "VestingBase": [
        14177
      ]
    },
    "id": 14178,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13930,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:74"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 13931,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 5897,
        "src": "63:56:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 13932,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 10482,
        "src": "120:57:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 13933,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 5819,
        "src": "178:55:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 13934,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 3715,
        "src": "234:55:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 13935,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 533,
        "src": "290:52:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 13936,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 9499,
        "src": "343:68:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13938,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "630:7:74"
            },
            "id": 13939,
            "nodeType": "InheritanceSpecifier",
            "src": "630:7:74"
          },
          {
            "baseName": {
              "id": 13940,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3714,
              "src": "639:8:74"
            },
            "id": 13941,
            "nodeType": "InheritanceSpecifier",
            "src": "639:8:74"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13937,
          "nodeType": "StructuredDocumentation",
          "src": "413:192:74",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 14177,
        "linearizedBaseContracts": [
          14177,
          3714,
          532,
          8507
        ],
        "name": "VestingBase",
        "nameLocation": "615:11:74",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13944,
            "libraryName": {
              "id": 13942,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10481,
              "src": "660:8:74"
            },
            "nodeType": "UsingForDirective",
            "src": "654:27:74",
            "typeName": {
              "id": 13943,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "673:7:74",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 13945,
              "nodeType": "StructuredDocumentation",
              "src": "687:74:74",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 13947,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "781:14:74",
            "nodeType": "VariableDeclaration",
            "scope": 14177,
            "src": "766:29:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13946,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "766:7:74",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 13948,
              "nodeType": "StructuredDocumentation",
              "src": "802:56:74",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 13951,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "876:11:74",
            "nodeType": "VariableDeclaration",
            "scope": 14177,
            "src": "863:24:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$5818",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 13950,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13949,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5818,
                "src": "863:5:74"
              },
              "referencedDeclaration": 5818,
              "src": "863:5:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5818",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13957,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "939:14:74",
            "nodeType": "VariableDeclaration",
            "scope": 14177,
            "src": "894:59:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 13956,
              "keyType": {
                "id": 13952,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "902:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "894:44:74",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 13955,
                "keyType": {
                  "id": 13953,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "913:24:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 13954,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "932:4:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13961,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "995:12:74",
            "nodeType": "VariableDeclaration",
            "scope": 14177,
            "src": "959:48:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 13960,
              "keyType": {
                "id": 13958,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "967:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "959:27:74",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 13959,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "978:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 13962,
              "nodeType": "StructuredDocumentation",
              "src": "1014:11:74",
              "text": "Events;"
            },
            "id": 13968,
            "name": "FundRemoved",
            "nameLocation": "1036:11:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13964,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1064:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "1048:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13966,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1082:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "1074:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:43:74"
            },
            "src": "1030:61:74"
          },
          {
            "anonymous": false,
            "id": 13974,
            "name": "Withdrawn",
            "nameLocation": "1102:9:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13970,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1128:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13974,
                  "src": "1112:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13972,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1146:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13974,
                  "src": "1138:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:43:74"
            },
            "src": "1096:59:74"
          },
          {
            "body": {
              "id": 13985,
              "nodeType": "Block",
              "src": "1321:43:74",
              "statements": [
                {
                  "expression": {
                    "id": 13983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13981,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13951,
                      "src": "1331:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5818",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13982,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13978,
                      "src": "1345:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5818",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1331:26:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5818",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 13984,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:26:74"
                }
              ]
            },
            "documentation": {
              "id": 13975,
              "nodeType": "StructuredDocumentation",
              "src": "1161:123:74",
              "text": " @notice Constructs this contract\n @param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 13986,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13978,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1307:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13986,
                  "src": "1301:18:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$5818",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 13977,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13976,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5818,
                      "src": "1301:5:74"
                    },
                    "referencedDeclaration": 5818,
                    "src": "1301:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5818",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:20:74"
            },
            "returnParameters": {
              "id": 13980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1321:0:74"
            },
            "scope": 14177,
            "src": "1289:75:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14000,
              "nodeType": "Block",
              "src": "1592:60:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13996,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1639:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$14177",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$14177",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 13995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1631:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1631:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1631:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13992,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13951,
                        "src": "1609:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 13993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5329,
                      "src": "1609:21:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 13998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:36:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13991,
                  "id": 13999,
                  "nodeType": "Return",
                  "src": "1602:43:74"
                }
              ]
            },
            "documentation": {
              "id": 13987,
              "nodeType": "StructuredDocumentation",
              "src": "1370:158:74",
              "text": " @notice The Vesting Token balance of this smart contract.\n @return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 14001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1542:17:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1559:2:74"
            },
            "returnParameters": {
              "id": 13991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14001,
                  "src": "1583:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:9:74"
            },
            "scope": 14177,
            "src": "1533:119:74",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14015,
              "nodeType": "Block",
              "src": "1959:44:74",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 14011,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13961,
                      "src": "1976:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 14013,
                    "indexExpression": {
                      "id": 14012,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14004,
                      "src": "1989:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1976:20:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 14010,
                  "id": 14014,
                  "nodeType": "Return",
                  "src": "1969:27:74"
                }
              ]
            },
            "documentation": {
              "id": 14002,
              "nodeType": "StructuredDocumentation",
              "src": "1658:181:74",
              "text": " @notice Gets the markle tree of each vesting Rounds.\n @param _round The round of which markleTree to be viewed.\n @return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 14016,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14007,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14006,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "1919:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "1919:9:74"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "1853:13:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14004,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1875:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14016,
                  "src": "1867:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1867:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1866:16:74"
            },
            "returnParameters": {
              "id": 14010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14016,
                  "src": "1946:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14008,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1945:9:74"
            },
            "scope": 14177,
            "src": "1844:159:74",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14060,
              "nodeType": "Block",
              "src": "2466:273:74",
              "statements": [
                {
                  "assignments": [
                    14027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14027,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2484:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14060,
                      "src": "2476:15:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2476:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14035,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14032,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2524:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$14177",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$14177",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 14031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2516:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14030,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2516:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2516:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14028,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13951,
                        "src": "2494:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 14029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5329,
                      "src": "2494:21:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 14034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2494:36:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2476:54:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14037,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14027,
                          "src": "2549:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 14038,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14019,
                          "src": "2560:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2549:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 14040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2569:32:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 14036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2541:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2541:61:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14042,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:61:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 14046,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2642:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2642:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14048,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14019,
                            "src": "2654:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 14044,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13951,
                            "src": "2621:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5818",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 14045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5354,
                          "src": "2621:20:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 14049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2621:41:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2613:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:50:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14051,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:50:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 14053,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2691:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2691:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14055,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14019,
                        "src": "2703:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14052,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13968,
                      "src": "2679:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2679:32:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14057,
                  "nodeType": "EmitStatement",
                  "src": "2674:37:74"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 14058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2728:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 14025,
                  "id": 14059,
                  "nodeType": "Return",
                  "src": "2721:11:74"
                }
              ]
            },
            "documentation": {
              "id": 14017,
              "nodeType": "StructuredDocumentation",
              "src": "2009:380:74",
              "text": " @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n Please note that this action is restricted to administrators only\n and you may only withdraw amounts above the sum total allocation balances.\n @param _amount The amount desired to withdraw.\n @return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 14061,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14022,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14021,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2441:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "2441:9:74"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "2403:11:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14019,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2423:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14061,
                  "src": "2415:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2415:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2414:17:74"
            },
            "returnParameters": {
              "id": 14025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14061,
                  "src": "2460:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2459:6:74"
            },
            "scope": 14177,
            "src": "2394:345:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14084,
              "nodeType": "Block",
              "src": "2926:177:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 14074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14072,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14064,
                          "src": "2957:14:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 14073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2975:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "2957:22:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 14075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2993:45:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        },
                        "value": "VestingBase: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 14071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2936:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2936:112:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14077,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:112:74"
                },
                {
                  "expression": {
                    "id": 14082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14078,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13961,
                        "src": "3059:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 14080,
                      "indexExpression": {
                        "id": 14079,
                        "name": "_round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14066,
                        "src": "3072:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3059:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14081,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14064,
                      "src": "3082:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3059:37:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14083,
                  "nodeType": "ExpressionStatement",
                  "src": "3059:37:74"
                }
              ]
            },
            "documentation": {
              "id": 14062,
              "nodeType": "StructuredDocumentation",
              "src": "2745:74:74",
              "text": " @notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7c382d0b",
            "id": 14085,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14069,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14068,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2912:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "2912:9:74"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "2833:13:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14064,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "2855:14:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14085,
                  "src": "2847:22:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14063,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14066,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2879:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14085,
                  "src": "2871:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:40:74"
            },
            "returnParameters": {
              "id": 14070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2926:0:74"
            },
            "scope": 14177,
            "src": "2824:279:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14175,
              "nodeType": "Block",
              "src": "3443:683:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3474:35:74",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 14101,
                              "name": "vestingClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13957,
                              "src": "3475:14:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 14103,
                            "indexExpression": {
                              "id": 14102,
                              "name": "_round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14093,
                              "src": "3490:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3475:22:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 14106,
                          "indexExpression": {
                            "expression": {
                              "id": 14104,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3498:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3498:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3475:34:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 14108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3523:40:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        },
                        "value": "VestingBase: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        }
                      ],
                      "id": 14100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3453:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:120:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14110,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:120:74"
                },
                {
                  "assignments": [
                    14112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14112,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "3591:10:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14175,
                      "src": "3583:18:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14111,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3583:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14116,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14113,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13961,
                      "src": "3604:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 14115,
                    "indexExpression": {
                      "id": 14114,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14093,
                      "src": "3617:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3604:20:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3583:41:74"
                },
                {
                  "assignments": [
                    14118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14118,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3642:4:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14175,
                      "src": "3634:12:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14117,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3634:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14127,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 14122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3676:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3676:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14124,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14088,
                            "src": "3688:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 14120,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3659:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 14121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3659:16:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 14125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3659:37:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14119,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3649:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 14126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3649:48:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3634:63:74"
                },
                {
                  "assignments": [
                    14129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14129,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "3712:11:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14175,
                      "src": "3707:16:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 14128,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3707:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14136,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14132,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14091,
                        "src": "3745:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 14133,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14112,
                        "src": "3753:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14134,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14118,
                        "src": "3765:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 14130,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9498,
                        "src": "3726:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$9498_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 14131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9429,
                      "src": "3726:18:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 14135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3726:44:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3707:63:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14138,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14129,
                        "src": "3788:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 14139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3801:49:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        },
                        "value": "VestingBase: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 14137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3780:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:71:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14141,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:71:74"
                },
                {
                  "expression": {
                    "id": 14149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 14142,
                          "name": "vestingClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13957,
                          "src": "3896:14:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 14146,
                        "indexExpression": {
                          "id": 14143,
                          "name": "_round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14093,
                          "src": "3911:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3896:22:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 14147,
                      "indexExpression": {
                        "expression": {
                          "id": 14144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3919:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3919:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3896:34:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 14148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3933:4:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3896:41:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14150,
                  "nodeType": "ExpressionStatement",
                  "src": "3896:41:74"
                },
                {
                  "expression": {
                    "id": 14156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14151,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13947,
                      "src": "3947:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14154,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14088,
                          "src": "3983:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 14152,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13947,
                          "src": "3964:14:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10345,
                        "src": "3964:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3964:27:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3947:44:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14157,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:44:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 14161,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4031:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4031:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14163,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14088,
                            "src": "4043:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 14159,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13951,
                            "src": "4010:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5818",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 14160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5354,
                          "src": "4010:20:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 14164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4010:41:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4002:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4002:50:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14166,
                  "nodeType": "ExpressionStatement",
                  "src": "4002:50:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 14168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4077:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4077:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14170,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14088,
                        "src": "4089:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14167,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13974,
                      "src": "4067:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:30:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14172,
                  "nodeType": "EmitStatement",
                  "src": "4062:35:74"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 14173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4115:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 14099,
                  "id": 14174,
                  "nodeType": "Return",
                  "src": "4108:11:74"
                }
              ]
            },
            "documentation": {
              "id": 14086,
              "nodeType": "StructuredDocumentation",
              "src": "3109:183:74",
              "text": " @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n @param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 14176,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14096,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14095,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3670,
                  "src": "3414:13:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "3414:13:74"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3306:8:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14088,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3332:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14176,
                  "src": "3324:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14091,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "3368:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14176,
                  "src": "3349:25:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14089,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3349:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 14090,
                    "nodeType": "ArrayTypeName",
                    "src": "3349:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14093,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "3392:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14176,
                  "src": "3384:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:90:74"
            },
            "returnParameters": {
              "id": 14099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14098,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14176,
                  "src": "3437:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14097,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3437:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3436:6:74"
            },
            "scope": 14177,
            "src": "3297:829:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14178,
        "src": "606:3522:74",
        "usedErrors": []
      }
    ],
    "src": "37:4092:74"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/vesting/VestingBase.sol",
    "exportedSymbols": {
      "Context": [
        8507
      ],
      "ERC20": [
        5818
      ],
      "IERC20": [
        5896
      ],
      "IERC20Metadata": [
        6602
      ],
      "MerkleProof": [
        9498
      ],
      "Ownable": [
        532
      ],
      "Pausable": [
        3714
      ],
      "SafeMath": [
        10481
      ],
      "VestingBase": [
        14177
      ]
    },
    "id": 14178,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13930,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:74"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 13931,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 5897,
        "src": "63:56:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 13932,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 10482,
        "src": "120:57:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 13933,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 5819,
        "src": "178:55:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 13934,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 3715,
        "src": "234:55:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 13935,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 533,
        "src": "290:52:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 13936,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14178,
        "sourceUnit": 9499,
        "src": "343:68:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13938,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 532,
              "src": "630:7:74"
            },
            "id": 13939,
            "nodeType": "InheritanceSpecifier",
            "src": "630:7:74"
          },
          {
            "baseName": {
              "id": 13940,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3714,
              "src": "639:8:74"
            },
            "id": 13941,
            "nodeType": "InheritanceSpecifier",
            "src": "639:8:74"
          }
        ],
        "canonicalName": "VestingBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13937,
          "nodeType": "StructuredDocumentation",
          "src": "413:192:74",
          "text": " @title Vesting\n @dev A token holder contract that can release its token balance gradually like a\n typical vesting scheme, vesting period. Optionally revocable by the\n creator."
        },
        "fullyImplemented": true,
        "id": 14177,
        "linearizedBaseContracts": [
          14177,
          3714,
          532,
          8507
        ],
        "name": "VestingBase",
        "nameLocation": "615:11:74",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13944,
            "libraryName": {
              "id": 13942,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10481,
              "src": "660:8:74"
            },
            "nodeType": "UsingForDirective",
            "src": "654:27:74",
            "typeName": {
              "id": 13943,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "673:7:74",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 13945,
              "nodeType": "StructuredDocumentation",
              "src": "687:74:74",
              "text": "@notice The sum total amount of tokens withdrawn from all allocations."
            },
            "functionSelector": "4b319713",
            "id": 13947,
            "mutability": "mutable",
            "name": "totalWithdrawn",
            "nameLocation": "781:14:74",
            "nodeType": "VariableDeclaration",
            "scope": 14177,
            "src": "766:29:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13946,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "766:7:74",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 13948,
              "nodeType": "StructuredDocumentation",
              "src": "802:56:74",
              "text": "@notice The ERC20 contract of the coin being vested."
            },
            "functionSelector": "a065b0bd",
            "id": 13951,
            "mutability": "mutable",
            "name": "vestingCoin",
            "nameLocation": "876:11:74",
            "nodeType": "VariableDeclaration",
            "scope": 14177,
            "src": "863:24:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$5818",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 13950,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13949,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5818,
                "src": "863:5:74"
              },
              "referencedDeclaration": 5818,
              "src": "863:5:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5818",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13957,
            "mutability": "mutable",
            "name": "vestingClaimed",
            "nameLocation": "939:14:74",
            "nodeType": "VariableDeclaration",
            "scope": 14177,
            "src": "894:59:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 13956,
              "keyType": {
                "id": 13952,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "902:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "894:44:74",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 13955,
                "keyType": {
                  "id": 13953,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "913:24:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 13954,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "932:4:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 13961,
            "mutability": "mutable",
            "name": "RootToRounds",
            "nameLocation": "995:12:74",
            "nodeType": "VariableDeclaration",
            "scope": 14177,
            "src": "959:48:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 13960,
              "keyType": {
                "id": 13958,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "967:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "959:27:74",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 13959,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "978:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 13962,
              "nodeType": "StructuredDocumentation",
              "src": "1014:11:74",
              "text": "Events;"
            },
            "id": 13968,
            "name": "FundRemoved",
            "nameLocation": "1036:11:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13964,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1064:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "1048:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13966,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1082:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13968,
                  "src": "1074:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:43:74"
            },
            "src": "1030:61:74"
          },
          {
            "anonymous": false,
            "id": 13974,
            "name": "Withdrawn",
            "nameLocation": "1102:9:74",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13970,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1128:8:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13974,
                  "src": "1112:24:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13972,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1146:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13974,
                  "src": "1138:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:43:74"
            },
            "src": "1096:59:74"
          },
          {
            "body": {
              "id": 13985,
              "nodeType": "Block",
              "src": "1321:43:74",
              "statements": [
                {
                  "expression": {
                    "id": 13983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13981,
                      "name": "vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13951,
                      "src": "1331:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5818",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13982,
                      "name": "_vestingCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13978,
                      "src": "1345:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5818",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1331:26:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5818",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 13984,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:26:74"
                }
              ]
            },
            "documentation": {
              "id": 13975,
              "nodeType": "StructuredDocumentation",
              "src": "1161:123:74",
              "text": " @notice Constructs this contract\n @param _vestingCoin The ERC20 contract of the coin being vested."
            },
            "id": 13986,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13978,
                  "mutability": "mutable",
                  "name": "_vestingCoin",
                  "nameLocation": "1307:12:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 13986,
                  "src": "1301:18:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$5818",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 13977,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13976,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5818,
                      "src": "1301:5:74"
                    },
                    "referencedDeclaration": 5818,
                    "src": "1301:5:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5818",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1300:20:74"
            },
            "returnParameters": {
              "id": 13980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1321:0:74"
            },
            "scope": 14177,
            "src": "1289:75:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14000,
              "nodeType": "Block",
              "src": "1592:60:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13996,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1639:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$14177",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$14177",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 13995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1631:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1631:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1631:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13992,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13951,
                        "src": "1609:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 13993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5329,
                      "src": "1609:21:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 13998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:36:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13991,
                  "id": 13999,
                  "nodeType": "Return",
                  "src": "1602:43:74"
                }
              ]
            },
            "documentation": {
              "id": 13987,
              "nodeType": "StructuredDocumentation",
              "src": "1370:158:74",
              "text": " @notice The Vesting Token balance of this smart contract.\n @return Returns the closing balance of vesting coin held by this contract."
            },
            "functionSelector": "5195bd29",
            "id": 14001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableFunds",
            "nameLocation": "1542:17:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1559:2:74"
            },
            "returnParameters": {
              "id": 13991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14001,
                  "src": "1583:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:9:74"
            },
            "scope": 14177,
            "src": "1533:119:74",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14015,
              "nodeType": "Block",
              "src": "1959:44:74",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 14011,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13961,
                      "src": "1976:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 14013,
                    "indexExpression": {
                      "id": 14012,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14004,
                      "src": "1989:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1976:20:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 14010,
                  "id": 14014,
                  "nodeType": "Return",
                  "src": "1969:27:74"
                }
              ]
            },
            "documentation": {
              "id": 14002,
              "nodeType": "StructuredDocumentation",
              "src": "1658:181:74",
              "text": " @notice Gets the markle tree of each vesting Rounds.\n @param _round The round of which markleTree to be viewed.\n @return Returns Total vested balance."
            },
            "functionSelector": "0aab8ba5",
            "id": 14016,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14007,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14006,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "1919:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "1919:9:74"
              }
            ],
            "name": "getMerkleRoot",
            "nameLocation": "1853:13:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14004,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1875:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14016,
                  "src": "1867:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1867:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1866:16:74"
            },
            "returnParameters": {
              "id": 14010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14016,
                  "src": "1946:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14008,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1945:9:74"
            },
            "scope": 14177,
            "src": "1844:159:74",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14060,
              "nodeType": "Block",
              "src": "2466:273:74",
              "statements": [
                {
                  "assignments": [
                    14027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14027,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2484:7:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14060,
                      "src": "2476:15:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2476:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14035,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14032,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2524:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestingBase_$14177",
                              "typeString": "contract VestingBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestingBase_$14177",
                              "typeString": "contract VestingBase"
                            }
                          ],
                          "id": 14031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2516:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14030,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2516:7:74",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2516:13:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14028,
                        "name": "vestingCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13951,
                        "src": "2494:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 14029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5329,
                      "src": "2494:21:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 14034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2494:36:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2476:54:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14037,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14027,
                          "src": "2549:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 14038,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14019,
                          "src": "2560:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2549:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420697320677261746572207468616e2062616c616e616365",
                        "id": 14040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2569:32:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        },
                        "value": "amount is grater than balanace"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a73a662eae6881a6e45a13b7415ee7b73a015be7a7713f1cebfdd76a487a2891",
                          "typeString": "literal_string \"amount is grater than balanace\""
                        }
                      ],
                      "id": 14036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2541:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2541:61:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14042,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:61:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 14046,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2642:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2642:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14048,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14019,
                            "src": "2654:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 14044,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13951,
                            "src": "2621:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5818",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 14045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5354,
                          "src": "2621:20:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 14049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2621:41:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2613:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:50:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14051,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:50:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 14053,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2691:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2691:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14055,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14019,
                        "src": "2703:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14052,
                      "name": "FundRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13968,
                      "src": "2679:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2679:32:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14057,
                  "nodeType": "EmitStatement",
                  "src": "2674:37:74"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 14058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2728:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 14025,
                  "id": 14059,
                  "nodeType": "Return",
                  "src": "2721:11:74"
                }
              ]
            },
            "documentation": {
              "id": 14017,
              "nodeType": "StructuredDocumentation",
              "src": "2009:380:74",
              "text": " @notice Allows you to withdraw the surplus balance of the vesting coin from this contract.\n Please note that this action is restricted to administrators only\n and you may only withdraw amounts above the sum total allocation balances.\n @param _amount The amount desired to withdraw.\n @return Returns true if the withdrawal was successful."
            },
            "functionSelector": "2f384523",
            "id": 14061,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14022,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14021,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2441:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "2441:9:74"
              }
            ],
            "name": "removeFunds",
            "nameLocation": "2403:11:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14019,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2423:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14061,
                  "src": "2415:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2415:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2414:17:74"
            },
            "returnParameters": {
              "id": 14025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14061,
                  "src": "2460:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2459:6:74"
            },
            "scope": 14177,
            "src": "2394:345:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14084,
              "nodeType": "Block",
              "src": "2926:177:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 14074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14072,
                          "name": "_newMerkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14064,
                          "src": "2957:14:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30783030",
                          "id": 14073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2975:4:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        },
                        "src": "2957:22:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a20496e76616c6964206e6577206d65726b6c6520726f6f742076616c756521",
                        "id": 14075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2993:45:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        },
                        "value": "VestingBase: Invalid new merkle root value!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e581771a4faac57e807aba1aada9f65aef5b4b3cf7c2175b67e4fa33cef4a590",
                          "typeString": "literal_string \"VestingBase: Invalid new merkle root value!\""
                        }
                      ],
                      "id": 14071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2936:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2936:112:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14077,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:112:74"
                },
                {
                  "expression": {
                    "id": 14082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14078,
                        "name": "RootToRounds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13961,
                        "src": "3059:12:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 14080,
                      "indexExpression": {
                        "id": 14079,
                        "name": "_round",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14066,
                        "src": "3072:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3059:20:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14081,
                      "name": "_newMerkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14064,
                      "src": "3082:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3059:37:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 14083,
                  "nodeType": "ExpressionStatement",
                  "src": "3059:37:74"
                }
              ]
            },
            "documentation": {
              "id": 14062,
              "nodeType": "StructuredDocumentation",
              "src": "2745:74:74",
              "text": " @notice This action enables admin to set newMarkelRoot."
            },
            "functionSelector": "7c382d0b",
            "id": 14085,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14069,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14068,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 474,
                  "src": "2912:9:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "2912:9:74"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "2833:13:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14064,
                  "mutability": "mutable",
                  "name": "_newMerkleRoot",
                  "nameLocation": "2855:14:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14085,
                  "src": "2847:22:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14063,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14066,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "2879:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14085,
                  "src": "2871:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:40:74"
            },
            "returnParameters": {
              "id": 14070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2926:0:74"
            },
            "scope": 14177,
            "src": "2824:279:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14175,
              "nodeType": "Block",
              "src": "3443:683:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3474:35:74",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 14101,
                              "name": "vestingClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13957,
                              "src": "3475:14:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 14103,
                            "indexExpression": {
                              "id": 14102,
                              "name": "_round",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14093,
                              "src": "3490:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3475:22:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 14106,
                          "indexExpression": {
                            "expression": {
                              "id": 14104,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3498:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3498:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3475:34:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a2056657374696e6720686173206265656e20636c61696d656421",
                        "id": 14108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3523:40:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        },
                        "value": "VestingBase: Vesting has been claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8c748fd55e1797daad0ec5a4aeb6d0428a904ee2d78274695db2a2ff277904",
                          "typeString": "literal_string \"VestingBase: Vesting has been claimed!\""
                        }
                      ],
                      "id": 14100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3453:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:120:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14110,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:120:74"
                },
                {
                  "assignments": [
                    14112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14112,
                      "mutability": "mutable",
                      "name": "merkleRoot",
                      "nameLocation": "3591:10:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14175,
                      "src": "3583:18:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14111,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3583:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14116,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14113,
                      "name": "RootToRounds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13961,
                      "src": "3604:12:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                        "typeString": "mapping(uint256 => bytes32)"
                      }
                    },
                    "id": 14115,
                    "indexExpression": {
                      "id": 14114,
                      "name": "_round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14093,
                      "src": "3617:6:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3604:20:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3583:41:74"
                },
                {
                  "assignments": [
                    14118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14118,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3642:4:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14175,
                      "src": "3634:12:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14117,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3634:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14127,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 14122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3676:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3676:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14124,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14088,
                            "src": "3688:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 14120,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3659:3:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 14121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3659:16:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 14125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3659:37:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 14119,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3649:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 14126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3649:48:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3634:63:74"
                },
                {
                  "assignments": [
                    14129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14129,
                      "mutability": "mutable",
                      "name": "isValidLeaf",
                      "nameLocation": "3712:11:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14175,
                      "src": "3707:16:74",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 14128,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3707:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14136,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14132,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14091,
                        "src": "3745:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 14133,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14112,
                        "src": "3753:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14134,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14118,
                        "src": "3765:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 14130,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9498,
                        "src": "3726:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$9498_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 14131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9429,
                      "src": "3726:18:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 14135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3726:44:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3707:63:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14138,
                        "name": "isValidLeaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14129,
                        "src": "3788:11:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e67426173653a204164647265737320686173206e6f2056657374696e6720616c6c6f636174696f6e21",
                        "id": 14139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3801:49:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        },
                        "value": "VestingBase: Address has no Vesting allocation!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_295cf2febab0ef406c0c9f3115e4288b6e9d849e6d07acd7c9d5221c99cd6d20",
                          "typeString": "literal_string \"VestingBase: Address has no Vesting allocation!\""
                        }
                      ],
                      "id": 14137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3780:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:71:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14141,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:71:74"
                },
                {
                  "expression": {
                    "id": 14149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 14142,
                          "name": "vestingClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13957,
                          "src": "3896:14:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 14146,
                        "indexExpression": {
                          "id": 14143,
                          "name": "_round",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14093,
                          "src": "3911:6:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3896:22:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 14147,
                      "indexExpression": {
                        "expression": {
                          "id": 14144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3919:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3919:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3896:34:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 14148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3933:4:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3896:41:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14150,
                  "nodeType": "ExpressionStatement",
                  "src": "3896:41:74"
                },
                {
                  "expression": {
                    "id": 14156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14151,
                      "name": "totalWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13947,
                      "src": "3947:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14154,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14088,
                          "src": "3983:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 14152,
                          "name": "totalWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13947,
                          "src": "3964:14:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 14153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10345,
                        "src": "3964:18:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 14155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3964:27:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3947:44:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14157,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:44:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 14161,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4031:3:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4031:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 14163,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14088,
                            "src": "4043:7:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 14159,
                            "name": "vestingCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13951,
                            "src": "4010:11:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$5818",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 14160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5354,
                          "src": "4010:20:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 14164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4010:41:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 14158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4002:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 14165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4002:50:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14166,
                  "nodeType": "ExpressionStatement",
                  "src": "4002:50:74"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 14168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4077:3:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 14169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4077:10:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14170,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14088,
                        "src": "4089:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14167,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13974,
                      "src": "4067:9:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:30:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14172,
                  "nodeType": "EmitStatement",
                  "src": "4062:35:74"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 14173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4115:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 14099,
                  "id": 14174,
                  "nodeType": "Return",
                  "src": "4108:11:74"
                }
              ]
            },
            "documentation": {
              "id": 14086,
              "nodeType": "StructuredDocumentation",
              "src": "3109:183:74",
              "text": " @notice This action enables the beneficiaries to withdraw a desired amount from this contract.\n @param _amount The amount in vesting coin desired to withdraw."
            },
            "functionSelector": "6092dfcb",
            "id": 14176,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14096,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14095,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3670,
                  "src": "3414:13:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "3414:13:74"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3306:8:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14088,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3332:7:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14176,
                  "src": "3324:15:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14091,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "3368:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14176,
                  "src": "3349:25:74",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14089,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3349:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 14090,
                    "nodeType": "ArrayTypeName",
                    "src": "3349:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14093,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "3392:6:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14176,
                  "src": "3384:14:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:90:74"
            },
            "returnParameters": {
              "id": 14099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14098,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14176,
                  "src": "3437:4:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14097,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3437:4:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3436:6:74"
            },
            "scope": 14177,
            "src": "3297:829:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14178,
        "src": "606:3522:74",
        "usedErrors": []
      }
    ],
    "src": "37:4092:74"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-04-15T05:51:10.923Z",
  "devdoc": {
    "details": "A token holder contract that can release its token balance gradually like a typical vesting scheme, vesting period. Optionally revocable by the creator.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_vestingCoin": "The ERC20 contract of the coin being vested."
        }
      },
      "getAvailableFunds()": {
        "returns": {
          "_0": "Returns the closing balance of vesting coin held by this contract."
        }
      },
      "getMerkleRoot(uint256)": {
        "params": {
          "_round": "The round of which markleTree to be viewed."
        },
        "returns": {
          "_0": "Returns Total vested balance."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeFunds(uint256)": {
        "params": {
          "_amount": "The amount desired to withdraw."
        },
        "returns": {
          "_0": "Returns true if the withdrawal was successful."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "params": {
          "_amount": "The amount in vesting coin desired to withdraw."
        }
      }
    },
    "title": "Vesting",
    "version": 1
  },
  "userdoc": {
    "events": {
      "FundRemoved(address,uint256)": {
        "notice": "Events;"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructs this contract"
      },
      "getAvailableFunds()": {
        "notice": "The Vesting Token balance of this smart contract."
      },
      "getMerkleRoot(uint256)": {
        "notice": "Gets the markle tree of each vesting Rounds."
      },
      "removeFunds(uint256)": {
        "notice": "Allows you to withdraw the surplus balance of the vesting coin from this contract. Please note that this action is restricted to administrators only and you may only withdraw amounts above the sum total allocation balances."
      },
      "setMerkleRoot(bytes32,uint256)": {
        "notice": "This action enables admin to set newMarkelRoot."
      },
      "totalWithdrawn()": {
        "notice": "The sum total amount of tokens withdrawn from all allocations."
      },
      "vestingCoin()": {
        "notice": "The ERC20 contract of the coin being vested."
      },
      "withdraw(uint256,bytes32[],uint256)": {
        "notice": "This action enables the beneficiaries to withdraw a desired amount from this contract."
      }
    },
    "version": 1
  }
}