{
	"compiler": {
		"version": "0.8.12+commit.f00d7308"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "AdminAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "AdminRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Pause",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Unpause",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "addAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_accounts",
						"type": "address[]"
					}
				],
				"name": "addManyAdmins",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "admins",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "removeAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_accounts",
						"type": "address[]"
					}
				],
				"name": "removeManyAdmins",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addAdmin(address)": {
					"params": {
						"_address": "The address to add to the administrator list."
					}
				},
				"addManyAdmins(address[])": {
					"params": {
						"_accounts": "The wallet addresses to add to the administrator list."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"removeAdmin(address)": {
					"params": {
						"_address": "The address to remove from the administrator list."
					}
				},
				"removeManyAdmins(address[])": {
					"params": {
						"_accounts": "The wallet addresses to add to the administrator list."
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "This contract enables you to create pausable mechanism to stop in case of emergency.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addAdmin(address)": {
					"notice": "Adds the specified address to the list of administrators."
				},
				"addManyAdmins(address[])": {
					"notice": "Adds multiple addresses to the administrator list."
				},
				"admins(address)": {
					"notice": "List of administrators."
				},
				"pause()": {
					"notice": "Pauses the contract."
				},
				"removeAdmin(address)": {
					"notice": "Removes the specified address from the list of administrators."
				},
				"removeManyAdmins(address[])": {
					"notice": "Removes multiple addresses to the administrator list."
				},
				"unpause()": {
					"notice": "Unpauses the contract and returns to normal state."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/vesting/CustomPausable.sol": "CustomPausable"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xb45e104b4d8ecd7f3ad94bdebd7a76bfa258f5bc91444bb4858f75616cfad140",
			"license": "MIT",
			"urls": [
				"bzz-raw://06abef552fe0601522ef089d68e2f79ed8d15fe0c06dd4f35d7e6e5a1e247363",
				"dweb:/ipfs/QmaT69xxfRukB41W5gWBRDEA5Y96etSExwvqV6qn75g3mg"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/vesting/CustomAdmin.sol": {
			"keccak256": "0x67915c5fb4df6be47ce79b8cb694163c84801c0dd678e570bb8793aafa7a7376",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://3a555e5afa823818ee6ba6180d445c19f501a230f76127ea717588e8b7a3b708",
				"dweb:/ipfs/QmRPNpHpGKoQR68X4SqPXABEpztj8PagrJ3Rmt3g11fNvK"
			]
		},
		"contracts/vesting/CustomPausable.sol": {
			"keccak256": "0x762f7f6014bae61e98d7c87405bbfdbef00fd9c4be3b615d5556f389293ed344",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://39e4d55f7c867937d13ae73838f5c498ae24419a86d364010850e4701899ff04",
				"dweb:/ipfs/QmRN7UGtxJq8K3Dnq9nvbuQkdgq4MyPzKEZUyHuzV6mCbq"
			]
		}
	},
	"version": 1
}